{
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsend = _interopRequireDefault(require(\"jsend\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _tables = _interopRequireDefault(require(\"./models/tables\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // to resolve cross origin resource shearing (CORS) error add folowing to te response header \n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n  next();\n});\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _morgan[\"default\"])('combined'));\napp.use(_jsend[\"default\"].middleware);\n\n_tables[\"default\"].createEmployeeTable();\n\n_tables[\"default\"].createGifTable();\n\n_tables[\"default\"].createArticlesTable();\n\n_tables[\"default\"].createGifCommentTable();\n\n_tables[\"default\"].createArticleCommentTable();\n\n_tables[\"default\"].disconnect();\n\napp.use('/api/v1', _routes[\"default\"]);\napp.get('*', function (req, res) {\n  return res.jsend.success('Teamwork!!!');\n});\nvar port = parseInt(process.env.PORT, 10) || 4000;\napp.listen(port, function () {\n  return (0, _debug[\"default\"])('app:*')(\"Live at \".concat(port));\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJhcHAiLCJ1c2UiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2V0SGVhZGVyIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJqc2VuZCIsIm1pZGRsZXdhcmUiLCJ0YWJsZSIsImNyZWF0ZUVtcGxveWVlVGFibGUiLCJjcmVhdGVHaWZUYWJsZSIsImNyZWF0ZUFydGljbGVzVGFibGUiLCJjcmVhdGVHaWZDb21tZW50VGFibGUiLCJjcmVhdGVBcnRpY2xlQ29tbWVudFRhYmxlIiwiZGlzY29ubmVjdCIsInYxUm91dGVyIiwiZ2V0Iiwic3VjY2VzcyIsInBvcnQiLCJwYXJzZUludCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7OztBQUVBQSxtQkFBT0MsTUFBUDs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN4QkQsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsNkJBQWQsRUFBNkMsR0FBN0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsOEJBQWQsRUFBOEMsd0VBQTlDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDhCQUFkLEVBQThDLHdDQUE5QztBQUNBRCxFQUFBQSxJQUFJO0FBQ0wsQ0FMSDtBQU9BSixHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBUixHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdHLElBQVgsRUFBUjtBQUNBVCxHQUFHLENBQUNDLEdBQUosQ0FBUSwrQkFBUjtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSx3QkFBTyxVQUFQLENBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFTLGtCQUFNQyxVQUFkOztBQUNBQyxtQkFBTUMsbUJBQU47O0FBQ0FELG1CQUFNRSxjQUFOOztBQUNBRixtQkFBTUcsbUJBQU47O0FBQ0FILG1CQUFNSSxxQkFBTjs7QUFDQUosbUJBQU1LLHlCQUFOOztBQUVBTCxtQkFBTU0sVUFBTjs7QUFFQWxCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJrQixrQkFBbkI7QUFFQW5CLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ2xCLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ08sS0FBSixDQUFVVyxPQUFWLENBQWtCLGFBQWxCLENBQWQ7QUFBQSxDQUFiO0FBRUEsSUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFiLEVBQW1CLEVBQW5CLENBQVIsSUFBa0MsSUFBL0M7QUFFQTFCLEdBQUcsQ0FBQzJCLE1BQUosQ0FBV0wsSUFBWCxFQUFpQjtBQUFBLFNBQU0sdUJBQU0sT0FBTixvQkFBMEJBLElBQTFCLEVBQU47QUFBQSxDQUFqQjtBQUVBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUI3QixHQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0BiYWJlbC9wb2x5ZmlsbCc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQganNlbmQgZnJvbSAnanNlbmQnO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCB0YWJsZSBmcm9tICcuL21vZGVscy90YWJsZXMnO1xuXG5pbXBvcnQgdjFSb3V0ZXIgZnJvbSAnLi9yb3V0ZXMnO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gdG8gcmVzb2x2ZSBjcm9zcyBvcmlnaW4gcmVzb3VyY2Ugc2hlYXJpbmcgKENPUlMpIGVycm9yIGFkZCBmb2xvd2luZyB0byB0ZSByZXNwb25zZSBoZWFkZXIgXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsICcqJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdPcmlnaW4sIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQsIEFjY2VwdCwgQ29udGVudC1UeXBlLCBBdXRob3JpemF0aW9uJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdHRVQsIFBPU1QsIFBVVCwgREVMRVRFLCBQQVRDSCwgT1BUSU9OUycpO1xuICAgIG5leHQoKTtcbiAgfSk7XG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UobW9yZ2FuKCdjb21iaW5lZCcpKTtcbmFwcC51c2UoanNlbmQubWlkZGxld2FyZSk7XG50YWJsZS5jcmVhdGVFbXBsb3llZVRhYmxlKCk7XG50YWJsZS5jcmVhdGVHaWZUYWJsZSgpO1xudGFibGUuY3JlYXRlQXJ0aWNsZXNUYWJsZSgpO1xudGFibGUuY3JlYXRlR2lmQ29tbWVudFRhYmxlKCk7XG50YWJsZS5jcmVhdGVBcnRpY2xlQ29tbWVudFRhYmxlKCk7XG5cbnRhYmxlLmRpc2Nvbm5lY3QoKTtcblxuYXBwLnVzZSgnL2FwaS92MScsIHYxUm91dGVyKTtcblxuYXBwLmdldCgnKicsIChyZXEsIHJlcykgPT4gcmVzLmpzZW5kLnN1Y2Nlc3MoJ1RlYW13b3JrISEhJykpO1xuXG5jb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCwgMTApIHx8IDQwMDA7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gZGVidWcoJ2FwcDoqJykoYExpdmUgYXQgJHtwb3J0fWApKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "use",
        "req",
        "res",
        "next",
        "setHeader",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "jsend",
        "middleware",
        "table",
        "createEmployeeTable",
        "createGifTable",
        "createArticlesTable",
        "createGifCommentTable",
        "createArticleCommentTable",
        "disconnect",
        "v1Router",
        "get",
        "success",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wEAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAD,EAAAA,IAAI;AACL,CALH;AAOAJ,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACC,GAAJ,CAAQK,uBAAWG,IAAX,EAAR;AACAT,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,wBAAO,UAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQS,kBAAMC,UAAd;;AACAC,mBAAMC,mBAAN;;AACAD,mBAAME,cAAN;;AACAF,mBAAMG,mBAAN;;AACAH,mBAAMI,qBAAN;;AACAJ,mBAAMK,yBAAN;;AAEAL,mBAAMM,UAAN;;AAEAlB,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBkB,kBAAnB;AAEAnB,GAAG,CAACoB,GAAJ,CAAQ,GAAR,EAAa,UAAClB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACO,KAAJ,CAAUW,OAAV,CAAkB,aAAlB,CAAd;AAAA,CAAb;AAEA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AAEA1B,GAAG,CAAC2B,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAM,uBAAM,OAAN,oBAA0BA,IAA1B,EAAN;AAAA,CAAjB;AAEAM,MAAM,CAACC,OAAP,GAAiB7B,GAAjB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "sourcesContent": [
        "import '@babel/polyfill';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport dotenv from 'dotenv';\nimport express from 'express';\nimport jsend from 'jsend';\nimport morgan from 'morgan';\nimport debug from 'debug';\nimport table from './models/tables';\n\nimport v1Router from './routes';\n\ndotenv.config();\n\nconst app = express();\n\n// to resolve cross origin resource shearing (CORS) error add folowing to te response header \napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    next();\n  });\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(morgan('combined'));\napp.use(jsend.middleware);\ntable.createEmployeeTable();\ntable.createGifTable();\ntable.createArticlesTable();\ntable.createGifCommentTable();\ntable.createArticleCommentTable();\n\ntable.disconnect();\n\napp.use('/api/v1', v1Router);\n\napp.get('*', (req, res) => res.jsend.success('Teamwork!!!'));\n\nconst port = parseInt(process.env.PORT, 10) || 4000;\n\napp.listen(port, () => debug('app:*')(`Live at ${port}`));\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573705783317
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\tables.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "tables.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar tables = _defineProperty({\n  // create user tables if not exist\n  createEmployeeTable: function createEmployeeTable() {\n    var employee = \"CREATE TABLE IF NOT EXISTS\\n       employee( \\n          id SERIAL PRIMARY KEY, \\n          firstName VARCHAR NOT NULL,\\n          lastName VARCHAR NOT NULL,\\n          email VARCHAR NOT NULL,\\n          password VARCHAR NOT NULL,\\n          gender VARCHAR NOT NULL,\\n          jobRole VARCHAR NOT NULL,\\n          isAdmin BOOLEAN DEFAULT FALSE,\\n          department VARCHAR NOT NULL,\\n          regDate TIMESTAMP DEFAULT NOW()\\n        )\";\n\n    _dbconnect[\"default\"].query(employee).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table employee is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createGifTable: function createGifTable() {\n    var gif = \"CREATE TABLE IF NOT EXISTS\\n      gif(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        imageUrl VARCHAR NOT NULL,\\n        title VARCHAR NOT NULL,\\n        gifDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(gif).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table gif is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createArticlesTable: function createArticlesTable() {\n    var articles = \"CREATE TABLE IF NOT EXISTS\\n      articles(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        title VARCHAR NOT NULL,\\n        article VARCHAR NOT NULL,\\n        articleDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(articles).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table articles is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createGifCommentTable: function createGifCommentTable() {\n    var comment = \"CREATE TABLE IF NOT EXISTS\\n      gif_comment(\\n        id SERIAL PRIMARY KEY,\\n        gif_id INT NOT NULL,\\n        employee_id INT NOT NULL,\\n        comment VARCHAR NOT NULL,\\n        comment_date TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(comment).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table gif_comment is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  disconnect: function disconnect() {\n    // disconnect client\n    _dbconnect[\"default\"].on('remove', function () {\n      (0, _debug[\"default\"])('app:database')('Tables created successfully, conection removed');\n    });\n  },\n  createArticleCommentTable: function createArticleCommentTable() {\n    var comment = \"CREATE TABLE IF NOT EXISTS\\n      article_comment(\\n        id SERIAL PRIMARY KEY,\\n        article_id INT NOT NULL,\\n        employee_id INT NOT NULL,\\n        comment VARCHAR NOT NULL,\\n        comment_date TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(comment).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table article_comment is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  }\n}, \"disconnect\", function disconnect() {\n  // disconnect client\n  _dbconnect[\"default\"].on('remove', function () {\n    (0, _debug[\"default\"])('app:database')('Tables created successfully, conection removed');\n  });\n}); // export utilities to be accessible  from any where within the application\n\n\nvar _default = tables;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlcy5qcyJdLCJuYW1lcyI6WyJ0YWJsZXMiLCJjcmVhdGVFbXBsb3llZVRhYmxlIiwiZW1wbG95ZWUiLCJwb29sIiwicXVlcnkiLCJ0aGVuIiwicmVzIiwiZXJyIiwiY3JlYXRlR2lmVGFibGUiLCJnaWYiLCJjcmVhdGVBcnRpY2xlc1RhYmxlIiwiYXJ0aWNsZXMiLCJjcmVhdGVHaWZDb21tZW50VGFibGUiLCJjb21tZW50IiwiZGlzY29ubmVjdCIsIm9uIiwiY3JlYXRlQXJ0aWNsZUNvbW1lbnRUYWJsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUVBOzs7Ozs7QUFFQSxJQUFNQSxNQUFNO0FBQ1Y7QUFDQUMsRUFBQUEsbUJBQW1CLEVBQUUsK0JBQU07QUFDekIsUUFBTUMsUUFBUSw0YkFBZDs7QUFhQUMsMEJBQUtDLEtBQUwsQ0FBV0YsUUFBWCxFQUNHRyxJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFTO0FBQ2IsNkJBQU0sT0FBTix3Q0FBOENBLEdBQTlDO0FBQ0QsS0FISCxXQUlTLFVBQUNDLEdBQUQsRUFBUztBQUNkLDZCQUFNLE9BQU4sRUFBZUEsR0FBZjtBQUNELEtBTkg7QUFPRCxHQXZCUztBQXdCVkMsRUFBQUEsY0FBYyxFQUFFLDBCQUFNO0FBQ3BCLFFBQU1DLEdBQUcscU9BQVQ7O0FBUUFOLDBCQUFLQyxLQUFMLENBQVdLLEdBQVgsRUFDR0osSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sbUNBQXlDQSxHQUF6QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F4Q1M7QUF5Q1ZHLEVBQUFBLG1CQUFtQixFQUFFLCtCQUFNO0FBQ3pCLFFBQU1DLFFBQVEsNk9BQWQ7O0FBUUFSLDBCQUFLQyxLQUFMLENBQVdPLFFBQVgsRUFDR04sSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sd0NBQThDQSxHQUE5QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F6RFM7QUEwRFZLLEVBQUFBLHFCQUFxQixFQUFFLGlDQUFNO0FBQzNCLFFBQU1DLE9BQU8sOE9BQWI7O0FBUUFWLDBCQUFLQyxLQUFMLENBQVdTLE9BQVgsRUFDR1IsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sMkNBQWlEQSxHQUFqRDtBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0ExRVM7QUEyRVRPLEVBQUFBLFVBQVUsRUFBRSxzQkFBTTtBQUNqQjtBQUNBWCwwQkFBS1ksRUFBTCxDQUFRLFFBQVIsRUFBa0IsWUFBTTtBQUN0Qiw2QkFBTSxjQUFOLEVBQXNCLGdEQUF0QjtBQUNELEtBRkQ7QUFHRCxHQWhGUztBQWlGVkMsRUFBQUEseUJBQXlCLEVBQUUscUNBQU07QUFDL0IsUUFBTUgsT0FBTyxzUEFBYjs7QUFRQVYsMEJBQUtDLEtBQUwsQ0FBV1MsT0FBWCxFQUNHUixJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFTO0FBQ2IsNkJBQU0sT0FBTiwrQ0FBcURBLEdBQXJEO0FBQ0QsS0FISCxXQUlTLFVBQUNDLEdBQUQsRUFBUztBQUNkLDZCQUFNLE9BQU4sRUFBZUEsR0FBZjtBQUNELEtBTkg7QUFPRDtBQWpHUyxpQkFrR0csc0JBQU07QUFDakI7QUFDQUosd0JBQUtZLEVBQUwsQ0FBUSxRQUFSLEVBQWtCLFlBQU07QUFDdEIsMkJBQU0sY0FBTixFQUFzQixnREFBdEI7QUFDRCxHQUZEO0FBR0QsQ0F2R1MsQ0FBWixDLENBeUdBOzs7ZUFDZWYsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldCBkZWJ1ZyBtb2R1bGUgZm9yIGRlYnVnZ2luZyBtb2RlXG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuLy8gZ2V0IHBvc3RncmVzIGNvbm5lY3Rpb24gcG9vbCBmb3IgZGF0YWJhc2UgcXVlcnlcbmltcG9ydCBwb29sIGZyb20gJy4uL2RhdGFiYXNlL2RiY29ubmVjdCc7XG5cbmNvbnN0IHRhYmxlcyA9IHtcbiAgLy8gY3JlYXRlIHVzZXIgdGFibGVzIGlmIG5vdCBleGlzdFxuICBjcmVhdGVFbXBsb3llZVRhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgZW1wbG95ZWUgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgICBlbXBsb3llZSggXG4gICAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLCBcbiAgICAgICAgICBmaXJzdE5hbWUgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBsYXN0TmFtZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIGVtYWlsIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgcGFzc3dvcmQgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBnZW5kZXIgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBqb2JSb2xlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgaXNBZG1pbiBCT09MRUFOIERFRkFVTFQgRkFMU0UsXG4gICAgICAgICAgZGVwYXJ0bWVudCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIHJlZ0RhdGUgVElNRVNUQU1QIERFRkFVTFQgTk9XKClcbiAgICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShlbXBsb3llZSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGVtcGxveWVlIGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gIGNyZWF0ZUdpZlRhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgZ2lmID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTXG4gICAgICBnaWYoXG4gICAgICAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICBpbWFnZVVybCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICB0aXRsZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBnaWZEYXRlIFRJTUVTVEFNUCBERUZBVUxUIE5PVygpXG4gICAgICApYDtcbiAgICBwb29sLnF1ZXJ5KGdpZilcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGdpZiBpcyBhdmFpbGFibGUgJHtyZXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoZXJyKTtcbiAgICAgIH0pO1xuICB9LFxuICBjcmVhdGVBcnRpY2xlc1RhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgYXJ0aWNsZXMgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGFydGljbGVzKFxuICAgICAgICBpZCBTRVJJQUwgUFJJTUFSWSBLRVksXG4gICAgICAgIGVtcGxveWVlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgdGl0bGUgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgYXJ0aWNsZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBhcnRpY2xlRGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShhcnRpY2xlcylcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGFydGljbGVzIGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gIGNyZWF0ZUdpZkNvbW1lbnRUYWJsZTogKCkgPT4ge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGdpZl9jb21tZW50KFxuICAgICAgICBpZCBTRVJJQUwgUFJJTUFSWSBLRVksXG4gICAgICAgIGdpZl9pZCBJTlQgTk9UIE5VTEwsXG4gICAgICAgIGVtcGxveWVlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgY29tbWVudCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBjb21tZW50X2RhdGUgVElNRVNUQU1QIERFRkFVTFQgTk9XKClcbiAgICAgIClgO1xuICAgIHBvb2wucXVlcnkoY29tbWVudClcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGdpZl9jb21tZW50IGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gICBkaXNjb25uZWN0OiAoKSA9PiB7XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOmRhdGFiYXNlJykoJ1RhYmxlcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseSwgY29uZWN0aW9uIHJlbW92ZWQnKTtcbiAgICB9KTtcbiAgfSxcbiAgY3JlYXRlQXJ0aWNsZUNvbW1lbnRUYWJsZTogKCkgPT4ge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGFydGljbGVfY29tbWVudChcbiAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLFxuICAgICAgICBhcnRpY2xlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICBjb21tZW50IFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGNvbW1lbnRfZGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShjb21tZW50KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgYXJ0aWNsZV9jb21tZW50IGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gICBkaXNjb25uZWN0OiAoKSA9PiB7XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOmRhdGFiYXNlJykoJ1RhYmxlcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseSwgY29uZWN0aW9uIHJlbW92ZWQnKTtcbiAgICB9KTtcbiAgfSxcbn07XG4vLyBleHBvcnQgdXRpbGl0aWVzIHRvIGJlIGFjY2Vzc2libGUgIGZyb20gYW55IHdoZXJlIHdpdGhpbiB0aGUgYXBwbGljYXRpb25cbmV4cG9ydCBkZWZhdWx0IHRhYmxlcztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tables.js"
      ],
      "names": [
        "tables",
        "createEmployeeTable",
        "employee",
        "pool",
        "query",
        "then",
        "res",
        "err",
        "createGifTable",
        "gif",
        "createArticlesTable",
        "articles",
        "createGifCommentTable",
        "comment",
        "disconnect",
        "on",
        "createArticleCommentTable"
      ],
      "mappings": ";;;;;;;AACA;;AAEA;;;;;;AAEA,IAAMA,MAAM;AACV;AACAC,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,4bAAd;;AAaAC,0BAAKC,KAAL,CAAWF,QAAX,EACGG,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAvBS;AAwBVC,EAAAA,cAAc,EAAE,0BAAM;AACpB,QAAMC,GAAG,qOAAT;;AAQAN,0BAAKC,KAAL,CAAWK,GAAX,EACGJ,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,mCAAyCA,GAAzC;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAxCS;AAyCVG,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,6OAAd;;AAQAR,0BAAKC,KAAL,CAAWO,QAAX,EACGN,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAzDS;AA0DVK,EAAAA,qBAAqB,EAAE,iCAAM;AAC3B,QAAMC,OAAO,8OAAb;;AAQAV,0BAAKC,KAAL,CAAWS,OAAX,EACGR,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,2CAAiDA,GAAjD;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GA1ES;AA2ETO,EAAAA,UAAU,EAAE,sBAAM;AACjB;AACAX,0BAAKY,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,6BAAM,cAAN,EAAsB,gDAAtB;AACD,KAFD;AAGD,GAhFS;AAiFVC,EAAAA,yBAAyB,EAAE,qCAAM;AAC/B,QAAMH,OAAO,sPAAb;;AAQAV,0BAAKC,KAAL,CAAWS,OAAX,EACGR,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,+CAAqDA,GAArD;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD;AAjGS,iBAkGG,sBAAM;AACjB;AACAJ,wBAAKY,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,2BAAM,cAAN,EAAsB,gDAAtB;AACD,GAFD;AAGD,CAvGS,CAAZ,C,CAyGA;;;eACef,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "// get debug module for debugging mode\nimport debug from 'debug';\n// get postgres connection pool for database query\nimport pool from '../database/dbconnect';\n\nconst tables = {\n  // create user tables if not exist\n  createEmployeeTable: () => {\n    const employee = `CREATE TABLE IF NOT EXISTS\n       employee( \n          id SERIAL PRIMARY KEY, \n          firstName VARCHAR NOT NULL,\n          lastName VARCHAR NOT NULL,\n          email VARCHAR NOT NULL,\n          password VARCHAR NOT NULL,\n          gender VARCHAR NOT NULL,\n          jobRole VARCHAR NOT NULL,\n          isAdmin BOOLEAN DEFAULT FALSE,\n          department VARCHAR NOT NULL,\n          regDate TIMESTAMP DEFAULT NOW()\n        )`;\n    pool.query(employee)\n      .then((res) => {\n        debug('app:*')(`table employee is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createGifTable: () => {\n    const gif = `CREATE TABLE IF NOT EXISTS\n      gif(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        imageUrl VARCHAR NOT NULL,\n        title VARCHAR NOT NULL,\n        gifDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(gif)\n      .then((res) => {\n        debug('app:*')(`table gif is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createArticlesTable: () => {\n    const articles = `CREATE TABLE IF NOT EXISTS\n      articles(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        title VARCHAR NOT NULL,\n        article VARCHAR NOT NULL,\n        articleDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(articles)\n      .then((res) => {\n        debug('app:*')(`table articles is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createGifCommentTable: () => {\n    const comment = `CREATE TABLE IF NOT EXISTS\n      gif_comment(\n        id SERIAL PRIMARY KEY,\n        gif_id INT NOT NULL,\n        employee_id INT NOT NULL,\n        comment VARCHAR NOT NULL,\n        comment_date TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(comment)\n      .then((res) => {\n        debug('app:*')(`table gif_comment is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n   disconnect: () => {\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:database')('Tables created successfully, conection removed');\n    });\n  },\n  createArticleCommentTable: () => {\n    const comment = `CREATE TABLE IF NOT EXISTS\n      article_comment(\n        id SERIAL PRIMARY KEY,\n        article_id INT NOT NULL,\n        employee_id INT NOT NULL,\n        comment VARCHAR NOT NULL,\n        comment_date TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(comment)\n      .then((res) => {\n        debug('app:*')(`table article_comment is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n   disconnect: () => {\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:database')('Tables created successfully, conection removed');\n    });\n  },\n};\n// export utilities to be accessible  from any where within the application\nexport default tables;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573739836084
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\\\\dbconnect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
        "sourceFileName": "dbconnect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _config = _interopRequireDefault(require(\"../config/config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// get node postgres connector\nvar env = process.env.NODE_ENV ? process.env.NODE_ENV : 'development'; //const config = configuration[env];\n\nconsole.log('this is the environment: ', env);\n\nif (env === 'production') {\n  var pool = _pg[\"default\"].Pool(_config[\"default\"].production);\n\n  pool.on('connect', function () {\n    (0, _debug[\"default\"])('app:database')('connected to the Database');\n    module.exports = pool;\n  });\n} else if (env === 'test') {\n  var _pool = _pg[\"default\"].Pool(_config[\"default\"].test);\n\n  _pool.on('connect', function () {\n    (0, _debug[\"default\"])('app:database')('connected to the Database');\n  });\n\n  module.exports = _pool;\n} else {\n  var _pool2 = _pg[\"default\"].Pool(_config[\"default\"].development);\n\n  _pool2.on('connect', function () {\n    (0, _debug[\"default\"])('app:database')('connected to the Database');\n  });\n\n  module.exports = _pool2;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29ubmVjdC5qcyJdLCJuYW1lcyI6WyJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25zb2xlIiwibG9nIiwicG9vbCIsInBnIiwiUG9vbCIsImNvbmZpZ3VyYXRpb24iLCJwcm9kdWN0aW9uIiwib24iLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsImRldmVsb3BtZW50Il0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOztBQUNBOzs7O0FBSEE7QUFLQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRSxRQUFaLEdBQXVCRCxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBbkMsR0FBOEMsYUFBMUQsQyxDQUVBOztBQUVBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWixFQUF5Q0osR0FBekM7O0FBRUEsSUFBSUEsR0FBRyxLQUFLLFlBQVosRUFBMEI7QUFDMUIsTUFBTUssSUFBSSxHQUFHQyxlQUFHQyxJQUFILENBQVFDLG1CQUFjQyxVQUF0QixDQUFiOztBQUNBSixFQUFBQSxJQUFJLENBQUNLLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIsMkJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxJQUFqQjtBQUNELEdBSEQ7QUFJQyxDQU5ELE1BTU8sSUFBSUwsR0FBRyxLQUFLLE1BQVosRUFBb0I7QUFDekIsTUFBTUssS0FBSSxHQUFHQyxlQUFHQyxJQUFILENBQVFDLG1CQUFjSyxJQUF0QixDQUFiOztBQUNBUixFQUFBQSxLQUFJLENBQUNLLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIsMkJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDRCxHQUZEOztBQUdBQyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLEtBQWpCO0FBQ0QsQ0FOTSxNQU1BO0FBQ0wsTUFBTUEsTUFBSSxHQUFHQyxlQUFHQyxJQUFILENBQVFDLG1CQUFjTSxXQUF0QixDQUFiOztBQUNBVCxFQUFBQSxNQUFJLENBQUNLLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIsMkJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDRCxHQUZEOztBQUdBQyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCO0FBQ0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxkYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldCBub2RlIHBvc3RncmVzIGNvbm5lY3RvclxuaW1wb3J0IHBnIGZyb20gJ3BnJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgY29uZmlndXJhdGlvbiBmcm9tICcuLi9jb25maWcvY29uZmlnJ1xuXG5jb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHByb2Nlc3MuZW52Lk5PREVfRU5WIDogJ2RldmVsb3BtZW50JztcblxuLy9jb25zdCBjb25maWcgPSBjb25maWd1cmF0aW9uW2Vudl07XG5cbmNvbnNvbGUubG9nKCd0aGlzIGlzIHRoZSBlbnZpcm9ubWVudDogJywgZW52ICk7XG5cbmlmIChlbnYgPT09ICdwcm9kdWN0aW9uJykge1xuY29uc3QgcG9vbCA9IHBnLlBvb2woY29uZmlndXJhdGlvbi5wcm9kdWN0aW9uKTtcbnBvb2wub24oJ2Nvbm5lY3QnLCAoKSA9PiB7XG4gIGRlYnVnKCdhcHA6ZGF0YWJhc2UnKSgnY29ubmVjdGVkIHRvIHRoZSBEYXRhYmFzZScpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHBvb2w7XG59KTtcbn0gZWxzZSBpZiAoZW52ID09PSAndGVzdCcpIHtcbiAgY29uc3QgcG9vbCA9IHBnLlBvb2woY29uZmlndXJhdGlvbi50ZXN0KTtcbiAgcG9vbC5vbignY29ubmVjdCcsICgpID0+IHtcbiAgICBkZWJ1ZygnYXBwOmRhdGFiYXNlJykoJ2Nvbm5lY3RlZCB0byB0aGUgRGF0YWJhc2UnKTtcbiAgfSk7XG4gIG1vZHVsZS5leHBvcnRzID0gcG9vbDtcbn0gZWxzZSB7XG4gIGNvbnN0IHBvb2wgPSBwZy5Qb29sKGNvbmZpZ3VyYXRpb24uZGV2ZWxvcG1lbnQpO1xuICBwb29sLm9uKCdjb25uZWN0JywgKCkgPT4ge1xuICAgIGRlYnVnKCdhcHA6ZGF0YWJhc2UnKSgnY29ubmVjdGVkIHRvIHRoZSBEYXRhYmFzZScpO1xuICB9KTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBwb29sO1xufVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dbconnect.js"
      ],
      "names": [
        "env",
        "process",
        "NODE_ENV",
        "console",
        "log",
        "pool",
        "pg",
        "Pool",
        "configuration",
        "production",
        "on",
        "module",
        "exports",
        "test",
        "development"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,GAAuBD,OAAO,CAACD,GAAR,CAAYE,QAAnC,GAA8C,aAA1D,C,CAEA;;AAEAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCJ,GAAzC;;AAEA,IAAIA,GAAG,KAAK,YAAZ,EAA0B;AAC1B,MAAMK,IAAI,GAAGC,eAAGC,IAAH,CAAQC,mBAAcC,UAAtB,CAAb;;AACAJ,EAAAA,IAAI,CAACK,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,2BAAM,cAAN,EAAsB,2BAAtB;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBP,IAAjB;AACD,GAHD;AAIC,CAND,MAMO,IAAIL,GAAG,KAAK,MAAZ,EAAoB;AACzB,MAAMK,KAAI,GAAGC,eAAGC,IAAH,CAAQC,mBAAcK,IAAtB,CAAb;;AACAR,EAAAA,KAAI,CAACK,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,2BAAM,cAAN,EAAsB,2BAAtB;AACD,GAFD;;AAGAC,EAAAA,MAAM,CAACC,OAAP,GAAiBP,KAAjB;AACD,CANM,MAMA;AACL,MAAMA,MAAI,GAAGC,eAAGC,IAAH,CAAQC,mBAAcM,WAAtB,CAAb;;AACAT,EAAAA,MAAI,CAACK,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,2BAAM,cAAN,EAAsB,2BAAtB;AACD,GAFD;;AAGAC,EAAAA,MAAM,CAACC,OAAP,GAAiBP,MAAjB;AACD",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "sourcesContent": [
        "// get node postgres connector\nimport pg from 'pg';\nimport debug from 'debug';\nimport configuration from '../config/config'\n\nconst env = process.env.NODE_ENV ? process.env.NODE_ENV : 'development';\n\n//const config = configuration[env];\n\nconsole.log('this is the environment: ', env );\n\nif (env === 'production') {\nconst pool = pg.Pool(configuration.production);\npool.on('connect', () => {\n  debug('app:database')('connected to the Database');\n  module.exports = pool;\n});\n} else if (env === 'test') {\n  const pool = pg.Pool(configuration.test);\n  pool.on('connect', () => {\n    debug('app:database')('connected to the Database');\n  });\n  module.exports = pool;\n} else {\n  const pool = pg.Pool(configuration.development);\n  pool.on('connect', () => {\n    debug('app:database')('connected to the Database');\n  });\n  module.exports = pool;\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573395473363
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _validator = _interopRequireDefault(require(\"../middlewares/validator\"));\n\nvar _authenticator = _interopRequireDefault(require(\"../middlewares/authenticator\"));\n\nvar _users = _interopRequireDefault(require(\"../controllers/users\"));\n\nvar _gifs = _interopRequireDefault(require(\"../controllers/gifs\"));\n\nvar _articles = _interopRequireDefault(require(\"../controllers/articles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // user auth\n\n\nrouter.post('/auth/create-user', _validator[\"default\"].auth, _users[\"default\"].signup);\nrouter.post('/auth/signin', _validator[\"default\"].auth, _users[\"default\"].login); // Create gifs\n\nrouter.post('/gifs', _authenticator[\"default\"], _gifs[\"default\"].create); // Delete a gif\n\nrouter[\"delete\"]('/gifs/:gifId', _authenticator[\"default\"], _validator[\"default\"].checkGifIdParams, _gifs[\"default\"][\"delete\"]); // Delete a gif comment\n\nrouter[\"delete\"]('/gifs/:gifID/comment/:commentId', _authenticator[\"default\"], _validator[\"default\"].checkCommentIdParams, _gifs[\"default\"].deleteComment); // Create article\n\nrouter.post('/articles', _authenticator[\"default\"], _validator[\"default\"].article, _articles[\"default\"].create); // Edit an article\n\nrouter.patch('/articles/:articleId', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"].edit); // Delete an article\n\nrouter[\"delete\"]('/articles/:articleId', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"][\"delete\"]); // Delete an article comment\n\nrouter[\"delete\"]('/articles/:articleId/comment/:commentId', _authenticator[\"default\"], _validator[\"default\"].checkCommentIdParams, _articles[\"default\"].deleteComment); // Comment on an article\n\nrouter.post('/articles/:articleId/comment', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"].createComment); // Comment on a gif\n\nrouter.post('/gifs/:gifId/comment/', _authenticator[\"default\"], _validator[\"default\"].checkGifIdParams, _gifs[\"default\"].createComment); // View all article or gif with recent first\n\nrouter.get('/feed', _authenticator[\"default\"], _articles[\"default\"].getFeed); // View  a specific article\n\nrouter.get('/articles/:articleId', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"].getOne); // View  a specific gif\n\nrouter.get('/gifs/:gifId', _authenticator[\"default\"], _validator[\"default\"].checkGifIdParams, _gifs[\"default\"].getOne);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwidmFsaWRhdG9yIiwiYXV0aCIsInVzZXJzIiwic2lnbnVwIiwibG9naW4iLCJhdXRoZW50aWNhdG9yIiwiZ2lmIiwiY3JlYXRlIiwiY2hlY2tHaWZJZFBhcmFtcyIsImNoZWNrQ29tbWVudElkUGFyYW1zIiwiZGVsZXRlQ29tbWVudCIsImFydGljbGUiLCJwYXRjaCIsImNoZWNrQXJ0aWNsZUlkUGFyYW1zIiwiZWRpdCIsImNyZWF0ZUNvbW1lbnQiLCJnZXQiLCJnZXRGZWVkIiwiZ2V0T25lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWYsQyxDQUVBOzs7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksbUJBQVosRUFBaUNDLHNCQUFVQyxJQUEzQyxFQUFrREMsa0JBQU1DLE1BQXhEO0FBQ0FQLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGNBQVosRUFBNEJDLHNCQUFVQyxJQUF0QyxFQUE0Q0Msa0JBQU1FLEtBQWxELEUsQ0FFQTs7QUFDQVIsTUFBTSxDQUFDRyxJQUFQLENBQVksT0FBWixFQUFxQk0seUJBQXJCLEVBQW9DQyxpQkFBSUMsTUFBeEMsRSxDQUVBOztBQUNBWCxNQUFNLFVBQU4sQ0FBYyxjQUFkLEVBQThCUyx5QkFBOUIsRUFBNkNMLHNCQUFVUSxnQkFBdkQsRUFBeUVGLDBCQUF6RSxFLENBRUE7O0FBQ0FWLE1BQU0sVUFBTixDQUFjLGlDQUFkLEVBQWlEUyx5QkFBakQsRUFBZ0VMLHNCQUFVUyxvQkFBMUUsRUFBaUdILGlCQUFJSSxhQUFyRyxFLENBRUE7O0FBQ0FkLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFdBQVosRUFBeUJNLHlCQUF6QixFQUF3Q0wsc0JBQVVXLE9BQWxELEVBQTJEQSxxQkFBUUosTUFBbkUsRSxDQUVBOztBQUNBWCxNQUFNLENBQUNnQixLQUFQLENBQWEsc0JBQWIsRUFBcUNQLHlCQUFyQyxFQUFvREwsc0JBQVVhLG9CQUE5RCxFQUFvRkYscUJBQVFHLElBQTVGLEUsQ0FFQTs7QUFDQWxCLE1BQU0sVUFBTixDQUFjLHNCQUFkLEVBQXNDUyx5QkFBdEMsRUFBcURMLHNCQUFVYSxvQkFBL0QsRUFBcUZGLDhCQUFyRixFLENBRUE7O0FBQ0FmLE1BQU0sVUFBTixDQUFjLHlDQUFkLEVBQXlEUyx5QkFBekQsRUFBd0VMLHNCQUFVUyxvQkFBbEYsRUFBd0dFLHFCQUFRRCxhQUFoSCxFLENBRUE7O0FBQ0FkLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLDhCQUFaLEVBQTRDTSx5QkFBNUMsRUFBMkRMLHNCQUFVYSxvQkFBckUsRUFBMkZGLHFCQUFRSSxhQUFuRyxFLENBRUE7O0FBQ0FuQixNQUFNLENBQUNHLElBQVAsQ0FBWSx1QkFBWixFQUFvQ00seUJBQXBDLEVBQW1ETCxzQkFBVVEsZ0JBQTdELEVBQStFRixpQkFBSVMsYUFBbkYsRSxDQUVBOztBQUNBbkIsTUFBTSxDQUFDb0IsR0FBUCxDQUFXLE9BQVgsRUFBb0JYLHlCQUFwQixFQUFtQ00scUJBQVFNLE9BQTNDLEUsQ0FFQTs7QUFDQXJCLE1BQU0sQ0FBQ29CLEdBQVAsQ0FBWSxzQkFBWixFQUFvQ1gseUJBQXBDLEVBQW1ETCxzQkFBVWEsb0JBQTdELEVBQW1GRixxQkFBUU8sTUFBM0YsRSxDQUVBOztBQUNBdEIsTUFBTSxDQUFDb0IsR0FBUCxDQUFZLGNBQVosRUFBNEJYLHlCQUE1QixFQUEyQ0wsc0JBQVVRLGdCQUFyRCxFQUF1RUYsaUJBQUlZLE1BQTNFO2VBRWV0QixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB2YWxpZGF0b3IgZnJvbSAnLi4vbWlkZGxld2FyZXMvdmFsaWRhdG9yJztcbmltcG9ydCBhdXRoZW50aWNhdG9yIGZyb20gJy4uL21pZGRsZXdhcmVzL2F1dGhlbnRpY2F0b3InO1xuaW1wb3J0IHVzZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJzJztcbmltcG9ydCBnaWYgZnJvbSAnLi4vY29udHJvbGxlcnMvZ2lmcyc7XG5pbXBvcnQgYXJ0aWNsZSBmcm9tICcuLi9jb250cm9sbGVycy9hcnRpY2xlcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIHVzZXIgYXV0aFxucm91dGVyLnBvc3QoJy9hdXRoL2NyZWF0ZS11c2VyJywgdmFsaWRhdG9yLmF1dGgsICB1c2Vycy5zaWdudXApO1xucm91dGVyLnBvc3QoJy9hdXRoL3NpZ25pbicsIHZhbGlkYXRvci5hdXRoLCB1c2Vycy5sb2dpbik7XG5cbi8vIENyZWF0ZSBnaWZzXG5yb3V0ZXIucG9zdCgnL2dpZnMnLCBhdXRoZW50aWNhdG9yLCBnaWYuY3JlYXRlKTtcblxuLy8gRGVsZXRlIGEgZ2lmXG5yb3V0ZXIuZGVsZXRlKCcvZ2lmcy86Z2lmSWQnLCBhdXRoZW50aWNhdG9yLCB2YWxpZGF0b3IuY2hlY2tHaWZJZFBhcmFtcywgZ2lmLmRlbGV0ZSk7XG5cbi8vIERlbGV0ZSBhIGdpZiBjb21tZW50XG5yb3V0ZXIuZGVsZXRlKCcvZ2lmcy86Z2lmSUQvY29tbWVudC86Y29tbWVudElkJywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrQ29tbWVudElkUGFyYW1zLCAgZ2lmLmRlbGV0ZUNvbW1lbnQpO1xuXG4vLyBDcmVhdGUgYXJ0aWNsZVxucm91dGVyLnBvc3QoJy9hcnRpY2xlcycsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5hcnRpY2xlLCBhcnRpY2xlLmNyZWF0ZSk7XG5cbi8vIEVkaXQgYW4gYXJ0aWNsZVxucm91dGVyLnBhdGNoKCcvYXJ0aWNsZXMvOmFydGljbGVJZCcsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5jaGVja0FydGljbGVJZFBhcmFtcywgYXJ0aWNsZS5lZGl0KTtcblxuLy8gRGVsZXRlIGFuIGFydGljbGVcbnJvdXRlci5kZWxldGUoJy9hcnRpY2xlcy86YXJ0aWNsZUlkJywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrQXJ0aWNsZUlkUGFyYW1zLCBhcnRpY2xlLmRlbGV0ZSk7XG5cbi8vIERlbGV0ZSBhbiBhcnRpY2xlIGNvbW1lbnRcbnJvdXRlci5kZWxldGUoJy9hcnRpY2xlcy86YXJ0aWNsZUlkL2NvbW1lbnQvOmNvbW1lbnRJZCcsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5jaGVja0NvbW1lbnRJZFBhcmFtcywgYXJ0aWNsZS5kZWxldGVDb21tZW50KTtcblxuLy8gQ29tbWVudCBvbiBhbiBhcnRpY2xlXG5yb3V0ZXIucG9zdCgnL2FydGljbGVzLzphcnRpY2xlSWQvY29tbWVudCcsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5jaGVja0FydGljbGVJZFBhcmFtcywgYXJ0aWNsZS5jcmVhdGVDb21tZW50KTtcblxuLy8gQ29tbWVudCBvbiBhIGdpZlxucm91dGVyLnBvc3QoJy9naWZzLzpnaWZJZC9jb21tZW50LycsYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrR2lmSWRQYXJhbXMsIGdpZi5jcmVhdGVDb21tZW50KTtcblxuLy8gVmlldyBhbGwgYXJ0aWNsZSBvciBnaWYgd2l0aCByZWNlbnQgZmlyc3RcbnJvdXRlci5nZXQoJy9mZWVkJywgYXV0aGVudGljYXRvciwgYXJ0aWNsZS5nZXRGZWVkKTtcblxuLy8gVmlldyAgYSBzcGVjaWZpYyBhcnRpY2xlXG5yb3V0ZXIuZ2V0KCAnL2FydGljbGVzLzphcnRpY2xlSWQnLCBhdXRoZW50aWNhdG9yLCB2YWxpZGF0b3IuY2hlY2tBcnRpY2xlSWRQYXJhbXMsIGFydGljbGUuZ2V0T25lLCk7XG5cbi8vIFZpZXcgIGEgc3BlY2lmaWMgZ2lmXG5yb3V0ZXIuZ2V0KCAnL2dpZnMvOmdpZklkJywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrR2lmSWRQYXJhbXMsIGdpZi5nZXRPbmUsKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "validator",
        "auth",
        "users",
        "signup",
        "login",
        "authenticator",
        "gif",
        "create",
        "checkGifIdParams",
        "checkCommentIdParams",
        "deleteComment",
        "article",
        "patch",
        "checkArticleIdParams",
        "edit",
        "createComment",
        "get",
        "getFeed",
        "getOne"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,mBAAZ,EAAiCC,sBAAUC,IAA3C,EAAkDC,kBAAMC,MAAxD;AACAP,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,sBAAUC,IAAtC,EAA4CC,kBAAME,KAAlD,E,CAEA;;AACAR,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBM,yBAArB,EAAoCC,iBAAIC,MAAxC,E,CAEA;;AACAX,MAAM,UAAN,CAAc,cAAd,EAA8BS,yBAA9B,EAA6CL,sBAAUQ,gBAAvD,EAAyEF,0BAAzE,E,CAEA;;AACAV,MAAM,UAAN,CAAc,iCAAd,EAAiDS,yBAAjD,EAAgEL,sBAAUS,oBAA1E,EAAiGH,iBAAII,aAArG,E,CAEA;;AACAd,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBM,yBAAzB,EAAwCL,sBAAUW,OAAlD,EAA2DA,qBAAQJ,MAAnE,E,CAEA;;AACAX,MAAM,CAACgB,KAAP,CAAa,sBAAb,EAAqCP,yBAArC,EAAoDL,sBAAUa,oBAA9D,EAAoFF,qBAAQG,IAA5F,E,CAEA;;AACAlB,MAAM,UAAN,CAAc,sBAAd,EAAsCS,yBAAtC,EAAqDL,sBAAUa,oBAA/D,EAAqFF,8BAArF,E,CAEA;;AACAf,MAAM,UAAN,CAAc,yCAAd,EAAyDS,yBAAzD,EAAwEL,sBAAUS,oBAAlF,EAAwGE,qBAAQD,aAAhH,E,CAEA;;AACAd,MAAM,CAACG,IAAP,CAAY,8BAAZ,EAA4CM,yBAA5C,EAA2DL,sBAAUa,oBAArE,EAA2FF,qBAAQI,aAAnG,E,CAEA;;AACAnB,MAAM,CAACG,IAAP,CAAY,uBAAZ,EAAoCM,yBAApC,EAAmDL,sBAAUQ,gBAA7D,EAA+EF,iBAAIS,aAAnF,E,CAEA;;AACAnB,MAAM,CAACoB,GAAP,CAAW,OAAX,EAAoBX,yBAApB,EAAmCM,qBAAQM,OAA3C,E,CAEA;;AACArB,MAAM,CAACoB,GAAP,CAAY,sBAAZ,EAAoCX,yBAApC,EAAmDL,sBAAUa,oBAA7D,EAAmFF,qBAAQO,MAA3F,E,CAEA;;AACAtB,MAAM,CAACoB,GAAP,CAAY,cAAZ,EAA4BX,yBAA5B,EAA2CL,sBAAUQ,gBAArD,EAAuEF,iBAAIY,MAA3E;eAEetB,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\n\nimport validator from '../middlewares/validator';\nimport authenticator from '../middlewares/authenticator';\nimport users from '../controllers/users';\nimport gif from '../controllers/gifs';\nimport article from '../controllers/articles';\n\nconst router = express.Router();\n\n// user auth\nrouter.post('/auth/create-user', validator.auth,  users.signup);\nrouter.post('/auth/signin', validator.auth, users.login);\n\n// Create gifs\nrouter.post('/gifs', authenticator, gif.create);\n\n// Delete a gif\nrouter.delete('/gifs/:gifId', authenticator, validator.checkGifIdParams, gif.delete);\n\n// Delete a gif comment\nrouter.delete('/gifs/:gifID/comment/:commentId', authenticator, validator.checkCommentIdParams,  gif.deleteComment);\n\n// Create article\nrouter.post('/articles', authenticator, validator.article, article.create);\n\n// Edit an article\nrouter.patch('/articles/:articleId', authenticator, validator.checkArticleIdParams, article.edit);\n\n// Delete an article\nrouter.delete('/articles/:articleId', authenticator, validator.checkArticleIdParams, article.delete);\n\n// Delete an article comment\nrouter.delete('/articles/:articleId/comment/:commentId', authenticator, validator.checkCommentIdParams, article.deleteComment);\n\n// Comment on an article\nrouter.post('/articles/:articleId/comment', authenticator, validator.checkArticleIdParams, article.createComment);\n\n// Comment on a gif\nrouter.post('/gifs/:gifId/comment/',authenticator, validator.checkGifIdParams, gif.createComment);\n\n// View all article or gif with recent first\nrouter.get('/feed', authenticator, article.getFeed);\n\n// View  a specific article\nrouter.get( '/articles/:articleId', authenticator, validator.checkArticleIdParams, article.getOne,);\n\n// View  a specific gif\nrouter.get( '/gifs/:gifId', authenticator, validator.checkGifIdParams, gif.getOne,);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573835302289
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\validator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "validator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validationHelpers = _interopRequireDefault(require(\"../utilities/validationHelpers\"));\n\nvar _regexen = require(\"../utilities/regexen\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar checkForEmptyFields = _validationHelpers[\"default\"].checkForEmptyFields,\n    checkPatternedFields = _validationHelpers[\"default\"].checkPatternedFields;\nvar _default = {\n  auth: function auth(req, res, next) {\n    var errors = [];\n    var _req$body = req.body,\n        firstName = _req$body.firstName,\n        lastName = _req$body.lastName,\n        email = _req$body.email,\n        password = _req$body.password;\n\n    if (req.path.includes('create-user')) {\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('First name', firstName)));\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Last name', lastName)));\n    }\n\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Email address', email, _regexen.emailRegex)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Password', password, _regexen.passwordRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  article: function article(req, res, next) {\n    var errors = [];\n    var _req$body2 = req.body,\n        title = _req$body2.title,\n        article = _req$body2.article;\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Title', title)));\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Article', article)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Article', article, _regexen.articleRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  checkArticleIdParams: function checkArticleIdParams(req, res, next) {\n    var articleId = req.params.articleId;\n    var parsedNumber = parseInt(articleId, 10);\n    var isInteger = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n  checkGifIdParams: function checkGifIdParams(req, res, next) {\n    var gifId = req.params.gifId;\n    var parsedNumber = parseInt(gifId, 10);\n    var isInteger = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n  checkCommentIdParams: function checkCommentIdParams(req, res, next) {\n    var commentId = req.params.commentId;\n    var parsedNumber = parseInt(commentId, 10);\n    var isInteger = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJjaGVja0ZvckVtcHR5RmllbGRzIiwidmFsaWRhdGlvbkhlbHBlcnMiLCJjaGVja1BhdHRlcm5lZEZpZWxkcyIsImF1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyb3JzIiwiYm9keSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInBhdGgiLCJpbmNsdWRlcyIsInB1c2giLCJlbWFpbFJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImxlbmd0aCIsImpzZW5kIiwiZXJyb3IiLCJtZXNzYWdlIiwiZGF0YSIsImFydGljbGUiLCJ0aXRsZSIsImFydGljbGVSZWdleCIsImNoZWNrQXJ0aWNsZUlkUGFyYW1zIiwiYXJ0aWNsZUlkIiwicGFyYW1zIiwicGFyc2VkTnVtYmVyIiwicGFyc2VJbnQiLCJpc0ludGVnZXIiLCJOdW1iZXIiLCJpc0dyZWF0ZXJUaGFuWmVybyIsImNoZWNrR2lmSWRQYXJhbXMiLCJnaWZJZCIsImNoZWNrQ29tbWVudElkUGFyYW1zIiwiY29tbWVudElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVRQSxtQixHQUE4Q0MsNkIsQ0FBOUNELG1CO0lBQXFCRSxvQixHQUF5QkQsNkIsQ0FBekJDLG9CO2VBRWQ7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLGNBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCLFFBQU1DLE1BQU0sR0FBRyxFQUFmO0FBRHdCLG9CQUlwQkgsR0FBRyxDQUFDSSxJQUpnQjtBQUFBLFFBR3RCQyxTQUhzQixhQUd0QkEsU0FIc0I7QUFBQSxRQUdYQyxRQUhXLGFBR1hBLFFBSFc7QUFBQSxRQUdEQyxLQUhDLGFBR0RBLEtBSEM7QUFBQSxRQUdNQyxRQUhOLGFBR01BLFFBSE47O0FBTXhCLFFBQUlSLEdBQUcsQ0FBQ1MsSUFBSixDQUFTQyxRQUFULENBQWtCLGFBQWxCLENBQUosRUFBc0M7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QUdDLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQkYsWUFBakIsQ0FBbEI7QUFDQSxRQUFNSSxpQkFBaUIsR0FBR0osWUFBWSxHQUFHLENBQXpDO0FBRUEsUUFBSUUsU0FBUyxJQUFJRSxpQkFBakIsRUFBb0MsT0FBTzNCLElBQUksRUFBWDtBQUNwQyxXQUFPRCxHQUFHLENBQUNjLEtBQUosQ0FBVUMsS0FBVixDQUFnQix5Q0FBaEIsQ0FBUDtBQUNELEdBeERZO0FBMERiZ0IsRUFBQUEsb0JBQW9CLEVBQUUsOEJBQUNoQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUFBLFFBQ3RCK0IsU0FEc0IsR0FDTmpDLEdBRE0sQ0FDaEN3QixNQURnQyxDQUN0QlMsU0FEc0I7QUFFeEMsUUFBTVIsWUFBWSxHQUFHQyxRQUFRLENBQUNPLFNBQUQsRUFBWSxFQUFaLENBQTdCO0FBQ0EsUUFBTU4sU0FBUyxHQUFHQyxNQUFNLENBQUNELFNBQVAsQ0FBaUJGLFlBQWpCLENBQWxCO0FBQ0EsUUFBTUksaUJBQWlCLEdBQUdKLFlBQVksR0FBRyxDQUF6QztBQUVBLFFBQUlFLFNBQVMsSUFBSUUsaUJBQWpCLEVBQW9DLE9BQU8zQixJQUFJLEVBQVg7QUFDcEMsV0FBT0QsR0FBRyxDQUFDYyxLQUFKLENBQVVDLEtBQVYsQ0FBZ0IseUNBQWhCLENBQVA7QUFDRDtBQWxFWSxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyY1xcbWlkZGxld2FyZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGlvbkhlbHBlcnMgZnJvbSAnLi4vdXRpbGl0aWVzL3ZhbGlkYXRpb25IZWxwZXJzJztcbmltcG9ydCB7IGVtYWlsUmVnZXgsIHBhc3N3b3JkUmVnZXgsIGFydGljbGVSZWdleCB9IGZyb20gJy4uL3V0aWxpdGllcy9yZWdleGVuJztcblxuY29uc3QgeyBjaGVja0ZvckVtcHR5RmllbGRzLCBjaGVja1BhdHRlcm5lZEZpZWxkcyB9ID0gdmFsaWRhdGlvbkhlbHBlcnM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYXV0aDogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgY29uc3Qge1xuICAgICAgZmlyc3ROYW1lLCBsYXN0TmFtZSwgZW1haWwsIHBhc3N3b3JkLFxuICAgIH0gPSByZXEuYm9keTtcblxuICAgIGlmIChyZXEucGF0aC5pbmNsdWRlcygnY3JlYXRlLXVzZXInKSkge1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnRmlyc3QgbmFtZScsIGZpcnN0TmFtZSkpO1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnTGFzdCBuYW1lJywgbGFzdE5hbWUpKTtcbiAgICB9XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tQYXR0ZXJuZWRGaWVsZHMoJ0VtYWlsIGFkZHJlc3MnLCBlbWFpbCwgZW1haWxSZWdleCkpO1xuICAgIGVycm9ycy5wdXNoKC4uLmNoZWNrUGF0dGVybmVkRmllbGRzKCdQYXNzd29yZCcsIHBhc3N3b3JkLCBwYXNzd29yZFJlZ2V4KSk7XG5cbiAgICBpZiAoZXJyb3JzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7XG4gICAgICAgIG1lc3NhZ2U6ICdZb3VyIHJlcXVlc3QgY29udGFpbiBlcnJvcnMnLFxuICAgICAgICBkYXRhOiBlcnJvcnMsXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfSxcbiAgYXJ0aWNsZTogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgY29uc3QgeyB0aXRsZSwgYXJ0aWNsZSB9ID0gcmVxLmJvZHk7XG5cbiAgICBlcnJvcnMucHVzaCguLi5jaGVja0ZvckVtcHR5RmllbGRzKCdUaXRsZScsIHRpdGxlKSk7XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnQXJ0aWNsZScsIGFydGljbGUpKTtcbiAgICBlcnJvcnMucHVzaCguLi5jaGVja1BhdHRlcm5lZEZpZWxkcygnQXJ0aWNsZScsIGFydGljbGUsIGFydGljbGVSZWdleCkpO1xuXG4gICAgaWYgKGVycm9ycy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiByZXMuanNlbmQuZXJyb3Ioe1xuICAgICAgICBtZXNzYWdlOiAnWW91ciByZXF1ZXN0IGNvbnRhaW4gZXJyb3JzJyxcbiAgICAgICAgZGF0YTogZXJyb3JzLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG4gIH0sXG4gIGNoZWNrQXJ0aWNsZUlkUGFyYW1zOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB7IHBhcmFtczogeyBhcnRpY2xlSWQgfSB9ID0gcmVxO1xuICAgIGNvbnN0IHBhcnNlZE51bWJlciA9IHBhcnNlSW50KGFydGljbGVJZCwgMTApO1xuICAgIGNvbnN0IGlzSW50ZWdlciA9IE51bWJlci5pc0ludGVnZXIocGFyc2VkTnVtYmVyKTtcbiAgICBjb25zdCBpc0dyZWF0ZXJUaGFuWmVybyA9IHBhcnNlZE51bWJlciA+IDA7XG5cbiAgICBpZiAoaXNJbnRlZ2VyICYmIGlzR3JlYXRlclRoYW5aZXJvKSByZXR1cm4gbmV4dCgpO1xuICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ0lEIG11c3QgYmUgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gemVybycpO1xuICB9LFxuXG4gIGNoZWNrR2lmSWRQYXJhbXM6IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGdpZklkIH0gfSA9IHJlcTtcbiAgICBjb25zdCBwYXJzZWROdW1iZXIgPSBwYXJzZUludChnaWZJZCwgMTApO1xuICAgIGNvbnN0IGlzSW50ZWdlciA9IE51bWJlci5pc0ludGVnZXIocGFyc2VkTnVtYmVyKTtcbiAgICBjb25zdCBpc0dyZWF0ZXJUaGFuWmVybyA9IHBhcnNlZE51bWJlciA+IDA7XG5cbiAgICBpZiAoaXNJbnRlZ2VyICYmIGlzR3JlYXRlclRoYW5aZXJvKSByZXR1cm4gbmV4dCgpO1xuICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ0lEIG11c3QgYmUgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gemVybycpO1xuICB9LFxuICBcbiAgY2hlY2tDb21tZW50SWRQYXJhbXM6IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGNvbW1lbnRJZCB9IH0gPSByZXE7XG4gICAgY29uc3QgcGFyc2VkTnVtYmVyID0gcGFyc2VJbnQoY29tbWVudElkLCAxMCk7XG4gICAgY29uc3QgaXNJbnRlZ2VyID0gTnVtYmVyLmlzSW50ZWdlcihwYXJzZWROdW1iZXIpO1xuICAgIGNvbnN0IGlzR3JlYXRlclRoYW5aZXJvID0gcGFyc2VkTnVtYmVyID4gMDtcblxuICAgIGlmIChpc0ludGVnZXIgJiYgaXNHcmVhdGVyVGhhblplcm8pIHJldHVybiBuZXh0KCk7XG4gICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignSUQgbXVzdCBiZSBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiB6ZXJvJyk7XG4gIH0sXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "validator.js"
      ],
      "names": [
        "checkForEmptyFields",
        "validationHelpers",
        "checkPatternedFields",
        "auth",
        "req",
        "res",
        "next",
        "errors",
        "body",
        "firstName",
        "lastName",
        "email",
        "password",
        "path",
        "includes",
        "push",
        "emailRegex",
        "passwordRegex",
        "length",
        "jsend",
        "error",
        "message",
        "data",
        "article",
        "title",
        "articleRegex",
        "checkArticleIdParams",
        "articleId",
        "params",
        "parsedNumber",
        "parseInt",
        "isInteger",
        "Number",
        "isGreaterThanZero",
        "checkGifIdParams",
        "gifId",
        "checkCommentIdParams",
        "commentId"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import validationHelpers from '../utilities/validationHelpers';\nimport { emailRegex, passwordRegex, articleRegex } from '../utilities/regexen';\n\nconst { checkForEmptyFields, checkPatternedFields } = validationHelpers;\n\nexport default {\n  auth: (req, res, next) => {\n    const errors = [];\n    const {\n      firstName, lastName, email, password,\n    } = req.body;\n\n    if (req.path.includes('create-user')) {\n      errors.push(...checkForEmptyFields('First name', firstName));\n      errors.push(...checkForEmptyFields('Last name', lastName));\n    }\n    errors.push(...checkPatternedFields('Email address', email, emailRegex));\n    errors.push(...checkPatternedFields('Password', password, passwordRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  article: (req, res, next) => {\n    const errors = [];\n    const { title, article } = req.body;\n\n    errors.push(...checkForEmptyFields('Title', title));\n    errors.push(...checkForEmptyFields('Article', article));\n    errors.push(...checkPatternedFields('Article', article, articleRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  checkArticleIdParams: (req, res, next) => {\n    const { params: { articleId } } = req;\n    const parsedNumber = parseInt(articleId, 10);\n    const isInteger = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n\n  checkGifIdParams: (req, res, next) => {\n    const { params: { gifId } } = req;\n    const parsedNumber = parseInt(gifId, 10);\n    const isInteger = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n  \n  checkCommentIdParams: (req, res, next) => {\n    const { params: { commentId } } = req;\n    const parsedNumber = parseInt(commentId, 10);\n    const isInteger = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573835228766
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\validationHelpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "validationHelpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  checkForEmptyFields: function checkForEmptyFields(field, value) {\n    if (!value || !value.trim()) return [\"\".concat(field, \" is required\")];\n    return [];\n  },\n  checkPatternedFields: function checkPatternedFields(field, value, regex) {\n    if (!regex.test(value)) return [\"\".concat(field, \" is invalid\")];\n    return [];\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb25IZWxwZXJzLmpzIl0sIm5hbWVzIjpbImNoZWNrRm9yRW1wdHlGaWVsZHMiLCJmaWVsZCIsInZhbHVlIiwidHJpbSIsImNoZWNrUGF0dGVybmVkRmllbGRzIiwicmVnZXgiLCJ0ZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxtQkFBbUIsRUFBRSw2QkFBQ0MsS0FBRCxFQUFRQyxLQUFSLEVBQWtCO0FBQ3JDLFFBQUksQ0FBQ0EsS0FBRCxJQUFVLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixFQUFmLEVBQTZCLE9BQU8sV0FBSUYsS0FBSixrQkFBUDtBQUM3QixXQUFPLEVBQVA7QUFDRCxHQUpZO0FBTWJHLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDSCxLQUFELEVBQVFDLEtBQVIsRUFBZUcsS0FBZixFQUF5QjtBQUM3QyxRQUFJLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixDQUFXSixLQUFYLENBQUwsRUFBd0IsT0FBTyxXQUFJRCxLQUFKLGlCQUFQO0FBQ3hCLFdBQU8sRUFBUDtBQUNEO0FBVFksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXHV0aWxpdGllcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgY2hlY2tGb3JFbXB0eUZpZWxkczogKGZpZWxkLCB2YWx1ZSkgPT4ge1xuICAgIGlmICghdmFsdWUgfHwgIXZhbHVlLnRyaW0oKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgcmVxdWlyZWRgXTtcbiAgICByZXR1cm4gW107XG4gIH0sXG5cbiAgY2hlY2tQYXR0ZXJuZWRGaWVsZHM6IChmaWVsZCwgdmFsdWUsIHJlZ2V4KSA9PiB7XG4gICAgaWYgKCFyZWdleC50ZXN0KHZhbHVlKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgaW52YWxpZGBdO1xuICAgIHJldHVybiBbXTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "validationHelpers.js"
      ],
      "names": [
        "checkForEmptyFields",
        "field",
        "value",
        "trim",
        "checkPatternedFields",
        "regex",
        "test"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,mBAAmB,EAAE,6BAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,QAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAAN,EAAf,EAA6B,OAAO,WAAIF,KAAJ,kBAAP;AAC7B,WAAO,EAAP;AACD,GAJY;AAMbG,EAAAA,oBAAoB,EAAE,8BAACH,KAAD,EAAQC,KAAR,EAAeG,KAAf,EAAyB;AAC7C,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWJ,KAAX,CAAL,EAAwB,OAAO,WAAID,KAAJ,iBAAP;AACxB,WAAO,EAAP;AACD;AATY,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export default {\n  checkForEmptyFields: (field, value) => {\n    if (!value || !value.trim()) return [`${field} is required`];\n    return [];\n  },\n\n  checkPatternedFields: (field, value, regex) => {\n    if (!regex.test(value)) return [`${field} is invalid`];\n    return [];\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362075
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\regexen.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "regexen.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.articleRegex = exports.passwordRegex = exports.numberRegex = exports.emailRegex = void 0;\nvar emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexports.emailRegex = emailRegex;\nvar numberRegex = /^\\d$/;\nexports.numberRegex = numberRegex;\nvar passwordRegex = /^.{6,}$/;\nexports.passwordRegex = passwordRegex;\nvar articleRegex = /[a-zA-Z .]{20,}/;\nexports.articleRegex = articleRegex;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2V4ZW4uanMiXSwibmFtZXMiOlsiZW1haWxSZWdleCIsIm51bWJlclJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImFydGljbGVSZWdleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsVUFBVSxHQUFHLDJEQUFuQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsTUFBcEI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHLFNBQXRCOztBQUNBLElBQU1DLFlBQVksR0FBRyxpQkFBckIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFx1dGlsaXRpZXMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1haWxSZWdleCA9IC9eKFthLXpBLVowLTlfLi1dKStAKChbYS16QS1aMC05LV0pK1xcLikrKFthLXpBLVowLTldezN9KSskLztcbmV4cG9ydCBjb25zdCBudW1iZXJSZWdleCA9IC9eXFxkJC87XG5leHBvcnQgY29uc3QgcGFzc3dvcmRSZWdleCA9IC9eLns2LH0kLztcbmV4cG9ydCBjb25zdCBhcnRpY2xlUmVnZXggPSAvW2EtekEtWiAuXXsyMCx9LztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "regexen.js"
      ],
      "names": [
        "emailRegex",
        "numberRegex",
        "passwordRegex",
        "articleRegex"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,UAAU,GAAG,2DAAnB;;AACA,IAAMC,WAAW,GAAG,MAApB;;AACA,IAAMC,aAAa,GAAG,SAAtB;;AACA,IAAMC,YAAY,GAAG,iBAArB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export const emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexport const numberRegex = /^\\d$/;\nexport const passwordRegex = /^.{6,}$/;\nexport const articleRegex = /[a-zA-Z .]{20,}/;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573696011703
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\authenticator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "authenticator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default(req, res, next) {\n  var token = req.cookies.token;\n  if (!token) return res.jsend.error('You have not been authenticated!');\n\n  try {\n    var user = _jsonwebtoken[\"default\"].decode(token, process.env.SECRET);\n\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error\n    });\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0b3IuanMiXSwibmFtZXMiOlsicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiY29va2llcyIsImpzZW5kIiwiZXJyb3IiLCJ1c2VyIiwiand0IiwiZGVjb2RlIiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsIm1lc3NhZ2UiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFFZSxrQkFBQ0EsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFBQSxNQUN6QkMsS0FEeUIsR0FDZkgsR0FBRyxDQUFDSSxPQURXLENBQ3pCRCxLQUR5QjtBQUVqQyxNQUFJLENBQUNBLEtBQUwsRUFBWSxPQUFPRixHQUFHLENBQUNJLEtBQUosQ0FBVUMsS0FBVixDQUFnQixrQ0FBaEIsQ0FBUDs7QUFFWixNQUFJO0FBQ0YsUUFBTUMsSUFBSSxHQUFHQyx5QkFBSUMsTUFBSixDQUFXTixLQUFYLEVBQWtCTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FBYjs7QUFDQVosSUFBQUEsR0FBRyxDQUFDTyxJQUFKLEdBQVdBLElBQVg7QUFDQSxXQUFPTCxJQUFJLEVBQVg7QUFDRCxHQUpELENBSUUsT0FBT0ksS0FBUCxFQUFjO0FBQ2QsV0FBT0wsR0FBRyxDQUFDSSxLQUFKLENBQVVDLEtBQVYsQ0FBZ0I7QUFDckJPLE1BQUFBLE9BQU8sRUFBRSx1QkFEWTtBQUVyQkMsTUFBQUEsSUFBSSxFQUFFUjtBQUZlLEtBQWhCLENBQVA7QUFJRDtBQUNGLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtaWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuZXhwb3J0IGRlZmF1bHQgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHsgdG9rZW4gfSA9IHJlcS5jb29raWVzO1xuICBpZiAoIXRva2VuKSByZXR1cm4gcmVzLmpzZW5kLmVycm9yKCdZb3UgaGF2ZSBub3QgYmVlbiBhdXRoZW50aWNhdGVkIScpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGp3dC5kZWNvZGUodG9rZW4sIHByb2Nlc3MuZW52LlNFQ1JFVCk7XG4gICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgIHJldHVybiBuZXh0KCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7XG4gICAgICBtZXNzYWdlOiAnYXV0aGVudGljYXRpb24gZmFpbGVkJyxcbiAgICAgIGRhdGE6IGVycm9yLFxuICAgIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "authenticator.js"
      ],
      "names": [
        "req",
        "res",
        "next",
        "token",
        "cookies",
        "jsend",
        "error",
        "user",
        "jwt",
        "decode",
        "process",
        "env",
        "SECRET",
        "message",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAEe,kBAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACzBC,KADyB,GACfH,GAAG,CAACI,OADW,CACzBD,KADyB;AAEjC,MAAI,CAACA,KAAL,EAAY,OAAOF,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB,kCAAhB,CAAP;;AAEZ,MAAI;AACF,QAAMC,IAAI,GAAGC,yBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAAb;;AACAZ,IAAAA,GAAG,CAACO,IAAJ,GAAWA,IAAX;AACA,WAAOL,IAAI,EAAX;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACd,WAAOL,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB;AACrBO,MAAAA,OAAO,EAAE,uBADY;AAErBC,MAAAA,IAAI,EAAER;AAFe,KAAhB,CAAP;AAID;AACF,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\n\nexport default (req, res, next) => {\n  const { token } = req.cookies;\n  if (!token) return res.jsend.error('You have not been authenticated!');\n\n  try {\n    const user = jwt.decode(token, process.env.SECRET);\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error,\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573692185003
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$cookies, token, userid, _req$body, firstName, lastName, email, password, gender, jobRole, isAdmin, department, regDate;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // check if user is admin\n              _req$cookies = req.cookies, token = _req$cookies.token, userid = _req$cookies.userid;\n              _req$body = req.body, firstName = _req$body.firstName, lastName = _req$body.lastName, email = _req$body.email, password = _req$body.password, gender = _req$body.gender, jobRole = _req$body.jobRole, isAdmin = _req$body.isAdmin, department = _req$body.department, regDate = _req$body.regDate;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT isadmin FROM employee WHERE id = $1', [userid],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2(error, results) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context2.next = 2;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", res.jsend.error(\"You are not an admin\"));\n\n                          case 2:\n                            if (error) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            if (!(results.rows[0].isadmin === false)) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", res.jsend.error('Only admin can can create an employee user account'));\n\n                          case 5:\n                            _context2.next = 7;\n                            return _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                            /*#__PURE__*/\n                            function () {\n                              var _ref2 = _asyncToGenerator(\n                              /*#__PURE__*/\n                              regeneratorRuntime.mark(function _callee(error, results) {\n                                return regeneratorRuntime.wrap(function _callee$(_context) {\n                                  while (1) {\n                                    switch (_context.prev = _context.next) {\n                                      case 0:\n                                        if (!(results.rows[0] === undefined)) {\n                                          _context.next = 17;\n                                          break;\n                                        }\n\n                                        _context.t0 = _dbconnect[\"default\"];\n                                        _context.t1 = 'INSERT INTO employee (firstName, lastName, email, password, gender, jobRole, isAdmin, department)' + ' VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING id, isAdmin';\n                                        _context.t2 = firstName;\n                                        _context.t3 = lastName;\n                                        _context.t4 = email;\n                                        _context.next = 8;\n                                        return _bcrypt[\"default\"].hash(password, 10);\n\n                                      case 8:\n                                        _context.t5 = _context.sent;\n                                        _context.t6 = gender;\n                                        _context.t7 = jobRole;\n                                        _context.t8 = isAdmin;\n                                        _context.t9 = department;\n                                        _context.t10 = [_context.t2, _context.t3, _context.t4, _context.t5, _context.t6, _context.t7, _context.t8, _context.t9];\n\n                                        _context.t11 = function (err, result) {\n                                          // signin jwt and wrap in a cookie\n                                          var token = _jsonwebtoken[\"default\"].sign({\n                                            userId: result.rows[0].id\n                                          }, process.env.SECRET);\n\n                                          res.cookie('userid', result.rows[0].id, {\n                                            expires: new Date(Date.now() + 3600000),\n                                            httpOnly: true\n                                          });\n                                          res.cookie('token', token, {\n                                            expires: new Date(Date.now() + 3600000),\n                                            httpOnly: true\n                                          });\n                                          return res.jsend.success({\n                                            message: 'User account successfully created',\n                                            user_id: result.rows[0].id,\n                                            Token: token,\n                                            is_admin: result.rows[0].isadmin\n                                          });\n                                        };\n\n                                        _context.next = 17;\n                                        return _context.t0.query.call(_context.t0, _context.t1, _context.t10, _context.t11);\n\n                                      case 17:\n                                        if (!(results.rows[0] !== undefined)) {\n                                          _context.next = 19;\n                                          break;\n                                        }\n\n                                        return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                                      case 19:\n                                        return _context.abrupt(\"return\", null);\n\n                                      case 20:\n                                      case \"end\":\n                                        return _context.stop();\n                                    }\n                                  }\n                                }, _callee);\n                              }));\n\n                              return function (_x5, _x6) {\n                                return _ref2.apply(this, arguments);\n                              };\n                            }());\n\n                          case 7:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function signup(_x, _x2) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  // user login logic\n  login: function login(req, res) {\n    var _req$body2 = req.body,\n        email = _req$body2.email,\n        password = _req$body2.password;\n\n    _dbconnect[\"default\"].query('SELECT id, email, password FROM employee WHERE email = $1 ', [email],\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(error, results) {\n        var match, token;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!error) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw error;\n\n              case 2:\n                if (!(results.rows[0] === undefined)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n              case 4:\n                _context4.next = 6;\n                return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n              case 6:\n                match = _context4.sent;\n\n                if (match) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", res.jsend.error({\n                  message: 'Login failed, check your password'\n                }));\n\n              case 9:\n                // sign jwt and wrap in a cookie\n                token = _jsonwebtoken[\"default\"].sign({\n                  userId: results.rows[0].id\n                }, process.env.SECRET);\n                res.cookie('userid', results.rows[0].id, {\n                  expires: new Date(Date.now() + 3600000),\n                  httpOnly: true\n                });\n                res.cookie('token', token, {\n                  expires: new Date(Date.now() + 3600000),\n                  httpOnly: true\n                });\n                return _context4.abrupt(\"return\", res.jsend.success({\n                  Token: token,\n                  user_id: results.rows[0].id\n                }));\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref3.apply(this, arguments);\n      };\n    }()); // disconnect client after operation\n\n\n    _dbconnect[\"default\"].on('remove', function () {\n      (0, _debug[\"default\"])('app:login')('client removed @signin');\n    });\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "signup",
        "req",
        "res",
        "cookies",
        "token",
        "userid",
        "body",
        "firstName",
        "lastName",
        "email",
        "password",
        "gender",
        "jobRole",
        "isAdmin",
        "department",
        "regDate",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "jsend",
        "isadmin",
        "bcrypt",
        "hash",
        "err",
        "result",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "success",
        "message",
        "user_id",
        "Token",
        "is_admin",
        "on",
        "login",
        "compare",
        "match"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  signup: async (req, res) => {\n    // check if user is admin\n    const { token, userid } = req.cookies;\n    const {\n      firstName, lastName, email,  password, gender, jobRole, isAdmin, department, regDate\n    } = req.body;\n    try {\n      pool.query('SELECT isadmin FROM employee WHERE id = $1', [userid], async (error, results) => {\n        if(results.rows[0] === undefined){ return res.jsend.error(\"You are not an admin\");}\n          if (!error) {\n            if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can create an employee user account');\n          }\n          await pool.query('SELECT email FROM employee WHERE email = $1', [email],  async (error, results) => {\n          // user does not exist\n          if (results.rows[0] === undefined) {\n            await pool.query('INSERT INTO employee (firstName, lastName, email, password, gender, jobRole, isAdmin, department)'+\n              ' VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING id, isAdmin', [ firstName, lastName, email,  await bcrypt.hash(password, 10), gender, jobRole, isAdmin, department],  (err, result) => {\n              // signin jwt and wrap in a cookie\n              const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n              res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n              res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n              return res.jsend.success({\n                message: 'User account successfully created',\n                user_id: result.rows[0].id,\n                Token: token,\n                is_admin: result.rows[0].isadmin,\n              });\n            });\n          }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n          return null;\n      });\n    });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  login:  (req, res) => {\n    const { email, password } = req.body;\n      pool.query('SELECT id, email, password FROM employee WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        Token: token, user_id: results.rows[0].id\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573839567650
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\gifs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "gifs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar cloudinary = require('cloudinary').v2;\n\n// configure cloudinary\ncloudinary.config({\n  cloud_name: 'ds5hogj9b',\n  api_key: '657785678132187',\n  api_secret: 'EcvkztYhPW8egTvRTo10OdiJpwU'\n});\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res) {\n      var _req$cookies, token, userid, _req$body, url, title;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // check if user is admin\n              _req$cookies = req.cookies, token = _req$cookies.token, userid = _req$cookies.userid;\n              _req$body = req.body, url = _req$body.url, title = _req$body.title; // token = req.header();\n\n              _context.prev = 2;\n              _context.next = 5;\n              return cloudinary.uploader.upload(url, {\n                tags: 'basic_sample',\n                \"width\": 200,\n                \"height\": 150\n              }).then(function (image) {\n                console.log();\n                console.log(\"** File Upload (Promise)\");\n                console.log(\"* public_id for the uploaded image is generated by Cloudinary's service.\");\n                console.log(\"* \" + image.public_id);\n                console.log(\"* \" + image.url); // create trip if user is admin\n\n                _dbconnect[\"default\"].query('INSERT INTO gif (employee_id, imageurl, title) VALUES ($1, $2, $3) RETURNING id, imageurl, title, gifdate ', [userid, image.url, title], function (err, result) {\n                  if (!err) {\n                    return res.jsend.success({\n                      gifID: result.rows[0].id,\n                      message: 'Gif image successfully posted',\n                      CreatedOn: result.rows[0].gifdate,\n                      title: result.rows[0].title,\n                      imageUrl: result.rows[0].imageurl\n                    });\n                  }\n\n                  return res.jsend.error(error);\n                }); // disconnect client\n\n\n                _dbconnect[\"default\"].on('remove', function () {\n                  (0, _debug[\"default\"])('app:*')('Client Removed @ postGif');\n                });\n              })[\"catch\"](function (err) {\n                console.log();\n                console.log(\"** File Upload (Promise)\");\n\n                if (err) {\n                  (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @createGif' + err);\n                }\n              });\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n              (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @createGif');\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 7]]);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // user delete gif logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$cookies2, token, userid, gifId;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$cookies2 = req.cookies, token = _req$cookies2.token, userid = _req$cookies2.userid;\n              gifId = req.params.gifId; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('DELETE FROM  gif  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [gifId, userid], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"Delete gif failed\");\n                  }\n\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Gif succesfully deleted ',\n                      title: result.rows[0].title\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @deleteGif ' + error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @deleteGif');\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function _delete(_x3, _x4) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // Get specific gif\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var gifId;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              gifId = req.params.gifId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT id, title, imageurl as imageurl, gifdate FROM gif WHERE id = $1', [gifId], function (error, result) {\n                  _dbconnect[\"default\"].query('SELECT id as commentId, comment, employee_id as authorId from gif_comment WHERE gif_id = $1 ', [gifId], function (err, commentResult) {\n                    if (!error) {\n                      if (!err) {\n                        return res.jsend.success({\n                          id: result.rows[0].id,\n                          createdOn: result.rows[0].gifdate,\n                          title: result.rows[0].title,\n                          url: result.rows[0].imageurl,\n                          comment: commentResult.rows\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong getting gif');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @gettingGif');\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getOne(_x5, _x6) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user login logic\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$cookies3, token, userid, gifId, comment;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$cookies3 = req.cookies, token = _req$cookies3.token, userid = _req$cookies3.userid;\n              gifId = req.params.gifId;\n              comment = req.body.comment; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('SELECT title FROM  gif  WHERE id = $1', [gifId], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"No gif to comment on\");\n                  }\n\n                  if (!err) {\n                    _dbconnect[\"default\"].query('INSERT INTO gif_comment (comment, employee_id, gif_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, gifId], function (error, commentResult) {\n                      if (!error) {\n                        return res.jsend.success({\n                          message: 'Comment succesfully created',\n                          createdOn: commentResult.rows[0].comment_date,\n                          gifTitle: result.rows[0].title,\n                          comment: commentResult.rows[0].comment\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    });\n                  }\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong getting article');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @commentGif');\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function createComment(_x7, _x8) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // admin delete comment\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(req, res) {\n      var userid, _req$params, gifId, commentId;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              userid = req.cookies.userid;\n              _req$params = req.params, gifId = _req$params.gifId, commentId = _req$params.commentId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT isadmin FROM employee WHERE id = $1', [userid], function (error, results) {\n                  if (results.rows[0] === undefined) {\n                    return res.jsend.error(\"You are not an admin\");\n                  }\n\n                  if (!error) {\n                    if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n                  }\n\n                  _dbconnect[\"default\"].query('DELETE FROM gif_comment WHERE  id = $1 AND gif_id = $2', [commentId, gifId], function (error, result) {\n                    if (result) {\n                      res.jsend.success({\n                        message: 'Comment deleted successfully'\n                      });\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client removed @deleteComment');\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function deleteComment(_x9, _x10) {\n      return _deleteComment.apply(this, arguments);\n    }\n\n    return deleteComment;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpZnMuanMiXSwibmFtZXMiOlsiY2xvdWRpbmFyeSIsInJlcXVpcmUiLCJ2MiIsImNvbmZpZyIsImNsb3VkX25hbWUiLCJhcGlfa2V5IiwiYXBpX3NlY3JldCIsImNyZWF0ZSIsInJlcSIsInJlcyIsImNvb2tpZXMiLCJ0b2tlbiIsInVzZXJpZCIsImJvZHkiLCJ1cmwiLCJ0aXRsZSIsInVwbG9hZGVyIiwidXBsb2FkIiwidGFncyIsInRoZW4iLCJpbWFnZSIsImNvbnNvbGUiLCJsb2ciLCJwdWJsaWNfaWQiLCJwb29sIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJqc2VuZCIsInN1Y2Nlc3MiLCJnaWZJRCIsInJvd3MiLCJpZCIsIm1lc3NhZ2UiLCJDcmVhdGVkT24iLCJnaWZkYXRlIiwiaW1hZ2VVcmwiLCJpbWFnZXVybCIsImVycm9yIiwib24iLCJnaWZJZCIsInBhcmFtcyIsInVuZGVmaW5lZCIsImdldE9uZSIsImNvbW1lbnRSZXN1bHQiLCJjcmVhdGVkT24iLCJjb21tZW50IiwiY3JlYXRlQ29tbWVudCIsImNvbW1lbnRfZGF0ZSIsImdpZlRpdGxlIiwiZGVsZXRlQ29tbWVudCIsImNvbW1lbnRJZCIsInJlc3VsdHMiLCJpc2FkbWluIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUE7O0FBQ0E7Ozs7Ozs7O0FBRkEsSUFBSUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUFQLENBQXNCQyxFQUF2Qzs7QUFHQTtBQUNBRixVQUFVLENBQUNHLE1BQVgsQ0FBa0I7QUFDaEJDLEVBQUFBLFVBQVUsRUFBRSxXQURJO0FBRWhCQyxFQUFBQSxPQUFPLEVBQUUsaUJBRk87QUFHaEJDLEVBQUFBLFVBQVUsRUFBRTtBQUhJLENBQWxCO2VBT2U7QUFDYkMsRUFBQUEsTUFBTTtBQUFBO0FBQUE7QUFBQSw0QkFBRSxpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTjtBQURNLDZCQUVvQkQsR0FBRyxDQUFDRSxPQUZ4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QWhCLENBQVA7QUFDeEM7O0FBQ0hkLHdDQUFLQyxLQUFMLENBQVcsd0RBQVgsRUFBcUUsQ0FBQzBCLFNBQUQsRUFBWVgsS0FBWixDQUFyRSxFQUF5RixVQUFDRixLQUFELEVBQVFYLE1BQVIsRUFBbUI7QUFDNUcsd0JBQUlBLE1BQUosRUFBWTtBQUNabEIsc0JBQUFBLEdBQUcsQ0FBQ21CLEtBQUosQ0FBVUMsT0FBVixDQUFrQjtBQUFFSSx3QkFBQUEsT0FBTyxFQUFFO0FBQVgsdUJBQWxCO0FBQ0Q7QUFDRixtQkFKRztBQUtMLGlCQVZHO0FBV0gsZUFaQyxDQVlBLE9BQU9LLEtBQVAsRUFBYztBQUFFLHVDQUFNLE9BQU4sRUFBZUEsS0FBZjtBQUF3QixlQWY3QixDQWdCYjs7O0FBQ0FkLG9DQUFLZSxFQUFMLENBQVEsUUFBUixFQUFrQixZQUFNO0FBQ3RCLHVDQUFNLE9BQU4sRUFBZSwrQkFBZjtBQUNELGVBRkQ7O0FBakJhO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUF0SEEsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiXG5sZXQgY2xvdWRpbmFyeSA9IHJlcXVpcmUoJ2Nsb3VkaW5hcnknKS52MjtcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgcG9vbCBmcm9tICcuLi9kYXRhYmFzZS9kYmNvbm5lY3QnO1xuLy8gY29uZmlndXJlIGNsb3VkaW5hcnlcbmNsb3VkaW5hcnkuY29uZmlnKHtcbiAgY2xvdWRfbmFtZTogJ2RzNWhvZ2o5YicsXG4gIGFwaV9rZXk6ICc2NTc3ODU2NzgxMzIxODcnLFxuICBhcGlfc2VjcmV0OiAnRWN2a3p0WWhQVzhlZ1R2UlRvMTBPZGlKcHdVJ1xufSk7XG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICBjcmVhdGU6IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIC8vIGNoZWNrIGlmIHVzZXIgaXMgYWRtaW5cbiAgICBjb25zdCB7IHRva2VuLCB1c2VyaWQgfSA9IHJlcS5jb29raWVzO1xuICAgIGNvbnN0IHt1cmwsIHRpdGxlfSA9IHJlcS5ib2R5O1xuICAgIC8vIHRva2VuID0gcmVxLmhlYWRlcigpO1xuICAgIHRyeSB7XG4gICAgICAvLyBVcGxvYWQgZ2lmIHRvIGNsb3VkaW5hcnlcbiAgICAgIGF3YWl0IGNsb3VkaW5hcnkudXBsb2FkZXIudXBsb2FkKHVybCwgeyB0YWdzOiAnYmFzaWNfc2FtcGxlJywgXCJ3aWR0aFwiOiAyMDAsIFwiaGVpZ2h0XCI6IDE1MCwgIH0pXG4gICAgICAudGhlbihmdW5jdGlvbiAoaW1hZ2UpIHtcbiAgICAgIGNvbnNvbGUubG9nKCk7XG4gICAgICBjb25zb2xlLmxvZyhcIioqIEZpbGUgVXBsb2FkIChQcm9taXNlKVwiKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiKiBwdWJsaWNfaWQgZm9yIHRoZSB1cGxvYWRlZCBpbWFnZSBpcyBnZW5lcmF0ZWQgYnkgQ2xvdWRpbmFyeSdzIHNlcnZpY2UuXCIpO1xuICAgICAgY29uc29sZS5sb2coXCIqIFwiICsgaW1hZ2UucHVibGljX2lkKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiKiBcIiArIGltYWdlLnVybCk7XG4gICAgICAvLyBjcmVhdGUgdHJpcCBpZiB1c2VyIGlzIGFkbWluXG4gICAgICBwb29sLnF1ZXJ5KCdJTlNFUlQgSU5UTyBnaWYgKGVtcGxveWVlX2lkLCBpbWFnZXVybCwgdGl0bGUpIFZBTFVFUyAoJDEsICQyLCAkMykgUkVUVVJOSU5HIGlkLCBpbWFnZXVybCwgdGl0bGUsIGdpZmRhdGUgJywgW3VzZXJpZCwgaW1hZ2UudXJsLCB0aXRsZV0sIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgIHJldHVybiByZXMuanNlbmQuc3VjY2Vzcyh7XG4gICAgICAgICAgICBnaWZJRDogcmVzdWx0LnJvd3NbMF0uaWQsXG4gICAgICAgICAgICBtZXNzYWdlOiAnR2lmIGltYWdlIHN1Y2Nlc3NmdWxseSBwb3N0ZWQnLFxuICAgICAgICAgICAgQ3JlYXRlZE9uOiByZXN1bHQucm93c1swXS5naWZkYXRlLFxuICAgICAgICAgICAgdGl0bGU6IHJlc3VsdC5yb3dzWzBdLnRpdGxlLFxuICAgICAgICAgICAgaW1hZ2VVcmw6IHJlc3VsdC5yb3dzWzBdLmltYWdldXJsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKGVycm9yKTtcbiAgICAgIH0pO1xuICAgIC8vIGRpc2Nvbm5lY3QgY2xpZW50XG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IFJlbW92ZWQgQCBwb3N0R2lmJyk7XG4gICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZygpO1xuICAgICAgY29uc29sZS5sb2coXCIqKiBGaWxlIFVwbG9hZCAoUHJvbWlzZSlcIik7XG4gICAgICBpZiAoZXJyKSB7IGRlYnVnKCdhcHA6KicpKCdFcnJvciBPY2N1cmVkOiBTb21ldGhpbmcgd3JvbmcgQGNyZWF0ZUdpZicgKyBlcnIpOyB9XG4gICAgfSk7XG4gIH1jYXRjaCAoZXJyb3IpIHsgZGVidWcoJ2FwcDoqJykoJ0Vycm9yIE9jY3VyZWQ6IFNvbWV0aGluZyB3cm9uZyBAY3JlYXRlR2lmJyk7IH0gICBcbn0sXG4gIC8vIHVzZXIgZGVsZXRlIGdpZiBsb2dpY1xuICBkZWxldGU6IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgdG9rZW4sIHVzZXJpZCB9ID0gcmVxLmNvb2tpZXM7XG4gICAgY29uc3QgeyBwYXJhbXM6IHsgZ2lmSWQgfSB9ID0gcmVxO1xuICAgIC8vIHRva2VuID0gcmVxLmhlYWRlcigpO1xuICAgIHRyeSB7XG4gICAgICAgIHBvb2wucXVlcnkoJ0RFTEVURSBGUk9NICBnaWYgIFdIRVJFIGlkID0gJDEgQU5EIGVtcGxveWVlX2lkID0gJDIgUkVUVVJOSU5HIGlkLCB0aXRsZScsIFtnaWZJZCwgdXNlcmlkXSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYocmVzdWx0LnJvd3NbMF0gPT09IHVuZGVmaW5lZCl7IHJldHVybiByZXMuanNlbmQuZXJyb3IoXCJEZWxldGUgZ2lmIGZhaWxlZFwiKTt9XG4gICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuanNlbmQuc3VjY2Vzcyh7XG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdHaWYgc3VjY2VzZnVsbHkgZGVsZXRlZCAnLFxuICAgICAgICAgICAgICB0aXRsZTogcmVzdWx0LnJvd3NbMF0udGl0bGVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcihlcnIpO1xuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyBkZWJ1ZygnYXBwOionKSgnRXJyb3IgT2NjdXJlZDogU29tZXRoaW5nIHdyb25nIEBkZWxldGVHaWYgJyArIGVycm9yKTsgfVxuICAgIC8vIGRpc2Nvbm5lY3QgY2xpZW50XG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgZGVidWcoJ2FwcDoqJykoJ0NsaWVudCBSZW1vdmVkIEBkZWxldGVHaWYnKTtcbiAgICB9KTsgXG4gIH0sXG4gIC8vIEdldCBzcGVjaWZpYyBnaWZcbiAgZ2V0T25lOiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHBhcmFtczogeyBnaWZJZCB9IH0gPSByZXE7XG4gICAgdHJ5IHtcbiAgICAgIHBvb2wucXVlcnkoJ1NFTEVDVCBpZCwgdGl0bGUsIGltYWdldXJsIGFzIGltYWdldXJsLCBnaWZkYXRlIEZST00gZ2lmIFdIRVJFIGlkID0gJDEnLCBbZ2lmSWRdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICBwb29sLnF1ZXJ5KCdTRUxFQ1QgaWQgYXMgY29tbWVudElkLCBjb21tZW50LCBlbXBsb3llZV9pZCBhcyBhdXRob3JJZCBmcm9tIGdpZl9jb21tZW50IFdIRVJFIGdpZl9pZCA9ICQxICcsIFtnaWZJZF0sIChlcnIsIGNvbW1lbnRSZXN1bHQpID0+IHtcbiAgICAgICAgICBpZighZXJyb3Ipe1xuICAgICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5zdWNjZXNzKHtcbiAgICAgICAgICAgICAgICBpZDogcmVzdWx0LnJvd3NbMF0uaWQsXG4gICAgICAgICAgICAgICAgY3JlYXRlZE9uOiByZXN1bHQucm93c1swXS5naWZkYXRlLFxuICAgICAgICAgICAgICAgIHRpdGxlOiByZXN1bHQucm93c1swXS50aXRsZSxcbiAgICAgICAgICAgICAgICB1cmw6IHJlc3VsdC5yb3dzWzBdLmltYWdldXJsLFxuICAgICAgICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnRSZXN1bHQucm93cyxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKGVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgZGVidWcoJ2FwcDoqJykoJ0Vycm9yIE9jY3VyZWQ6IFNvbWV0aGluZyB3cm9uZyBnZXR0aW5nIGdpZicpOyB9XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IFJlbW92ZWQgQGdldHRpbmdHaWYnKTtcbiAgICB9KTtcbiAgfSxcbiAgLy8gdXNlciBsb2dpbiBsb2dpY1xuICBjcmVhdGVDb21tZW50OiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHRva2VuLCB1c2VyaWQgfSA9IHJlcS5jb29raWVzO1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGdpZklkIH0gfSA9IHJlcTtcbiAgICBjb25zdCB7Y29tbWVudH0gPSByZXEuYm9keTtcbiAgICAvLyB0b2tlbiA9IHJlcS5oZWFkZXIoKTtcbiAgICB0cnkge1xuICAgICAgICBwb29sLnF1ZXJ5KCdTRUxFQ1QgdGl0bGUgRlJPTSAgZ2lmICBXSEVSRSBpZCA9ICQxJywgW2dpZklkXSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYocmVzdWx0LnJvd3NbMF0gPT09IHVuZGVmaW5lZCl7IHJldHVybiByZXMuanNlbmQuZXJyb3IoXCJObyBnaWYgdG8gY29tbWVudCBvblwiKTt9XG4gICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgIHBvb2wucXVlcnkoJ0lOU0VSVCBJTlRPIGdpZl9jb21tZW50IChjb21tZW50LCBlbXBsb3llZV9pZCwgZ2lmX2lkKSBWQUxVRVMgKCQxLCAkMiwgJDMpIFJFVFVSTklORyBjb21tZW50LCBjb21tZW50X2RhdGUnLCBbY29tbWVudCwgdXNlcmlkLCBnaWZJZF0sIChlcnJvciwgY29tbWVudFJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICBpZighZXJyb3Ipe1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNlbmQuc3VjY2Vzcyh7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0NvbW1lbnQgc3VjY2VzZnVsbHkgY3JlYXRlZCcsXG4gICAgICAgICAgICAgICAgY3JlYXRlZE9uOiBjb21tZW50UmVzdWx0LnJvd3NbMF0uY29tbWVudF9kYXRlLFxuICAgICAgICAgICAgICAgIGdpZlRpdGxlOiByZXN1bHQucm93c1swXS50aXRsZSxcbiAgICAgICAgICAgICAgICBjb21tZW50OiBjb21tZW50UmVzdWx0LnJvd3NbMF0uY29tbWVudCxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICB9IFxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyBkZWJ1ZygnYXBwOionKSgnRXJyb3IgT2NjdXJlZDogU29tZXRoaW5nIHdyb25nIGdldHRpbmcgYXJ0aWNsZScpOyB9XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IFJlbW92ZWQgQGNvbW1lbnRHaWYnKTtcbiAgICB9KTsgXG4gIH0sXG4gIC8vIGFkbWluIGRlbGV0ZSBjb21tZW50XG4gIGRlbGV0ZUNvbW1lbnQ6IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHsgdXNlcmlkIH0gPSByZXEuY29va2llcztcbiAgICBjb25zdCB7IHBhcmFtczogeyBnaWZJZCwgY29tbWVudElkIH0gfSA9IHJlcTtcbiAgICAgIHRyeSB7XG4gICAgICAgIHBvb2wucXVlcnkoJ1NFTEVDVCBpc2FkbWluIEZST00gZW1wbG95ZWUgV0hFUkUgaWQgPSAkMScsIFt1c2VyaWRdLCAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICAgICAgICBpZihyZXN1bHRzLnJvd3NbMF0gPT09IHVuZGVmaW5lZCl7IHJldHVybiByZXMuanNlbmQuZXJyb3IoXCJZb3UgYXJlIG5vdCBhbiBhZG1pblwiKTt9XG4gICAgICAgICAgICBpZiAoIWVycm9yKSB7XG4gICAgICAgICAgICAgIGlmIChyZXN1bHRzLnJvd3NbMF0uaXNhZG1pbiA9PT0gZmFsc2UpIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ09ubHkgYWRtaW4gY2FuIGNhbiBkZWxldGUgYSBjb21tZW50Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgcG9vbC5xdWVyeSgnREVMRVRFIEZST00gZ2lmX2NvbW1lbnQgV0hFUkUgIGlkID0gJDEgQU5EIGdpZl9pZCA9ICQyJywgW2NvbW1lbnRJZCwgZ2lmSWRdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICByZXMuanNlbmQuc3VjY2Vzcyh7IG1lc3NhZ2U6ICdDb21tZW50IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5JyB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgZGVidWcoJ2FwcDoqJykoZXJyb3IpOyB9XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IHJlbW92ZWQgQGRlbGV0ZUNvbW1lbnQnKTtcbiAgICB9KTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gifs.js"
      ],
      "names": [
        "cloudinary",
        "require",
        "v2",
        "config",
        "cloud_name",
        "api_key",
        "api_secret",
        "create",
        "req",
        "res",
        "cookies",
        "token",
        "userid",
        "body",
        "url",
        "title",
        "uploader",
        "upload",
        "tags",
        "then",
        "image",
        "console",
        "log",
        "public_id",
        "pool",
        "query",
        "err",
        "result",
        "jsend",
        "success",
        "gifID",
        "rows",
        "id",
        "message",
        "CreatedOn",
        "gifdate",
        "imageUrl",
        "imageurl",
        "error",
        "on",
        "gifId",
        "params",
        "undefined",
        "getOne",
        "commentResult",
        "createdOn",
        "comment",
        "createComment",
        "comment_date",
        "gifTitle",
        "deleteComment",
        "commentId",
        "results",
        "isadmin"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "\nlet cloudinary = require('cloudinary').v2;\nimport debug from 'debug';\nimport pool from '../database/dbconnect';\n// configure cloudinary\ncloudinary.config({\n  cloud_name: 'ds5hogj9b',\n  api_key: '657785678132187',\n  api_secret: 'EcvkztYhPW8egTvRTo10OdiJpwU'\n});\n\n\nexport default {\n  create: async (req, res) => {\n    // check if user is admin\n    const { token, userid } = req.cookies;\n    const {url, title} = req.body;\n    // token = req.header();\n    try {\n      // Upload gif to cloudinary\n      await cloudinary.uploader.upload(url, { tags: 'basic_sample', \"width\": 200, \"height\": 150,  })\n      .then(function (image) {\n      console.log();\n      console.log(\"** File Upload (Promise)\");\n      console.log(\"* public_id for the uploaded image is generated by Cloudinary's service.\");\n      console.log(\"* \" + image.public_id);\n      console.log(\"* \" + image.url);\n      // create trip if user is admin\n      pool.query('INSERT INTO gif (employee_id, imageurl, title) VALUES ($1, $2, $3) RETURNING id, imageurl, title, gifdate ', [userid, image.url, title], (err, result) => {\n        if (!err) {\n          return res.jsend.success({\n            gifID: result.rows[0].id,\n            message: 'Gif image successfully posted',\n            CreatedOn: result.rows[0].gifdate,\n            title: result.rows[0].title,\n            imageUrl: result.rows[0].imageurl\n          });\n        }\n          return res.jsend.error(error);\n      });\n    // disconnect client\n    pool.on('remove', () => {\n        debug('app:*')('Client Removed @ postGif');\n      });\n    })\n    .catch(function (err) {\n      console.log();\n      console.log(\"** File Upload (Promise)\");\n      if (err) { debug('app:*')('Error Occured: Something wrong @createGif' + err); }\n    });\n  }catch (error) { debug('app:*')('Error Occured: Something wrong @createGif'); }   \n},\n  // user delete gif logic\n  delete: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { gifId } } = req;\n    // token = req.header();\n    try {\n        pool.query('DELETE FROM  gif  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [gifId, userid], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"Delete gif failed\");}\n          if (!err) {\n            return res.jsend.success({\n              message: 'Gif succesfully deleted ',\n              title: result.rows[0].title\n            });\n          } \n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @deleteGif ' + error); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @deleteGif');\n    }); \n  },\n  // Get specific gif\n  getOne: async (req, res) => {\n    const { params: { gifId } } = req;\n    try {\n      pool.query('SELECT id, title, imageurl as imageurl, gifdate FROM gif WHERE id = $1', [gifId], (error, result) => {\n        pool.query('SELECT id as commentId, comment, employee_id as authorId from gif_comment WHERE gif_id = $1 ', [gifId], (err, commentResult) => {\n          if(!error){\n            if (!err) {\n              return res.jsend.success({\n                id: result.rows[0].id,\n                createdOn: result.rows[0].gifdate,\n                title: result.rows[0].title,\n                url: result.rows[0].imageurl,\n                comment: commentResult.rows,\n              });\n            }\n            return res.jsend.error(error);\n          }\n        });\n      });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong getting gif'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @gettingGif');\n    });\n  },\n  // user login logic\n  createComment: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { gifId } } = req;\n    const {comment} = req.body;\n    // token = req.header();\n    try {\n        pool.query('SELECT title FROM  gif  WHERE id = $1', [gifId], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"No gif to comment on\");}\n          if (!err) {\n            pool.query('INSERT INTO gif_comment (comment, employee_id, gif_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, gifId], (error, commentResult) => {\n              if(!error){\n                return res.jsend.success({\n                message: 'Comment succesfully created',\n                createdOn: commentResult.rows[0].comment_date,\n                gifTitle: result.rows[0].title,\n                comment: commentResult.rows[0].comment,\n              });\n            }\n            return res.jsend.error(error);\n            }); \n          } \n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong getting article'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @commentGif');\n    }); \n  },\n  // admin delete comment\n  deleteComment: async (req, res) => {\n    const { userid } = req.cookies;\n    const { params: { gifId, commentId } } = req;\n      try {\n        pool.query('SELECT isadmin FROM employee WHERE id = $1', [userid], (error, results) => {\n          if(results.rows[0] === undefined){ return res.jsend.error(\"You are not an admin\");}\n            if (!error) {\n              if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n            }\n          pool.query('DELETE FROM gif_comment WHERE  id = $1 AND gif_id = $2', [commentId, gifId], (error, result) => {\n          if (result) {\n          res.jsend.success({ message: 'Comment deleted successfully' });\n        }\n      });\n    });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client removed @deleteComment');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573834828717
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\articles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "articles.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res) {\n      var _req$cookies, token, userid, _req$body, title, article;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _req$cookies = req.cookies, token = _req$cookies.token, userid = _req$cookies.userid;\n              _req$body = req.body, title = _req$body.title, article = _req$body.article; // token = req.header();\n\n              try {\n                // employee post new article\n                _dbconnect[\"default\"].query('INSERT INTO articles (employee_id, title, article) VALUES ($1, $2, $3) RETURNING id, title, articledate', [userid, title, article], function (err, result) {\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Article Succesfully posted',\n                      articleId: result.rows[0].id,\n                      createdOn: result.rows[0].articledate,\n                      title: result.rows[0].title\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @postArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @ postAricle');\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // edit article logic\n  edit: function () {\n    var _edit = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$cookies2, token, userid, _req$body2, title, article, articleId;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$cookies2 = req.cookies, token = _req$cookies2.token, userid = _req$cookies2.userid;\n              _req$body2 = req.body, title = _req$body2.title, article = _req$body2.article;\n              articleId = req.params.articleId; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('UPDATE  articles SET  title = $1, article = $2  WHERE id = $3 AND employee_id = $4 RETURNING title, article, articledate', [title, article, articleId, userid], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"Article update failed\");\n                  }\n\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Article succesfully updated',\n                      title: result.rows[0].title,\n                      article: result.rows[0].article,\n                      createdOn: result.rows[0].articledate\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @editArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @ editAricle');\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function edit(_x3, _x4) {\n      return _edit.apply(this, arguments);\n    }\n\n    return edit;\n  }(),\n  // delete article logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$cookies3, token, userid, articleId;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _req$cookies3 = req.cookies, token = _req$cookies3.token, userid = _req$cookies3.userid;\n              articleId = req.params.articleId; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('DELETE FROM  articles  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [articleId, userid], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"Delete article failed\");\n                  }\n\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Article succesfully deleted ',\n                      title: result.rows[0].title\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @deleteArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @deleteArticle');\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function _delete(_x5, _x6) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // user get a specific article\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var articleId;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              articleId = req.params.articleId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT id, title, article, articledate FROM articles WHERE id = $1', [articleId], function (error, result) {\n                  _dbconnect[\"default\"].query('SELECT id as commentId, comment, employee_id as authorId from article_comment WHERE article_id = $1 ', [articleId], function (err, commentResult) {\n                    if (!error) {\n                      if (!err) {\n                        return res.jsend.success({\n                          id: result.rows[0].id,\n                          createdOn: result.rows[0].articledate,\n                          title: result.rows[0].title,\n                          article: result.rows[0].article,\n                          comment: commentResult.rows\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong getting article');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @gettingArticle');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getOne(_x7, _x8) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user comment on article\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(req, res) {\n      var _req$cookies4, token, userid, articleId, comment;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _req$cookies4 = req.cookies, token = _req$cookies4.token, userid = _req$cookies4.userid;\n              articleId = req.params.articleId;\n              comment = req.body.comment; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('SELECT title, article FROM  articles  WHERE id = $1', [articleId], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"No article to comment on\");\n                  }\n\n                  if (!err) {\n                    _dbconnect[\"default\"].query('INSERT INTO article_comment (comment, employee_id, article_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, articleId], function (error, commentResult) {\n                      if (!error) {\n                        return res.jsend.success({\n                          message: 'Comment succesfully created',\n                          createdOn: commentResult.rows[0].comment_date,\n                          articleTitle: result.rows[0].title,\n                          article: result.rows[0].article,\n                          comment: commentResult.rows[0].comment\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    });\n                  }\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong commentArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @commentArticle');\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function createComment(_x9, _x10) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // delete comment\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var userid, _req$params, articleId, commentId;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              userid = req.cookies.userid;\n              _req$params = req.params, articleId = _req$params.articleId, commentId = _req$params.commentId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT isadmin FROM employee WHERE id = $1', [userid], function (error, results) {\n                  if (results.rows[0] === undefined) {\n                    return res.jsend.error(\"You are not an admin\");\n                  }\n\n                  if (!error) {\n                    if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n                  }\n\n                  _dbconnect[\"default\"].query('DELETE FROM article_comment WHERE  id = $1 AND gif_id = $2 ', [commentId, articleId], function (error, result) {\n                    if (result) {\n                      res.jsend.success({\n                        message: 'Comment deleted successfully'\n                      });\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client removed @deleteComment');\n              });\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function deleteComment(_x11, _x12) {\n      return _deleteComment.apply(this, arguments);\n    }\n\n    return deleteComment;\n  }(),\n  // user login logic\n  getFeed: function () {\n    var _getFeed = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(req, res) {\n      var token;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              token = req.cookies.token;\n              req.Header = token; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('SELECT id, employee_id as authorId, title, article, articledate as createdOn FROM  articles' + ' UNION ALL ' + 'SELECT id, employee_id as authorId, title, imageurl as url, gifdate as createdOn FROM  gif  ORDER BY createdON DESC', function (err, result) {\n                  if (!err) {\n                    return res.jsend.success(result.rows);\n                  }\n\n                  return res.jsend.error('Unable to get feed ' + err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong gettingFeed ' + error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @getFeed');\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function getFeed(_x13, _x14) {\n      return _getFeed.apply(this, arguments);\n    }\n\n    return getFeed;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGljbGVzLmpzIl0sIm5hbWVzIjpbImNyZWF0ZSIsInJlcSIsInJlcyIsImNvb2tpZXMiLCJ0b2tlbiIsInVzZXJpZCIsImJvZHkiLCJ0aXRsZSIsImFydGljbGUiLCJwb29sIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJqc2VuZCIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiYXJ0aWNsZUlkIiwicm93cyIsImlkIiwiY3JlYXRlZE9uIiwiYXJ0aWNsZWRhdGUiLCJlcnJvciIsIm9uIiwiZWRpdCIsInBhcmFtcyIsInVuZGVmaW5lZCIsImdldE9uZSIsImNvbW1lbnRSZXN1bHQiLCJjb21tZW50IiwiY3JlYXRlQ29tbWVudCIsImNvbW1lbnRfZGF0ZSIsImFydGljbGVUaXRsZSIsImRlbGV0ZUNvbW1lbnQiLCJjb21tZW50SWQiLCJyZXN1bHRzIiwiaXNhZG1pbiIsImdldEZlZWQiLCJIZWFkZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7ZUFFZTtBQUNiQSxFQUFBQSxNQUFNO0FBQUE7QUFBQTtBQUFBLDRCQUFFLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDZCQUNvQkQsR0FBRyxDQUFDRSxPQUR4QixFQUNFQyxLQURGLGdCQUNFQSxLQURGLEVBQ1NDLE1BRFQsZ0JBQ1NBLE1BRFQ7QUFBQSwwQkFFb0JKLEdBQUcsQ0FBQ0ssSUFGeEIsRUFFRUMsS0FGRixhQUVFQSxLQUZGLEVBRVNDLE9BRlQsYUFFU0EsT0FGVCxFQUdOOztBQUNBLGtCQUFJO0FBQ0E7QUFDQUMsc0NBQUtDLEtBQUwsQ0FBVyx5R0FBWCxFQUFzSCxDQUFDTCxNQUFELEVBQVNFLEtBQVQsRUFBZ0JDLE9BQWhCLENBQXRILEVBQWdKLFVBQUNHLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUMvSixzQkFBSSxDQUFDRCxHQUFMLEVBQVU7QUFDUiwyQkFBT1QsR0FBRyxDQUFDVyxLQUFKLENBQVVDLE9BQVYsQ0FB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O0FBQ0ZLLHNDQUFLQyxLQUFMLENBQVcsZ0dBQ1QsYUFEUyxHQUVULHFIQUZGLEVBRXlILFVBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFpQjtBQUN4SSxzQkFBSSxDQUFDRCxHQUFMLEVBQVU7QUFDSiwyQkFBT1QsR0FBRyxDQUFDVyxLQUFKLENBQVVDLE9BQVYsQ0FBa0JGLE1BQU0sQ0FBQ0ssSUFBekIsQ0FBUDtBQUNIOztBQUNELHlCQUFPZixHQUFHLENBQUNXLEtBQUosQ0FBVVEsS0FBVixDQUFnQix3QkFBdUJWLEdBQXZDLENBQVA7QUFDSCxpQkFQRDtBQVFILGVBVEMsQ0FTQSxPQUFPVSxLQUFQLEVBQWM7QUFBRSx1Q0FBTSxPQUFOLEVBQWUsZ0RBQWdEQSxLQUEvRDtBQUF3RSxlQWJqRixDQWNUOzs7QUFDQVosb0NBQUthLEVBQUwsQ0FBUSxRQUFSLEVBQWtCLFlBQU07QUFDdEIsdUNBQU0sT0FBTixFQUFlLHlCQUFmO0FBQ0QsZUFGRDs7QUFmUztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUFGOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBekpNLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgcG9vbCBmcm9tICcuLi9kYXRhYmFzZS9kYmNvbm5lY3QnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNyZWF0ZTogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB0b2tlbiwgdXNlcmlkIH0gPSByZXEuY29va2llcztcbiAgICBjb25zdCB7IHRpdGxlLCBhcnRpY2xlfSA9IHJlcS5ib2R5O1xuICAgIC8vIHRva2VuID0gcmVxLmhlYWRlcigpO1xuICAgIHRyeSB7XG4gICAgICAgIC8vIGVtcGxveWVlIHBvc3QgbmV3IGFydGljbGVcbiAgICAgICAgcG9vbC5xdWVyeSgnSU5TRVJUIElOVE8gYXJ0aWNsZXMgKGVtcGxveWVlX2lkLCB0aXRsZSwgYXJ0aWNsZSkgVkFMVUVTICgkMSwgJDIsICQzKSBSRVRVUk5JTkcgaWQsIHRpdGxlLCBhcnRpY2xlZGF0ZScsIFt1c2VyaWQsIHRpdGxlLCBhcnRpY2xlXSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuanNlbmQuc3VjY2Vzcyh7XG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdBcnRpY2xlIFN1Y2Nlc2Z1bGx5IHBvc3RlZCcsXG4gICAgICAgICAgICAgIGFydGljbGVJZDogcmVzdWx0LnJvd3NbMF0uaWQsXG4gICAgICAgICAgICAgIGNyZWF0ZWRPbjogcmVzdWx0LnJvd3NbMF0uYXJ0aWNsZWRhdGUsXG4gICAgICAgICAgICAgIHRpdGxlOiByZXN1bHQucm93c1swXS50aXRsZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKGVycik7XG4gICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7IGRlYnVnKCdhcHA6KicpKCdFcnJvciBPY2N1cmVkOiBTb21ldGhpbmcgd3JvbmcgQHBvc3RBcnRpY2xlJyk7IH1cbiAgICAvLyBkaXNjb25uZWN0IGNsaWVudFxuICAgIHBvb2wub24oJ3JlbW92ZScsICgpID0+IHtcbiAgICAgIGRlYnVnKCdhcHA6KicpKCdDbGllbnQgUmVtb3ZlZCBAIHBvc3RBcmljbGUnKTtcbiAgICB9KTtcbiAgIFxuICB9LFxuICAvLyBlZGl0IGFydGljbGUgbG9naWNcbiAgZWRpdDogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB0b2tlbiwgdXNlcmlkIH0gPSByZXEuY29va2llcztcbiAgICBjb25zdCB7IHRpdGxlLCBhcnRpY2xlfSA9IHJlcS5ib2R5O1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGFydGljbGVJZCB9IH0gPSByZXE7XG4gICAgLy8gdG9rZW4gPSByZXEuaGVhZGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgICAgcG9vbC5xdWVyeSgnVVBEQVRFICBhcnRpY2xlcyBTRVQgIHRpdGxlID0gJDEsIGFydGljbGUgPSAkMiAgV0hFUkUgaWQgPSAkMyBBTkQgZW1wbG95ZWVfaWQgPSAkNCBSRVRVUk5JTkcgdGl0bGUsIGFydGljbGUsIGFydGljbGVkYXRlJywgW3RpdGxlLCBhcnRpY2xlLCBhcnRpY2xlSWQsIHVzZXJpZF0sIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmKHJlc3VsdC5yb3dzWzBdID09PSB1bmRlZmluZWQpeyByZXR1cm4gcmVzLmpzZW5kLmVycm9yKFwiQXJ0aWNsZSB1cGRhdGUgZmFpbGVkXCIpO31cbiAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5zdWNjZXNzKHtcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ0FydGljbGUgc3VjY2VzZnVsbHkgdXBkYXRlZCcsXG4gICAgICAgICAgICAgIHRpdGxlOiByZXN1bHQucm93c1swXS50aXRsZSxcbiAgICAgICAgICAgICAgYXJ0aWNsZTogcmVzdWx0LnJvd3NbMF0uYXJ0aWNsZSxcbiAgICAgICAgICAgICAgY3JlYXRlZE9uOiByZXN1bHQucm93c1swXS5hcnRpY2xlZGF0ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcihlcnIpO1xuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyBkZWJ1ZygnYXBwOionKSgnRXJyb3IgT2NjdXJlZDogU29tZXRoaW5nIHdyb25nIEBlZGl0QXJ0aWNsZScpOyB9XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IFJlbW92ZWQgQCBlZGl0QXJpY2xlJyk7XG4gICAgfSk7XG4gIH0sXG5cbiAgLy8gZGVsZXRlIGFydGljbGUgbG9naWNcbiAgZGVsZXRlOiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHRva2VuLCB1c2VyaWQgfSA9IHJlcS5jb29raWVzO1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGFydGljbGVJZCB9IH0gPSByZXE7XG4gICAgLy8gdG9rZW4gPSByZXEuaGVhZGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgICAgcG9vbC5xdWVyeSgnREVMRVRFIEZST00gIGFydGljbGVzICBXSEVSRSBpZCA9ICQxIEFORCBlbXBsb3llZV9pZCA9ICQyIFJFVFVSTklORyBpZCwgdGl0bGUnLCBbYXJ0aWNsZUlkLCB1c2VyaWRdLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICBpZihyZXN1bHQucm93c1swXSA9PT0gdW5kZWZpbmVkKXsgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcihcIkRlbGV0ZSBhcnRpY2xlIGZhaWxlZFwiKTt9XG4gICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuanNlbmQuc3VjY2Vzcyh7XG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdBcnRpY2xlIHN1Y2Nlc2Z1bGx5IGRlbGV0ZWQgJyxcbiAgICAgICAgICAgICAgdGl0bGU6IHJlc3VsdC5yb3dzWzBdLnRpdGxlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IFxuICAgICAgICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgZGVidWcoJ2FwcDoqJykoJ0Vycm9yIE9jY3VyZWQ6IFNvbWV0aGluZyB3cm9uZyBAZGVsZXRlQXJ0aWNsZScpOyB9XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IFJlbW92ZWQgQGRlbGV0ZUFydGljbGUnKTtcbiAgICB9KTsgXG4gIH0sXG5cbiAgLy8gdXNlciBnZXQgYSBzcGVjaWZpYyBhcnRpY2xlXG4gIGdldE9uZTogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBwYXJhbXM6IHsgYXJ0aWNsZUlkIH0gfSA9IHJlcTtcbiAgICB0cnkge1xuICAgICAgcG9vbC5xdWVyeSgnU0VMRUNUIGlkLCB0aXRsZSwgYXJ0aWNsZSwgYXJ0aWNsZWRhdGUgRlJPTSBhcnRpY2xlcyBXSEVSRSBpZCA9ICQxJywgW2FydGljbGVJZF0sIChlcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgIHBvb2wucXVlcnkoJ1NFTEVDVCBpZCBhcyBjb21tZW50SWQsIGNvbW1lbnQsIGVtcGxveWVlX2lkIGFzIGF1dGhvcklkIGZyb20gYXJ0aWNsZV9jb21tZW50IFdIRVJFIGFydGljbGVfaWQgPSAkMSAnLCBbYXJ0aWNsZUlkXSwgKGVyciwgY29tbWVudFJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmKCFlcnJvcil7XG4gICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzZW5kLnN1Y2Nlc3Moe1xuICAgICAgICAgICAgICAgIGlkOiByZXN1bHQucm93c1swXS5pZCxcbiAgICAgICAgICAgICAgICBjcmVhdGVkT246IHJlc3VsdC5yb3dzWzBdLmFydGljbGVkYXRlLFxuICAgICAgICAgICAgICAgIHRpdGxlOiByZXN1bHQucm93c1swXS50aXRsZSxcbiAgICAgICAgICAgICAgICBhcnRpY2xlOiByZXN1bHQucm93c1swXS5hcnRpY2xlLFxuICAgICAgICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnRSZXN1bHQucm93cyxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKGVycm9yKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgZGVidWcoJ2FwcDoqJykoJ0Vycm9yIE9jY3VyZWQ6IFNvbWV0aGluZyB3cm9uZyBnZXR0aW5nIGFydGljbGUnKTsgfVxuICAgIC8vIGRpc2Nvbm5lY3QgY2xpZW50XG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgZGVidWcoJ2FwcDoqJykoJ0NsaWVudCBSZW1vdmVkIEBnZXR0aW5nQXJ0aWNsZScpO1xuICAgIH0pO1xuICB9LFxuICAvLyB1c2VyIGNvbW1lbnQgb24gYXJ0aWNsZVxuICBjcmVhdGVDb21tZW50OiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHRva2VuLCB1c2VyaWQgfSA9IHJlcS5jb29raWVzO1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGFydGljbGVJZCB9IH0gPSByZXE7XG4gICAgY29uc3Qge2NvbW1lbnR9ID0gcmVxLmJvZHk7XG4gICAgLy8gdG9rZW4gPSByZXEuaGVhZGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgICAgcG9vbC5xdWVyeSgnU0VMRUNUIHRpdGxlLCBhcnRpY2xlIEZST00gIGFydGljbGVzICBXSEVSRSBpZCA9ICQxJywgW2FydGljbGVJZF0sIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmKHJlc3VsdC5yb3dzWzBdID09PSB1bmRlZmluZWQpeyByZXR1cm4gcmVzLmpzZW5kLmVycm9yKFwiTm8gYXJ0aWNsZSB0byBjb21tZW50IG9uXCIpO31cbiAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgcG9vbC5xdWVyeSgnSU5TRVJUIElOVE8gYXJ0aWNsZV9jb21tZW50IChjb21tZW50LCBlbXBsb3llZV9pZCwgYXJ0aWNsZV9pZCkgVkFMVUVTICgkMSwgJDIsICQzKSBSRVRVUk5JTkcgY29tbWVudCwgY29tbWVudF9kYXRlJywgW2NvbW1lbnQsIHVzZXJpZCwgYXJ0aWNsZUlkXSwgKGVycm9yLCBjb21tZW50UmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgIGlmKCFlcnJvcil7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5zdWNjZXNzKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQ29tbWVudCBzdWNjZXNmdWxseSBjcmVhdGVkJyxcbiAgICAgICAgICAgICAgICBjcmVhdGVkT246IGNvbW1lbnRSZXN1bHQucm93c1swXS5jb21tZW50X2RhdGUsXG4gICAgICAgICAgICAgICAgYXJ0aWNsZVRpdGxlOiByZXN1bHQucm93c1swXS50aXRsZSxcbiAgICAgICAgICAgICAgICBhcnRpY2xlOiByZXN1bHQucm93c1swXS5hcnRpY2xlLFxuICAgICAgICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnRSZXN1bHQucm93c1swXS5jb21tZW50LFxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgfSk7IFxuICAgICAgICAgIH0gXG4gICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7IGRlYnVnKCdhcHA6KicpKCdFcnJvciBPY2N1cmVkOiBTb21ldGhpbmcgd3JvbmcgY29tbWVudEFydGljbGUnKTsgfVxuICAgIC8vIGRpc2Nvbm5lY3QgY2xpZW50XG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgZGVidWcoJ2FwcDoqJykoJ0NsaWVudCBSZW1vdmVkIEBjb21tZW50QXJ0aWNsZScpO1xuICAgIH0pO1xuICB9LFxuICAvLyBkZWxldGUgY29tbWVudFxuICBkZWxldGVDb21tZW50OiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHVzZXJpZCB9ID0gcmVxLmNvb2tpZXM7XG4gICAgY29uc3QgeyBwYXJhbXM6IHsgYXJ0aWNsZUlkLCBjb21tZW50SWQgfSB9ID0gcmVxO1xuICAgICAgdHJ5IHtcbiAgICAgICAgcG9vbC5xdWVyeSgnU0VMRUNUIGlzYWRtaW4gRlJPTSBlbXBsb3llZSBXSEVSRSBpZCA9ICQxJywgW3VzZXJpZF0sIChlcnJvciwgcmVzdWx0cykgPT4ge1xuICAgICAgICAgIGlmKHJlc3VsdHMucm93c1swXSA9PT0gdW5kZWZpbmVkKXsgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcihcIllvdSBhcmUgbm90IGFuIGFkbWluXCIpO31cbiAgICAgICAgICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgICAgICAgaWYgKHJlc3VsdHMucm93c1swXS5pc2FkbWluID09PSBmYWxzZSkgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignT25seSBhZG1pbiBjYW4gY2FuIGRlbGV0ZSBhIGNvbW1lbnQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBwb29sLnF1ZXJ5KCdERUxFVEUgRlJPTSBhcnRpY2xlX2NvbW1lbnQgV0hFUkUgIGlkID0gJDEgQU5EIGdpZl9pZCA9ICQyICcsIFtjb21tZW50SWQsIGFydGljbGVJZCBdLCAoZXJyb3IsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICByZXMuanNlbmQuc3VjY2Vzcyh7IG1lc3NhZ2U6ICdDb21tZW50IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5JyB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgZGVidWcoJ2FwcDoqJykoZXJyb3IpOyB9XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOionKSgnQ2xpZW50IHJlbW92ZWQgQGRlbGV0ZUNvbW1lbnQnKTtcbiAgICB9KTtcbiAgfSxcbiAgLy8gdXNlciBsb2dpbiBsb2dpY1xuICBnZXRGZWVkOiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBjb25zdCB7IHRva2VuIH0gPSByZXEuY29va2llcztcbiAgICByZXEuSGVhZGVyID0gdG9rZW47XG4gICAgLy8gdG9rZW4gPSByZXEuaGVhZGVyKCk7XG4gICAgdHJ5IHtcbiAgICAgIHBvb2wucXVlcnkoJ1NFTEVDVCBpZCwgZW1wbG95ZWVfaWQgYXMgYXV0aG9ySWQsIHRpdGxlLCBhcnRpY2xlLCBhcnRpY2xlZGF0ZSBhcyBjcmVhdGVkT24gRlJPTSAgYXJ0aWNsZXMnXG4gICAgICArICcgVU5JT04gQUxMICdcbiAgICAgICsgJ1NFTEVDVCBpZCwgZW1wbG95ZWVfaWQgYXMgYXV0aG9ySWQsIHRpdGxlLCBpbWFnZXVybCBhcyB1cmwsIGdpZmRhdGUgYXMgY3JlYXRlZE9uIEZST00gIGdpZiAgT1JERVIgQlkgY3JlYXRlZE9OIERFU0MnLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5zdWNjZXNzKHJlc3VsdC5yb3dzKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignVW5hYmxlIHRvIGdldCBmZWVkICcrIGVycik7IFxuICAgICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IGRlYnVnKCdhcHA6KicpKCdFcnJvciBPY2N1cmVkOiBTb21ldGhpbmcgd3JvbmcgZ2V0dGluZ0ZlZWQgJyArIGVycm9yKTsgfVxuICAvLyBkaXNjb25uZWN0IGNsaWVudFxuICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgZGVidWcoJ2FwcDoqJykoJ0NsaWVudCBSZW1vdmVkIEBnZXRGZWVkJyk7XG4gIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "articles.js"
      ],
      "names": [
        "create",
        "req",
        "res",
        "cookies",
        "token",
        "userid",
        "body",
        "title",
        "article",
        "pool",
        "query",
        "err",
        "result",
        "jsend",
        "success",
        "message",
        "articleId",
        "rows",
        "id",
        "createdOn",
        "articledate",
        "error",
        "on",
        "edit",
        "params",
        "undefined",
        "getOne",
        "commentResult",
        "comment",
        "createComment",
        "comment_date",
        "articleTitle",
        "deleteComment",
        "commentId",
        "results",
        "isadmin",
        "getFeed",
        "Header"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import debug from 'debug';\nimport pool from '../database/dbconnect';\n\nexport default {\n  create: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { title, article} = req.body;\n    // token = req.header();\n    try {\n        // employee post new article\n        pool.query('INSERT INTO articles (employee_id, title, article) VALUES ($1, $2, $3) RETURNING id, title, articledate', [userid, title, article], (err, result) => {\n          if (!err) {\n            return res.jsend.success({\n              message: 'Article Succesfully posted',\n              articleId: result.rows[0].id,\n              createdOn: result.rows[0].articledate,\n              title: result.rows[0].title,\n            });\n          }\n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @postArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @ postAricle');\n    });\n   \n  },\n  // edit article logic\n  edit: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { title, article} = req.body;\n    const { params: { articleId } } = req;\n    // token = req.header();\n    try {\n        pool.query('UPDATE  articles SET  title = $1, article = $2  WHERE id = $3 AND employee_id = $4 RETURNING title, article, articledate', [title, article, articleId, userid], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"Article update failed\");}\n          if (!err) {\n            return res.jsend.success({\n              message: 'Article succesfully updated',\n              title: result.rows[0].title,\n              article: result.rows[0].article,\n              createdOn: result.rows[0].articledate,\n            });\n          } \n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @editArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @ editAricle');\n    });\n  },\n\n  // delete article logic\n  delete: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { articleId } } = req;\n    // token = req.header();\n    try {\n        pool.query('DELETE FROM  articles  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [articleId, userid], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"Delete article failed\");}\n          if (!err) {\n            return res.jsend.success({\n              message: 'Article succesfully deleted ',\n              title: result.rows[0].title\n            });\n          } \n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @deleteArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @deleteArticle');\n    }); \n  },\n\n  // user get a specific article\n  getOne: async (req, res) => {\n    const { params: { articleId } } = req;\n    try {\n      pool.query('SELECT id, title, article, articledate FROM articles WHERE id = $1', [articleId], (error, result) => {\n        pool.query('SELECT id as commentId, comment, employee_id as authorId from article_comment WHERE article_id = $1 ', [articleId], (err, commentResult) => {\n          if(!error){\n            if (!err) {\n              return res.jsend.success({\n                id: result.rows[0].id,\n                createdOn: result.rows[0].articledate,\n                title: result.rows[0].title,\n                article: result.rows[0].article,\n                comment: commentResult.rows,\n              });\n            }\n            return res.jsend.error(error);\n          }\n        });\n      });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong getting article'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @gettingArticle');\n    });\n  },\n  // user comment on article\n  createComment: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { articleId } } = req;\n    const {comment} = req.body;\n    // token = req.header();\n    try {\n        pool.query('SELECT title, article FROM  articles  WHERE id = $1', [articleId], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"No article to comment on\");}\n          if (!err) {\n            pool.query('INSERT INTO article_comment (comment, employee_id, article_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, articleId], (error, commentResult) => {\n              if(!error){\n                return res.jsend.success({\n                message: 'Comment succesfully created',\n                createdOn: commentResult.rows[0].comment_date,\n                articleTitle: result.rows[0].title,\n                article: result.rows[0].article,\n                comment: commentResult.rows[0].comment,\n              });\n            }\n            return res.jsend.error(error);\n            }); \n          } \n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong commentArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @commentArticle');\n    });\n  },\n  // delete comment\n  deleteComment: async (req, res) => {\n    const { userid } = req.cookies;\n    const { params: { articleId, commentId } } = req;\n      try {\n        pool.query('SELECT isadmin FROM employee WHERE id = $1', [userid], (error, results) => {\n          if(results.rows[0] === undefined){ return res.jsend.error(\"You are not an admin\");}\n            if (!error) {\n              if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n            }\n          pool.query('DELETE FROM article_comment WHERE  id = $1 AND gif_id = $2 ', [commentId, articleId ], (error, result) => {\n          if (result) {\n          res.jsend.success({ message: 'Comment deleted successfully' });\n        }\n      });\n    });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client removed @deleteComment');\n    });\n  },\n  // user login logic\n  getFeed: async (req, res) => {\n    const { token } = req.cookies;\n    req.Header = token;\n    // token = req.header();\n    try {\n      pool.query('SELECT id, employee_id as authorId, title, article, articledate as createdOn FROM  articles'\n      + ' UNION ALL '\n      + 'SELECT id, employee_id as authorId, title, imageurl as url, gifdate as createdOn FROM  gif  ORDER BY createdON DESC', (err, result) => {\n        if (!err) {\n              return res.jsend.success(result.rows);\n          }\n          return res.jsend.error('Unable to get feed '+ err); \n      });\n  } catch (error) { debug('app:*')('Error Occured: Something wrong gettingFeed ' + error); }\n  // disconnect client\n  pool.on('remove', () => {\n    debug('app:*')('Client Removed @getFeed');\n  });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573834879977
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\tests\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests\\test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nrequire(\"chai/register-should\");\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Import the dependencies for testing\n// Configure chai\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\n_chai[\"default\"].should();\n\ndescribe(\"Teamwork Application Unit Tests\", function () {\n  beforeEach(function () {\n    var userid = 1;\n    return userid;\n  });\n  describe(\"Test for GET tasks\", function () {\n    // Test to get all articles and gifs\n    it(\"should get feed\", function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).get('/api/v1/feed').end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it(\"should get a specific article\", function (done) {\n      var id = 3;\n\n      _chai[\"default\"].request(_app[\"default\"]).get(\"/api/v1/articles/\".concat(id)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it(\"should get a specific gif\", function (done) {\n      var id = 6;\n\n      _chai[\"default\"].request(_app[\"default\"]).get(\"/api/v1/gifs/\".concat(id)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n  });\n  describe('Test for POST tasks', function () {\n    /** it('Create a new user', function(done) {\r\n         this.timeout(0);\r\n             const user = {\r\n                 email: 'jelel@yahoo.com', \r\n                 firstName: 'jelel', \r\n                 lastName: 'Hammed', \r\n                 password: 'olajide4me', \r\n                 gender: 'Male', \r\n                 jobRole: 'Administrator', \r\n                 department: 'Admin', \r\n             };\r\n             chai.request(app)\r\n             .post('/api/v1/auth/create-user')\r\n             .set('Accept', 'application/json')\r\n             .send(user)\r\n             .end(function(err, res) {\r\n                 res.should.have.status(200);\r\n                 res.body.should.be.a('object');\r\n                 done();\r\n             });\r\n     });\r\n       it('Login a user', function(done) {\r\n         this.timeout(0);\r\n          chai.request(app)\r\n             .post('/api/v1/auth/signin')\r\n             .send({\r\n                 email: 'jelel@yahoo.com',\r\n                 password: 'olajide4me'\r\n             })\r\n             .end(function(err, res) {\r\n                 res.should.have.status(200);\r\n                 res.body.should.be.a('object');\r\n                 done();\r\n             });\r\n     });\r\n    */\n    it('Post new article', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/articles').send({\n        title: 'Test Post article',\n        article: 'am just testing posting articles'\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Post comment on article', function (done) {\n      var articleId = 3;\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"/api/v1/articles/\".concat(articleId, \"/comment\")).send({\n        comment: 'This is nice'\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Post comment on gif', function (done) {\n      var gifId = 3;\n\n      _chai[\"default\"].request(_app[\"default\"]).post(\"/api/v1/gifs/\".concat(gifId, \"/comment\")).send({\n        comment: 'Good post'\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Post new gif', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/api/v1/gifs').send({\n        title: 'Test Post',\n        url: 'gifs/jona.jpg'\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done();\n      });\n    });\n  });\n  describe('Test for DELETE tasks', function () {\n    it('Delete a gif', function (done) {\n      var gifId = 4;\n\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"](\"/api/v1/gifs/\".concat(gifId)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Delete an article', function (done) {\n      var articleId = 1;\n\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"](\"/api/v1/articles/\".concat(articleId)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Delete an article comment', function (done) {\n      var articleId = 3;\n      var commentId = 1;\n\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"](\"/api/v1/articles/\".concat(articleId, \"/comment/\").concat(commentId)).end(function (err, res) {\n        res.should.have.status(200); //res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n    it('Delete a gif comment', function (done) {\n      var gifId = 6;\n      var commentId = 1;\n\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"](\"/api/v1/gifs/\".concat(gifId, \"/comment/\").concat(commentId)).end(function (err, res) {\n        res.should.have.status(200); //res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n  });\n  describe('Test for PATCH/PUT tasks', function () {\n    it('Edit an article', function (done) {\n      var articleId = 5;\n\n      _chai[\"default\"].request(_app[\"default\"]).patch(\"/api/v1/articles/\".concat(articleId)).send({\n        title: 'edited article',\n        article: 'just another article edited '\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "chai",
        "use",
        "chatHttp",
        "should",
        "describe",
        "beforeEach",
        "userid",
        "it",
        "done",
        "request",
        "app",
        "get",
        "end",
        "err",
        "res",
        "have",
        "status",
        "body",
        "be",
        "a",
        "id",
        "post",
        "send",
        "title",
        "article",
        "articleId",
        "comment",
        "gifId",
        "url",
        "commentId",
        "patch"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests",
      "sourcesContent": [
        "// Import the dependencies for testing\r\nimport chai from 'chai';\r\nimport chatHttp from 'chai-http';\r\nimport 'chai/register-should';\r\nimport app from '../app';\r\n// Configure chai\r\nchai.use(chatHttp);\r\nchai.should();\r\ndescribe(\"Teamwork Application Unit Tests\", () => {\r\n    beforeEach( function (){\r\n        const userid = 1;\r\n        return userid;\r\n    });\r\n    describe(\"Test for GET tasks\", () => {\r\n        // Test to get all articles and gifs\r\n        it(\"should get feed\", (done) => {\r\n             chai.request(app)\r\n                 .get('/api/v1/feed')\r\n                 .end((err, res) => {\r\n                     res.should.have.status(200);\r\n                     res.body.should.be.a('object');\r\n                     done(err);\r\n                  });\r\n         });\r\n\r\n        it(\"should get a specific article\", (done) => {\r\n             const id = 3;\r\n             chai.request(app)\r\n                 .get(`/api/v1/articles/${id}`)\r\n                 .end((err, res) => {\r\n                     res.should.have.status(200);\r\n                     res.body.should.be.a('object');\r\n                     done(err);\r\n                  });\r\n         });\r\n\r\n        it(\"should get a specific gif\", (done) => {\r\n             const id = 6;\r\n             chai.request(app)\r\n                 .get(`/api/v1/gifs/${id}`)\r\n                 .end((err, res) => {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                  });\r\n         });\r\n    });\r\n\r\n    describe('Test for POST tasks', function() {\r\n       /** it('Create a new user', function(done) {\r\n            this.timeout(0);\r\n                const user = {\r\n                    email: 'jelel@yahoo.com', \r\n                    firstName: 'jelel', \r\n                    lastName: 'Hammed', \r\n                    password: 'olajide4me', \r\n                    gender: 'Male', \r\n                    jobRole: 'Administrator', \r\n                    department: 'Admin', \r\n                };\r\n                chai.request(app)\r\n                .post('/api/v1/auth/create-user')\r\n                .set('Accept', 'application/json')\r\n                .send(user)\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done();\r\n                });\r\n        });\r\n\r\n        it('Login a user', function(done) {\r\n            this.timeout(0);\r\n             chai.request(app)\r\n                .post('/api/v1/auth/signin')\r\n                .send({\r\n                    email: 'jelel@yahoo.com',\r\n                    password: 'olajide4me'\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done();\r\n                });\r\n        });\r\n*/\r\n        it('Post new article', function(done) {\r\n            chai.request(app)\r\n                .post('/api/v1/articles')\r\n                .send({\r\n                    title: 'Test Post article',\r\n                    article: 'am just testing posting articles'\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Post comment on article', function(done) {\r\n            const articleId = 3;\r\n            chai.request(app)\r\n                .post(`/api/v1/articles/${articleId}/comment`)\r\n                .send({\r\n                    comment: 'This is nice',\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Post comment on gif', function(done) {\r\n            const gifId = 3;\r\n            chai.request(app)\r\n                .post(`/api/v1/gifs/${gifId}/comment`)\r\n                .send({\r\n                    comment: 'Good post',\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Post new gif', function(done) {\r\n            chai.request(app)\r\n                .post('/api/v1/gifs')\r\n                .send({\r\n                    title: 'Test Post',\r\n                    url: 'gifs/jona.jpg'\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done();\r\n                });\r\n        });\r\n    });\r\n    describe('Test for DELETE tasks', function() {\r\n        it('Delete a gif', function(done) {\r\n            const gifId = 4;\r\n            chai.request(app)\r\n                .delete(`/api/v1/gifs/${gifId}`)\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Delete an article', function(done) {\r\n            const articleId = 1;\r\n            chai.request(app)\r\n                .delete(`/api/v1/articles/${articleId}`)\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Delete an article comment', function(done) {\r\n            const articleId = 3;\r\n            const commentId = 1;\r\n            chai.request(app)\r\n                .delete(`/api/v1/articles/${articleId}/comment/${commentId}`)\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    //res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Delete a gif comment', function(done) {\r\n            const gifId = 6;\r\n            const commentId = 1;\r\n            chai.request(app)\r\n                .delete(`/api/v1/gifs/${gifId}/comment/${commentId}`)\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    //res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n    });\r\n\r\n    describe('Test for PATCH/PUT tasks', function() {\r\n        it('Edit an article', function(done) {\r\n            const articleId = 5;\r\n            chai.request(app)\r\n                .patch(`/api/v1/articles/${articleId}`)\r\n                .send({\r\n                    title: 'edited article',\r\n                    article: 'just another article edited '\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n    });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1573840833360
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsend = _interopRequireDefault(require(\"jsend\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _tables = _interopRequireDefault(require(\"./models/tables\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // to resolve cross origin resource shearing (CORS) error add folowing to te response header \n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n  next();\n});\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _morgan[\"default\"])('combined'));\napp.use(_jsend[\"default\"].middleware);\n\n_tables[\"default\"].createEmployeeTable();\n\n_tables[\"default\"].createGifTable();\n\n_tables[\"default\"].createArticlesTable();\n\n_tables[\"default\"].createGifCommentTable();\n\n_tables[\"default\"].createArticleCommentTable();\n\n_tables[\"default\"].disconnect();\n\napp.use('/api/v1', _routes[\"default\"]);\napp.get('*', function (req, res) {\n  return res.jsend.success('Teamwork!!!');\n});\nvar port = parseInt(process.env.PORT, 10) || 4000;\napp.listen(port, function () {\n  return (0, _debug[\"default\"])('app:*')(\"Live at \".concat(port));\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJhcHAiLCJ1c2UiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2V0SGVhZGVyIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJqc2VuZCIsIm1pZGRsZXdhcmUiLCJ0YWJsZSIsImNyZWF0ZUVtcGxveWVlVGFibGUiLCJjcmVhdGVHaWZUYWJsZSIsImNyZWF0ZUFydGljbGVzVGFibGUiLCJjcmVhdGVHaWZDb21tZW50VGFibGUiLCJjcmVhdGVBcnRpY2xlQ29tbWVudFRhYmxlIiwiZGlzY29ubmVjdCIsInYxUm91dGVyIiwiZ2V0Iiwic3VjY2VzcyIsInBvcnQiLCJwYXJzZUludCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7OztBQUVBQSxtQkFBT0MsTUFBUDs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN4QkQsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsNkJBQWQsRUFBNkMsR0FBN0M7QUFDQUYsRUFBQUEsR0FBRyxDQUFDRSxTQUFKLENBQWMsOEJBQWQsRUFBOEMsd0VBQTlDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDhCQUFkLEVBQThDLHdDQUE5QztBQUNBRCxFQUFBQSxJQUFJO0FBQ0wsQ0FMSDtBQU9BSixHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBUixHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdHLElBQVgsRUFBUjtBQUNBVCxHQUFHLENBQUNDLEdBQUosQ0FBUSwrQkFBUjtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSx3QkFBTyxVQUFQLENBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFTLGtCQUFNQyxVQUFkOztBQUNBQyxtQkFBTUMsbUJBQU47O0FBQ0FELG1CQUFNRSxjQUFOOztBQUNBRixtQkFBTUcsbUJBQU47O0FBQ0FILG1CQUFNSSxxQkFBTjs7QUFDQUosbUJBQU1LLHlCQUFOOztBQUVBTCxtQkFBTU0sVUFBTjs7QUFFQWxCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJrQixrQkFBbkI7QUFFQW5CLEdBQUcsQ0FBQ29CLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ2xCLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ08sS0FBSixDQUFVVyxPQUFWLENBQWtCLGFBQWxCLENBQWQ7QUFBQSxDQUFiO0FBRUEsSUFBTUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFiLEVBQW1CLEVBQW5CLENBQVIsSUFBa0MsSUFBL0M7QUFFQTFCLEdBQUcsQ0FBQzJCLE1BQUosQ0FBV0wsSUFBWCxFQUFpQjtBQUFBLFNBQU0sdUJBQU0sT0FBTixvQkFBMEJBLElBQTFCLEVBQU47QUFBQSxDQUFqQjtBQUVBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUI3QixHQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0BiYWJlbC9wb2x5ZmlsbCc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQganNlbmQgZnJvbSAnanNlbmQnO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCB0YWJsZSBmcm9tICcuL21vZGVscy90YWJsZXMnO1xuXG5pbXBvcnQgdjFSb3V0ZXIgZnJvbSAnLi9yb3V0ZXMnO1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gdG8gcmVzb2x2ZSBjcm9zcyBvcmlnaW4gcmVzb3VyY2Ugc2hlYXJpbmcgKENPUlMpIGVycm9yIGFkZCBmb2xvd2luZyB0byB0ZSByZXNwb25zZSBoZWFkZXIgXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsICcqJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdPcmlnaW4sIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQsIEFjY2VwdCwgQ29udGVudC1UeXBlLCBBdXRob3JpemF0aW9uJyk7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdHRVQsIFBPU1QsIFBVVCwgREVMRVRFLCBQQVRDSCwgT1BUSU9OUycpO1xuICAgIG5leHQoKTtcbiAgfSk7XG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbmFwcC51c2UobW9yZ2FuKCdjb21iaW5lZCcpKTtcbmFwcC51c2UoanNlbmQubWlkZGxld2FyZSk7XG50YWJsZS5jcmVhdGVFbXBsb3llZVRhYmxlKCk7XG50YWJsZS5jcmVhdGVHaWZUYWJsZSgpO1xudGFibGUuY3JlYXRlQXJ0aWNsZXNUYWJsZSgpO1xudGFibGUuY3JlYXRlR2lmQ29tbWVudFRhYmxlKCk7XG50YWJsZS5jcmVhdGVBcnRpY2xlQ29tbWVudFRhYmxlKCk7XG5cbnRhYmxlLmRpc2Nvbm5lY3QoKTtcblxuYXBwLnVzZSgnL2FwaS92MScsIHYxUm91dGVyKTtcblxuYXBwLmdldCgnKicsIChyZXEsIHJlcykgPT4gcmVzLmpzZW5kLnN1Y2Nlc3MoJ1RlYW13b3JrISEhJykpO1xuXG5jb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCwgMTApIHx8IDQwMDA7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gZGVidWcoJ2FwcDoqJykoYExpdmUgYXQgJHtwb3J0fWApKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "use",
        "req",
        "res",
        "next",
        "setHeader",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "jsend",
        "middleware",
        "table",
        "createEmployeeTable",
        "createGifTable",
        "createArticlesTable",
        "createGifCommentTable",
        "createArticleCommentTable",
        "disconnect",
        "v1Router",
        "get",
        "success",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wEAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAD,EAAAA,IAAI;AACL,CALH;AAOAJ,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACC,GAAJ,CAAQK,uBAAWG,IAAX,EAAR;AACAT,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,wBAAO,UAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQS,kBAAMC,UAAd;;AACAC,mBAAMC,mBAAN;;AACAD,mBAAME,cAAN;;AACAF,mBAAMG,mBAAN;;AACAH,mBAAMI,qBAAN;;AACAJ,mBAAMK,yBAAN;;AAEAL,mBAAMM,UAAN;;AAEAlB,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBkB,kBAAnB;AAEAnB,GAAG,CAACoB,GAAJ,CAAQ,GAAR,EAAa,UAAClB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACO,KAAJ,CAAUW,OAAV,CAAkB,aAAlB,CAAd;AAAA,CAAb;AAEA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AAEA1B,GAAG,CAAC2B,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAM,uBAAM,OAAN,oBAA0BA,IAA1B,EAAN;AAAA,CAAjB;AAEAM,MAAM,CAACC,OAAP,GAAiB7B,GAAjB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "sourcesContent": [
        "import '@babel/polyfill';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport dotenv from 'dotenv';\nimport express from 'express';\nimport jsend from 'jsend';\nimport morgan from 'morgan';\nimport debug from 'debug';\nimport table from './models/tables';\n\nimport v1Router from './routes';\n\ndotenv.config();\n\nconst app = express();\n\n// to resolve cross origin resource shearing (CORS) error add folowing to te response header \napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    next();\n  });\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(morgan('combined'));\napp.use(jsend.middleware);\ntable.createEmployeeTable();\ntable.createGifTable();\ntable.createArticlesTable();\ntable.createGifCommentTable();\ntable.createArticleCommentTable();\n\ntable.disconnect();\n\napp.use('/api/v1', v1Router);\n\napp.get('*', (req, res) => res.jsend.success('Teamwork!!!'));\n\nconst port = parseInt(process.env.PORT, 10) || 4000;\n\napp.listen(port, () => debug('app:*')(`Live at ${port}`));\n\nmodule.exports = app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573705783317
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\tables.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "tables.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar tables = _defineProperty({\n  // create user tables if not exist\n  createEmployeeTable: function createEmployeeTable() {\n    var employee = \"CREATE TABLE IF NOT EXISTS\\n       employee( \\n          id SERIAL PRIMARY KEY, \\n          firstName VARCHAR NOT NULL,\\n          lastName VARCHAR NOT NULL,\\n          email VARCHAR NOT NULL,\\n          password VARCHAR NOT NULL,\\n          gender VARCHAR NOT NULL,\\n          jobRole VARCHAR NOT NULL,\\n          isAdmin BOOLEAN DEFAULT FALSE,\\n          department VARCHAR NOT NULL,\\n          regDate TIMESTAMP DEFAULT NOW()\\n        )\";\n\n    _dbconnect[\"default\"].query(employee).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table employee is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createGifTable: function createGifTable() {\n    var gif = \"CREATE TABLE IF NOT EXISTS\\n      gif(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        imageUrl VARCHAR NOT NULL,\\n        title VARCHAR NOT NULL,\\n        gifDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(gif).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table gif is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createArticlesTable: function createArticlesTable() {\n    var articles = \"CREATE TABLE IF NOT EXISTS\\n      articles(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        title VARCHAR NOT NULL,\\n        article VARCHAR NOT NULL,\\n        articleDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(articles).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table articles is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createGifCommentTable: function createGifCommentTable() {\n    var comment = \"CREATE TABLE IF NOT EXISTS\\n      gif_comment(\\n        id SERIAL PRIMARY KEY,\\n        gif_id INT NOT NULL,\\n        employee_id INT NOT NULL,\\n        comment VARCHAR NOT NULL,\\n        comment_date TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(comment).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table gif_comment is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  disconnect: function disconnect() {\n    // disconnect client\n    _dbconnect[\"default\"].on('remove', function () {\n      (0, _debug[\"default\"])('app:database')('Tables created successfully, conection removed');\n    });\n  },\n  createArticleCommentTable: function createArticleCommentTable() {\n    var comment = \"CREATE TABLE IF NOT EXISTS\\n      article_comment(\\n        id SERIAL PRIMARY KEY,\\n        article_id INT NOT NULL,\\n        employee_id INT NOT NULL,\\n        comment VARCHAR NOT NULL,\\n        comment_date TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(comment).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table article_comment is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  }\n}, \"disconnect\", function disconnect() {\n  // disconnect client\n  _dbconnect[\"default\"].on('remove', function () {\n    (0, _debug[\"default\"])('app:database')('Tables created successfully, conection removed');\n  });\n}); // export utilities to be accessible  from any where within the application\n\n\nvar _default = tables;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlcy5qcyJdLCJuYW1lcyI6WyJ0YWJsZXMiLCJjcmVhdGVFbXBsb3llZVRhYmxlIiwiZW1wbG95ZWUiLCJwb29sIiwicXVlcnkiLCJ0aGVuIiwicmVzIiwiZXJyIiwiY3JlYXRlR2lmVGFibGUiLCJnaWYiLCJjcmVhdGVBcnRpY2xlc1RhYmxlIiwiYXJ0aWNsZXMiLCJjcmVhdGVHaWZDb21tZW50VGFibGUiLCJjb21tZW50IiwiZGlzY29ubmVjdCIsIm9uIiwiY3JlYXRlQXJ0aWNsZUNvbW1lbnRUYWJsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUVBOzs7Ozs7QUFFQSxJQUFNQSxNQUFNO0FBQ1Y7QUFDQUMsRUFBQUEsbUJBQW1CLEVBQUUsK0JBQU07QUFDekIsUUFBTUMsUUFBUSw0YkFBZDs7QUFhQUMsMEJBQUtDLEtBQUwsQ0FBV0YsUUFBWCxFQUNHRyxJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFTO0FBQ2IsNkJBQU0sT0FBTix3Q0FBOENBLEdBQTlDO0FBQ0QsS0FISCxXQUlTLFVBQUNDLEdBQUQsRUFBUztBQUNkLDZCQUFNLE9BQU4sRUFBZUEsR0FBZjtBQUNELEtBTkg7QUFPRCxHQXZCUztBQXdCVkMsRUFBQUEsY0FBYyxFQUFFLDBCQUFNO0FBQ3BCLFFBQU1DLEdBQUcscU9BQVQ7O0FBUUFOLDBCQUFLQyxLQUFMLENBQVdLLEdBQVgsRUFDR0osSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sbUNBQXlDQSxHQUF6QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F4Q1M7QUF5Q1ZHLEVBQUFBLG1CQUFtQixFQUFFLCtCQUFNO0FBQ3pCLFFBQU1DLFFBQVEsNk9BQWQ7O0FBUUFSLDBCQUFLQyxLQUFMLENBQVdPLFFBQVgsRUFDR04sSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sd0NBQThDQSxHQUE5QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F6RFM7QUEwRFZLLEVBQUFBLHFCQUFxQixFQUFFLGlDQUFNO0FBQzNCLFFBQU1DLE9BQU8sOE9BQWI7O0FBUUFWLDBCQUFLQyxLQUFMLENBQVdTLE9BQVgsRUFDR1IsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sMkNBQWlEQSxHQUFqRDtBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0ExRVM7QUEyRVRPLEVBQUFBLFVBQVUsRUFBRSxzQkFBTTtBQUNqQjtBQUNBWCwwQkFBS1ksRUFBTCxDQUFRLFFBQVIsRUFBa0IsWUFBTTtBQUN0Qiw2QkFBTSxjQUFOLEVBQXNCLGdEQUF0QjtBQUNELEtBRkQ7QUFHRCxHQWhGUztBQWlGVkMsRUFBQUEseUJBQXlCLEVBQUUscUNBQU07QUFDL0IsUUFBTUgsT0FBTyxzUEFBYjs7QUFRQVYsMEJBQUtDLEtBQUwsQ0FBV1MsT0FBWCxFQUNHUixJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFTO0FBQ2IsNkJBQU0sT0FBTiwrQ0FBcURBLEdBQXJEO0FBQ0QsS0FISCxXQUlTLFVBQUNDLEdBQUQsRUFBUztBQUNkLDZCQUFNLE9BQU4sRUFBZUEsR0FBZjtBQUNELEtBTkg7QUFPRDtBQWpHUyxpQkFrR0csc0JBQU07QUFDakI7QUFDQUosd0JBQUtZLEVBQUwsQ0FBUSxRQUFSLEVBQWtCLFlBQU07QUFDdEIsMkJBQU0sY0FBTixFQUFzQixnREFBdEI7QUFDRCxHQUZEO0FBR0QsQ0F2R1MsQ0FBWixDLENBeUdBOzs7ZUFDZWYsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldCBkZWJ1ZyBtb2R1bGUgZm9yIGRlYnVnZ2luZyBtb2RlXG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuLy8gZ2V0IHBvc3RncmVzIGNvbm5lY3Rpb24gcG9vbCBmb3IgZGF0YWJhc2UgcXVlcnlcbmltcG9ydCBwb29sIGZyb20gJy4uL2RhdGFiYXNlL2RiY29ubmVjdCc7XG5cbmNvbnN0IHRhYmxlcyA9IHtcbiAgLy8gY3JlYXRlIHVzZXIgdGFibGVzIGlmIG5vdCBleGlzdFxuICBjcmVhdGVFbXBsb3llZVRhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgZW1wbG95ZWUgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgICBlbXBsb3llZSggXG4gICAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLCBcbiAgICAgICAgICBmaXJzdE5hbWUgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBsYXN0TmFtZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIGVtYWlsIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgcGFzc3dvcmQgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBnZW5kZXIgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBqb2JSb2xlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgaXNBZG1pbiBCT09MRUFOIERFRkFVTFQgRkFMU0UsXG4gICAgICAgICAgZGVwYXJ0bWVudCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIHJlZ0RhdGUgVElNRVNUQU1QIERFRkFVTFQgTk9XKClcbiAgICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShlbXBsb3llZSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGVtcGxveWVlIGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gIGNyZWF0ZUdpZlRhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgZ2lmID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTXG4gICAgICBnaWYoXG4gICAgICAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICBpbWFnZVVybCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICB0aXRsZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBnaWZEYXRlIFRJTUVTVEFNUCBERUZBVUxUIE5PVygpXG4gICAgICApYDtcbiAgICBwb29sLnF1ZXJ5KGdpZilcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGdpZiBpcyBhdmFpbGFibGUgJHtyZXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoZXJyKTtcbiAgICAgIH0pO1xuICB9LFxuICBjcmVhdGVBcnRpY2xlc1RhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgYXJ0aWNsZXMgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGFydGljbGVzKFxuICAgICAgICBpZCBTRVJJQUwgUFJJTUFSWSBLRVksXG4gICAgICAgIGVtcGxveWVlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgdGl0bGUgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgYXJ0aWNsZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBhcnRpY2xlRGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShhcnRpY2xlcylcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGFydGljbGVzIGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gIGNyZWF0ZUdpZkNvbW1lbnRUYWJsZTogKCkgPT4ge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGdpZl9jb21tZW50KFxuICAgICAgICBpZCBTRVJJQUwgUFJJTUFSWSBLRVksXG4gICAgICAgIGdpZl9pZCBJTlQgTk9UIE5VTEwsXG4gICAgICAgIGVtcGxveWVlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgY29tbWVudCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBjb21tZW50X2RhdGUgVElNRVNUQU1QIERFRkFVTFQgTk9XKClcbiAgICAgIClgO1xuICAgIHBvb2wucXVlcnkoY29tbWVudClcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoYHRhYmxlIGdpZl9jb21tZW50IGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gICBkaXNjb25uZWN0OiAoKSA9PiB7XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOmRhdGFiYXNlJykoJ1RhYmxlcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseSwgY29uZWN0aW9uIHJlbW92ZWQnKTtcbiAgICB9KTtcbiAgfSxcbiAgY3JlYXRlQXJ0aWNsZUNvbW1lbnRUYWJsZTogKCkgPT4ge1xuICAgIGNvbnN0IGNvbW1lbnQgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGFydGljbGVfY29tbWVudChcbiAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLFxuICAgICAgICBhcnRpY2xlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICBjb21tZW50IFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGNvbW1lbnRfZGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShjb21tZW50KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgYXJ0aWNsZV9jb21tZW50IGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gICBkaXNjb25uZWN0OiAoKSA9PiB7XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnRcbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOmRhdGFiYXNlJykoJ1RhYmxlcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseSwgY29uZWN0aW9uIHJlbW92ZWQnKTtcbiAgICB9KTtcbiAgfSxcbn07XG4vLyBleHBvcnQgdXRpbGl0aWVzIHRvIGJlIGFjY2Vzc2libGUgIGZyb20gYW55IHdoZXJlIHdpdGhpbiB0aGUgYXBwbGljYXRpb25cbmV4cG9ydCBkZWZhdWx0IHRhYmxlcztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "tables.js"
      ],
      "names": [
        "tables",
        "createEmployeeTable",
        "employee",
        "pool",
        "query",
        "then",
        "res",
        "err",
        "createGifTable",
        "gif",
        "createArticlesTable",
        "articles",
        "createGifCommentTable",
        "comment",
        "disconnect",
        "on",
        "createArticleCommentTable"
      ],
      "mappings": ";;;;;;;AACA;;AAEA;;;;;;AAEA,IAAMA,MAAM;AACV;AACAC,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,4bAAd;;AAaAC,0BAAKC,KAAL,CAAWF,QAAX,EACGG,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAvBS;AAwBVC,EAAAA,cAAc,EAAE,0BAAM;AACpB,QAAMC,GAAG,qOAAT;;AAQAN,0BAAKC,KAAL,CAAWK,GAAX,EACGJ,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,mCAAyCA,GAAzC;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAxCS;AAyCVG,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,6OAAd;;AAQAR,0BAAKC,KAAL,CAAWO,QAAX,EACGN,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAzDS;AA0DVK,EAAAA,qBAAqB,EAAE,iCAAM;AAC3B,QAAMC,OAAO,8OAAb;;AAQAV,0BAAKC,KAAL,CAAWS,OAAX,EACGR,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,2CAAiDA,GAAjD;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GA1ES;AA2ETO,EAAAA,UAAU,EAAE,sBAAM;AACjB;AACAX,0BAAKY,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,6BAAM,cAAN,EAAsB,gDAAtB;AACD,KAFD;AAGD,GAhFS;AAiFVC,EAAAA,yBAAyB,EAAE,qCAAM;AAC/B,QAAMH,OAAO,sPAAb;;AAQAV,0BAAKC,KAAL,CAAWS,OAAX,EACGR,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,+CAAqDA,GAArD;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD;AAjGS,iBAkGG,sBAAM;AACjB;AACAJ,wBAAKY,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,2BAAM,cAAN,EAAsB,gDAAtB;AACD,GAFD;AAGD,CAvGS,CAAZ,C,CAyGA;;;eACef,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "// get debug module for debugging mode\nimport debug from 'debug';\n// get postgres connection pool for database query\nimport pool from '../database/dbconnect';\n\nconst tables = {\n  // create user tables if not exist\n  createEmployeeTable: () => {\n    const employee = `CREATE TABLE IF NOT EXISTS\n       employee( \n          id SERIAL PRIMARY KEY, \n          firstName VARCHAR NOT NULL,\n          lastName VARCHAR NOT NULL,\n          email VARCHAR NOT NULL,\n          password VARCHAR NOT NULL,\n          gender VARCHAR NOT NULL,\n          jobRole VARCHAR NOT NULL,\n          isAdmin BOOLEAN DEFAULT FALSE,\n          department VARCHAR NOT NULL,\n          regDate TIMESTAMP DEFAULT NOW()\n        )`;\n    pool.query(employee)\n      .then((res) => {\n        debug('app:*')(`table employee is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createGifTable: () => {\n    const gif = `CREATE TABLE IF NOT EXISTS\n      gif(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        imageUrl VARCHAR NOT NULL,\n        title VARCHAR NOT NULL,\n        gifDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(gif)\n      .then((res) => {\n        debug('app:*')(`table gif is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createArticlesTable: () => {\n    const articles = `CREATE TABLE IF NOT EXISTS\n      articles(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        title VARCHAR NOT NULL,\n        article VARCHAR NOT NULL,\n        articleDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(articles)\n      .then((res) => {\n        debug('app:*')(`table articles is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createGifCommentTable: () => {\n    const comment = `CREATE TABLE IF NOT EXISTS\n      gif_comment(\n        id SERIAL PRIMARY KEY,\n        gif_id INT NOT NULL,\n        employee_id INT NOT NULL,\n        comment VARCHAR NOT NULL,\n        comment_date TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(comment)\n      .then((res) => {\n        debug('app:*')(`table gif_comment is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n   disconnect: () => {\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:database')('Tables created successfully, conection removed');\n    });\n  },\n  createArticleCommentTable: () => {\n    const comment = `CREATE TABLE IF NOT EXISTS\n      article_comment(\n        id SERIAL PRIMARY KEY,\n        article_id INT NOT NULL,\n        employee_id INT NOT NULL,\n        comment VARCHAR NOT NULL,\n        comment_date TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(comment)\n      .then((res) => {\n        debug('app:*')(`table article_comment is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n   disconnect: () => {\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:database')('Tables created successfully, conection removed');\n    });\n  },\n};\n// export utilities to be accessible  from any where within the application\nexport default tables;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573739836084
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\\\\dbconnect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
        "sourceFileName": "dbconnect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _config = _interopRequireDefault(require(\"../config/config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// get node postgres connector\nvar env = process.env.NODE_ENV ? process.env.NODE_ENV : 'development'; //const config = configuration[env];\n\nconsole.log('this is the environment: ', env);\n\nif (env === 'production') {\n  var pool = _pg[\"default\"].Pool(_config[\"default\"].production);\n\n  pool.on('connect', function () {\n    (0, _debug[\"default\"])('app:database')('connected to the Database');\n    module.exports = pool;\n  });\n} else if (env === 'test') {\n  var _pool = _pg[\"default\"].Pool(_config[\"default\"].test);\n\n  _pool.on('connect', function () {\n    (0, _debug[\"default\"])('app:database')('connected to the Database');\n  });\n\n  module.exports = _pool;\n} else {\n  var _pool2 = _pg[\"default\"].Pool(_config[\"default\"].development);\n\n  _pool2.on('connect', function () {\n    (0, _debug[\"default\"])('app:database')('connected to the Database');\n  });\n\n  module.exports = _pool2;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29ubmVjdC5qcyJdLCJuYW1lcyI6WyJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25zb2xlIiwibG9nIiwicG9vbCIsInBnIiwiUG9vbCIsImNvbmZpZ3VyYXRpb24iLCJwcm9kdWN0aW9uIiwib24iLCJtb2R1bGUiLCJleHBvcnRzIiwidGVzdCIsImRldmVsb3BtZW50Il0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOztBQUNBOzs7O0FBSEE7QUFLQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRSxRQUFaLEdBQXVCRCxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBbkMsR0FBOEMsYUFBMUQsQyxDQUVBOztBQUVBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWixFQUF5Q0osR0FBekM7O0FBRUEsSUFBSUEsR0FBRyxLQUFLLFlBQVosRUFBMEI7QUFDMUIsTUFBTUssSUFBSSxHQUFHQyxlQUFHQyxJQUFILENBQVFDLG1CQUFjQyxVQUF0QixDQUFiOztBQUNBSixFQUFBQSxJQUFJLENBQUNLLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIsMkJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxJQUFqQjtBQUNELEdBSEQ7QUFJQyxDQU5ELE1BTU8sSUFBSUwsR0FBRyxLQUFLLE1BQVosRUFBb0I7QUFDekIsTUFBTUssS0FBSSxHQUFHQyxlQUFHQyxJQUFILENBQVFDLG1CQUFjSyxJQUF0QixDQUFiOztBQUNBUixFQUFBQSxLQUFJLENBQUNLLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIsMkJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDRCxHQUZEOztBQUdBQyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLEtBQWpCO0FBQ0QsQ0FOTSxNQU1BO0FBQ0wsTUFBTUEsTUFBSSxHQUFHQyxlQUFHQyxJQUFILENBQVFDLG1CQUFjTSxXQUF0QixDQUFiOztBQUNBVCxFQUFBQSxNQUFJLENBQUNLLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIsMkJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDRCxHQUZEOztBQUdBQyxFQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLE1BQWpCO0FBQ0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxkYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldCBub2RlIHBvc3RncmVzIGNvbm5lY3RvclxuaW1wb3J0IHBnIGZyb20gJ3BnJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgY29uZmlndXJhdGlvbiBmcm9tICcuLi9jb25maWcvY29uZmlnJ1xuXG5jb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA/IHByb2Nlc3MuZW52Lk5PREVfRU5WIDogJ2RldmVsb3BtZW50JztcblxuLy9jb25zdCBjb25maWcgPSBjb25maWd1cmF0aW9uW2Vudl07XG5cbmNvbnNvbGUubG9nKCd0aGlzIGlzIHRoZSBlbnZpcm9ubWVudDogJywgZW52ICk7XG5cbmlmIChlbnYgPT09ICdwcm9kdWN0aW9uJykge1xuY29uc3QgcG9vbCA9IHBnLlBvb2woY29uZmlndXJhdGlvbi5wcm9kdWN0aW9uKTtcbnBvb2wub24oJ2Nvbm5lY3QnLCAoKSA9PiB7XG4gIGRlYnVnKCdhcHA6ZGF0YWJhc2UnKSgnY29ubmVjdGVkIHRvIHRoZSBEYXRhYmFzZScpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHBvb2w7XG59KTtcbn0gZWxzZSBpZiAoZW52ID09PSAndGVzdCcpIHtcbiAgY29uc3QgcG9vbCA9IHBnLlBvb2woY29uZmlndXJhdGlvbi50ZXN0KTtcbiAgcG9vbC5vbignY29ubmVjdCcsICgpID0+IHtcbiAgICBkZWJ1ZygnYXBwOmRhdGFiYXNlJykoJ2Nvbm5lY3RlZCB0byB0aGUgRGF0YWJhc2UnKTtcbiAgfSk7XG4gIG1vZHVsZS5leHBvcnRzID0gcG9vbDtcbn0gZWxzZSB7XG4gIGNvbnN0IHBvb2wgPSBwZy5Qb29sKGNvbmZpZ3VyYXRpb24uZGV2ZWxvcG1lbnQpO1xuICBwb29sLm9uKCdjb25uZWN0JywgKCkgPT4ge1xuICAgIGRlYnVnKCdhcHA6ZGF0YWJhc2UnKSgnY29ubmVjdGVkIHRvIHRoZSBEYXRhYmFzZScpO1xuICB9KTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBwb29sO1xufVxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "dbconnect.js"
      ],
      "names": [
        "env",
        "process",
        "NODE_ENV",
        "console",
        "log",
        "pool",
        "pg",
        "Pool",
        "configuration",
        "production",
        "on",
        "module",
        "exports",
        "test",
        "development"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHA;AAKA,IAAMA,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,GAAuBD,OAAO,CAACD,GAAR,CAAYE,QAAnC,GAA8C,aAA1D,C,CAEA;;AAEAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCJ,GAAzC;;AAEA,IAAIA,GAAG,KAAK,YAAZ,EAA0B;AAC1B,MAAMK,IAAI,GAAGC,eAAGC,IAAH,CAAQC,mBAAcC,UAAtB,CAAb;;AACAJ,EAAAA,IAAI,CAACK,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,2BAAM,cAAN,EAAsB,2BAAtB;AACAC,IAAAA,MAAM,CAACC,OAAP,GAAiBP,IAAjB;AACD,GAHD;AAIC,CAND,MAMO,IAAIL,GAAG,KAAK,MAAZ,EAAoB;AACzB,MAAMK,KAAI,GAAGC,eAAGC,IAAH,CAAQC,mBAAcK,IAAtB,CAAb;;AACAR,EAAAA,KAAI,CAACK,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,2BAAM,cAAN,EAAsB,2BAAtB;AACD,GAFD;;AAGAC,EAAAA,MAAM,CAACC,OAAP,GAAiBP,KAAjB;AACD,CANM,MAMA;AACL,MAAMA,MAAI,GAAGC,eAAGC,IAAH,CAAQC,mBAAcM,WAAtB,CAAb;;AACAT,EAAAA,MAAI,CAACK,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,2BAAM,cAAN,EAAsB,2BAAtB;AACD,GAFD;;AAGAC,EAAAA,MAAM,CAACC,OAAP,GAAiBP,MAAjB;AACD",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "sourcesContent": [
        "// get node postgres connector\nimport pg from 'pg';\nimport debug from 'debug';\nimport configuration from '../config/config'\n\nconst env = process.env.NODE_ENV ? process.env.NODE_ENV : 'development';\n\n//const config = configuration[env];\n\nconsole.log('this is the environment: ', env );\n\nif (env === 'production') {\nconst pool = pg.Pool(configuration.production);\npool.on('connect', () => {\n  debug('app:database')('connected to the Database');\n  module.exports = pool;\n});\n} else if (env === 'test') {\n  const pool = pg.Pool(configuration.test);\n  pool.on('connect', () => {\n    debug('app:database')('connected to the Database');\n  });\n  module.exports = pool;\n} else {\n  const pool = pg.Pool(configuration.development);\n  pool.on('connect', () => {\n    debug('app:database')('connected to the Database');\n  });\n  module.exports = pool;\n}\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573395473363
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _validator = _interopRequireDefault(require(\"../middlewares/validator\"));\n\nvar _authenticator = _interopRequireDefault(require(\"../middlewares/authenticator\"));\n\nvar _users = _interopRequireDefault(require(\"../controllers/users\"));\n\nvar _gifs = _interopRequireDefault(require(\"../controllers/gifs\"));\n\nvar _articles = _interopRequireDefault(require(\"../controllers/articles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // user auth\n\n\nrouter.post('/auth/create-user', _validator[\"default\"].auth, _users[\"default\"].signup);\nrouter.post('/auth/signin', _validator[\"default\"].auth, _users[\"default\"].login); // Create gifs\n\nrouter.post('/gifs', _authenticator[\"default\"], _gifs[\"default\"].create); // Delete a gif\n\nrouter[\"delete\"]('/gifs/:gifId', _authenticator[\"default\"], _validator[\"default\"].checkGifIdParams, _gifs[\"default\"][\"delete\"]); // Delete a gif comment\n\nrouter[\"delete\"]('/gifs/:gifID/comment/:commentId', _authenticator[\"default\"], _validator[\"default\"].checkCommentIdParams, _gifs[\"default\"].deleteComment); // Create article\n\nrouter.post('/articles', _authenticator[\"default\"], _validator[\"default\"].article, _articles[\"default\"].create); // Edit an article\n\nrouter.patch('/articles/:articleId', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"].edit); // Delete an article\n\nrouter[\"delete\"]('/articles/:articleId', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"][\"delete\"]); // Delete an article comment\n\nrouter[\"delete\"]('/articles/:articleId/comment/:commentId', _authenticator[\"default\"], _validator[\"default\"].checkCommentIdParams, _articles[\"default\"].deleteComment); // Comment on an article\n\nrouter.post('/articles/:articleId/comment', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"].createComment); // Comment on a gif\n\nrouter.post('/gifs/:gifId/comment/', _authenticator[\"default\"], _validator[\"default\"].checkGifIdParams, _gifs[\"default\"].createComment); // View all article or gif with recent first\n\nrouter.get('/feed', _authenticator[\"default\"], _articles[\"default\"].getFeed); // View  a specific article\n\nrouter.get('/articles/:articleId', _authenticator[\"default\"], _validator[\"default\"].checkArticleIdParams, _articles[\"default\"].getOne); // View  a specific gif\n\nrouter.get('/gifs/:gifId', _authenticator[\"default\"], _validator[\"default\"].checkGifIdParams, _gifs[\"default\"].getOne);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwidmFsaWRhdG9yIiwiYXV0aCIsInVzZXJzIiwic2lnbnVwIiwibG9naW4iLCJhdXRoZW50aWNhdG9yIiwiZ2lmIiwiY3JlYXRlIiwiY2hlY2tHaWZJZFBhcmFtcyIsImNoZWNrQ29tbWVudElkUGFyYW1zIiwiZGVsZXRlQ29tbWVudCIsImFydGljbGUiLCJwYXRjaCIsImNoZWNrQXJ0aWNsZUlkUGFyYW1zIiwiZWRpdCIsImNyZWF0ZUNvbW1lbnQiLCJnZXQiLCJnZXRGZWVkIiwiZ2V0T25lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWYsQyxDQUVBOzs7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksbUJBQVosRUFBaUNDLHNCQUFVQyxJQUEzQyxFQUFrREMsa0JBQU1DLE1BQXhEO0FBQ0FQLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGNBQVosRUFBNEJDLHNCQUFVQyxJQUF0QyxFQUE0Q0Msa0JBQU1FLEtBQWxELEUsQ0FFQTs7QUFDQVIsTUFBTSxDQUFDRyxJQUFQLENBQVksT0FBWixFQUFxQk0seUJBQXJCLEVBQW9DQyxpQkFBSUMsTUFBeEMsRSxDQUVBOztBQUNBWCxNQUFNLFVBQU4sQ0FBYyxjQUFkLEVBQThCUyx5QkFBOUIsRUFBNkNMLHNCQUFVUSxnQkFBdkQsRUFBeUVGLDBCQUF6RSxFLENBRUE7O0FBQ0FWLE1BQU0sVUFBTixDQUFjLGlDQUFkLEVBQWlEUyx5QkFBakQsRUFBZ0VMLHNCQUFVUyxvQkFBMUUsRUFBaUdILGlCQUFJSSxhQUFyRyxFLENBRUE7O0FBQ0FkLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFdBQVosRUFBeUJNLHlCQUF6QixFQUF3Q0wsc0JBQVVXLE9BQWxELEVBQTJEQSxxQkFBUUosTUFBbkUsRSxDQUVBOztBQUNBWCxNQUFNLENBQUNnQixLQUFQLENBQWEsc0JBQWIsRUFBcUNQLHlCQUFyQyxFQUFvREwsc0JBQVVhLG9CQUE5RCxFQUFvRkYscUJBQVFHLElBQTVGLEUsQ0FFQTs7QUFDQWxCLE1BQU0sVUFBTixDQUFjLHNCQUFkLEVBQXNDUyx5QkFBdEMsRUFBcURMLHNCQUFVYSxvQkFBL0QsRUFBcUZGLDhCQUFyRixFLENBRUE7O0FBQ0FmLE1BQU0sVUFBTixDQUFjLHlDQUFkLEVBQXlEUyx5QkFBekQsRUFBd0VMLHNCQUFVUyxvQkFBbEYsRUFBd0dFLHFCQUFRRCxhQUFoSCxFLENBRUE7O0FBQ0FkLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLDhCQUFaLEVBQTRDTSx5QkFBNUMsRUFBMkRMLHNCQUFVYSxvQkFBckUsRUFBMkZGLHFCQUFRSSxhQUFuRyxFLENBRUE7O0FBQ0FuQixNQUFNLENBQUNHLElBQVAsQ0FBWSx1QkFBWixFQUFvQ00seUJBQXBDLEVBQW1ETCxzQkFBVVEsZ0JBQTdELEVBQStFRixpQkFBSVMsYUFBbkYsRSxDQUVBOztBQUNBbkIsTUFBTSxDQUFDb0IsR0FBUCxDQUFXLE9BQVgsRUFBb0JYLHlCQUFwQixFQUFtQ00scUJBQVFNLE9BQTNDLEUsQ0FFQTs7QUFDQXJCLE1BQU0sQ0FBQ29CLEdBQVAsQ0FBWSxzQkFBWixFQUFvQ1gseUJBQXBDLEVBQW1ETCxzQkFBVWEsb0JBQTdELEVBQW1GRixxQkFBUU8sTUFBM0YsRSxDQUVBOztBQUNBdEIsTUFBTSxDQUFDb0IsR0FBUCxDQUFZLGNBQVosRUFBNEJYLHlCQUE1QixFQUEyQ0wsc0JBQVVRLGdCQUFyRCxFQUF1RUYsaUJBQUlZLE1BQTNFO2VBRWV0QixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB2YWxpZGF0b3IgZnJvbSAnLi4vbWlkZGxld2FyZXMvdmFsaWRhdG9yJztcbmltcG9ydCBhdXRoZW50aWNhdG9yIGZyb20gJy4uL21pZGRsZXdhcmVzL2F1dGhlbnRpY2F0b3InO1xuaW1wb3J0IHVzZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJzJztcbmltcG9ydCBnaWYgZnJvbSAnLi4vY29udHJvbGxlcnMvZ2lmcyc7XG5pbXBvcnQgYXJ0aWNsZSBmcm9tICcuLi9jb250cm9sbGVycy9hcnRpY2xlcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIHVzZXIgYXV0aFxucm91dGVyLnBvc3QoJy9hdXRoL2NyZWF0ZS11c2VyJywgdmFsaWRhdG9yLmF1dGgsICB1c2Vycy5zaWdudXApO1xucm91dGVyLnBvc3QoJy9hdXRoL3NpZ25pbicsIHZhbGlkYXRvci5hdXRoLCB1c2Vycy5sb2dpbik7XG5cbi8vIENyZWF0ZSBnaWZzXG5yb3V0ZXIucG9zdCgnL2dpZnMnLCBhdXRoZW50aWNhdG9yLCBnaWYuY3JlYXRlKTtcblxuLy8gRGVsZXRlIGEgZ2lmXG5yb3V0ZXIuZGVsZXRlKCcvZ2lmcy86Z2lmSWQnLCBhdXRoZW50aWNhdG9yLCB2YWxpZGF0b3IuY2hlY2tHaWZJZFBhcmFtcywgZ2lmLmRlbGV0ZSk7XG5cbi8vIERlbGV0ZSBhIGdpZiBjb21tZW50XG5yb3V0ZXIuZGVsZXRlKCcvZ2lmcy86Z2lmSUQvY29tbWVudC86Y29tbWVudElkJywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrQ29tbWVudElkUGFyYW1zLCAgZ2lmLmRlbGV0ZUNvbW1lbnQpO1xuXG4vLyBDcmVhdGUgYXJ0aWNsZVxucm91dGVyLnBvc3QoJy9hcnRpY2xlcycsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5hcnRpY2xlLCBhcnRpY2xlLmNyZWF0ZSk7XG5cbi8vIEVkaXQgYW4gYXJ0aWNsZVxucm91dGVyLnBhdGNoKCcvYXJ0aWNsZXMvOmFydGljbGVJZCcsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5jaGVja0FydGljbGVJZFBhcmFtcywgYXJ0aWNsZS5lZGl0KTtcblxuLy8gRGVsZXRlIGFuIGFydGljbGVcbnJvdXRlci5kZWxldGUoJy9hcnRpY2xlcy86YXJ0aWNsZUlkJywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrQXJ0aWNsZUlkUGFyYW1zLCBhcnRpY2xlLmRlbGV0ZSk7XG5cbi8vIERlbGV0ZSBhbiBhcnRpY2xlIGNvbW1lbnRcbnJvdXRlci5kZWxldGUoJy9hcnRpY2xlcy86YXJ0aWNsZUlkL2NvbW1lbnQvOmNvbW1lbnRJZCcsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5jaGVja0NvbW1lbnRJZFBhcmFtcywgYXJ0aWNsZS5kZWxldGVDb21tZW50KTtcblxuLy8gQ29tbWVudCBvbiBhbiBhcnRpY2xlXG5yb3V0ZXIucG9zdCgnL2FydGljbGVzLzphcnRpY2xlSWQvY29tbWVudCcsIGF1dGhlbnRpY2F0b3IsIHZhbGlkYXRvci5jaGVja0FydGljbGVJZFBhcmFtcywgYXJ0aWNsZS5jcmVhdGVDb21tZW50KTtcblxuLy8gQ29tbWVudCBvbiBhIGdpZlxucm91dGVyLnBvc3QoJy9naWZzLzpnaWZJZC9jb21tZW50LycsYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrR2lmSWRQYXJhbXMsIGdpZi5jcmVhdGVDb21tZW50KTtcblxuLy8gVmlldyBhbGwgYXJ0aWNsZSBvciBnaWYgd2l0aCByZWNlbnQgZmlyc3RcbnJvdXRlci5nZXQoJy9mZWVkJywgYXV0aGVudGljYXRvciwgYXJ0aWNsZS5nZXRGZWVkKTtcblxuLy8gVmlldyAgYSBzcGVjaWZpYyBhcnRpY2xlXG5yb3V0ZXIuZ2V0KCAnL2FydGljbGVzLzphcnRpY2xlSWQnLCBhdXRoZW50aWNhdG9yLCB2YWxpZGF0b3IuY2hlY2tBcnRpY2xlSWRQYXJhbXMsIGFydGljbGUuZ2V0T25lLCk7XG5cbi8vIFZpZXcgIGEgc3BlY2lmaWMgZ2lmXG5yb3V0ZXIuZ2V0KCAnL2dpZnMvOmdpZklkJywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmNoZWNrR2lmSWRQYXJhbXMsIGdpZi5nZXRPbmUsKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "validator",
        "auth",
        "users",
        "signup",
        "login",
        "authenticator",
        "gif",
        "create",
        "checkGifIdParams",
        "checkCommentIdParams",
        "deleteComment",
        "article",
        "patch",
        "checkArticleIdParams",
        "edit",
        "createComment",
        "get",
        "getFeed",
        "getOne"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,mBAAZ,EAAiCC,sBAAUC,IAA3C,EAAkDC,kBAAMC,MAAxD;AACAP,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BC,sBAAUC,IAAtC,EAA4CC,kBAAME,KAAlD,E,CAEA;;AACAR,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBM,yBAArB,EAAoCC,iBAAIC,MAAxC,E,CAEA;;AACAX,MAAM,UAAN,CAAc,cAAd,EAA8BS,yBAA9B,EAA6CL,sBAAUQ,gBAAvD,EAAyEF,0BAAzE,E,CAEA;;AACAV,MAAM,UAAN,CAAc,iCAAd,EAAiDS,yBAAjD,EAAgEL,sBAAUS,oBAA1E,EAAiGH,iBAAII,aAArG,E,CAEA;;AACAd,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBM,yBAAzB,EAAwCL,sBAAUW,OAAlD,EAA2DA,qBAAQJ,MAAnE,E,CAEA;;AACAX,MAAM,CAACgB,KAAP,CAAa,sBAAb,EAAqCP,yBAArC,EAAoDL,sBAAUa,oBAA9D,EAAoFF,qBAAQG,IAA5F,E,CAEA;;AACAlB,MAAM,UAAN,CAAc,sBAAd,EAAsCS,yBAAtC,EAAqDL,sBAAUa,oBAA/D,EAAqFF,8BAArF,E,CAEA;;AACAf,MAAM,UAAN,CAAc,yCAAd,EAAyDS,yBAAzD,EAAwEL,sBAAUS,oBAAlF,EAAwGE,qBAAQD,aAAhH,E,CAEA;;AACAd,MAAM,CAACG,IAAP,CAAY,8BAAZ,EAA4CM,yBAA5C,EAA2DL,sBAAUa,oBAArE,EAA2FF,qBAAQI,aAAnG,E,CAEA;;AACAnB,MAAM,CAACG,IAAP,CAAY,uBAAZ,EAAoCM,yBAApC,EAAmDL,sBAAUQ,gBAA7D,EAA+EF,iBAAIS,aAAnF,E,CAEA;;AACAnB,MAAM,CAACoB,GAAP,CAAW,OAAX,EAAoBX,yBAApB,EAAmCM,qBAAQM,OAA3C,E,CAEA;;AACArB,MAAM,CAACoB,GAAP,CAAY,sBAAZ,EAAoCX,yBAApC,EAAmDL,sBAAUa,oBAA7D,EAAmFF,qBAAQO,MAA3F,E,CAEA;;AACAtB,MAAM,CAACoB,GAAP,CAAY,cAAZ,EAA4BX,yBAA5B,EAA2CL,sBAAUQ,gBAArD,EAAuEF,iBAAIY,MAA3E;eAEetB,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\n\nimport validator from '../middlewares/validator';\nimport authenticator from '../middlewares/authenticator';\nimport users from '../controllers/users';\nimport gif from '../controllers/gifs';\nimport article from '../controllers/articles';\n\nconst router = express.Router();\n\n// user auth\nrouter.post('/auth/create-user', validator.auth,  users.signup);\nrouter.post('/auth/signin', validator.auth, users.login);\n\n// Create gifs\nrouter.post('/gifs', authenticator, gif.create);\n\n// Delete a gif\nrouter.delete('/gifs/:gifId', authenticator, validator.checkGifIdParams, gif.delete);\n\n// Delete a gif comment\nrouter.delete('/gifs/:gifID/comment/:commentId', authenticator, validator.checkCommentIdParams,  gif.deleteComment);\n\n// Create article\nrouter.post('/articles', authenticator, validator.article, article.create);\n\n// Edit an article\nrouter.patch('/articles/:articleId', authenticator, validator.checkArticleIdParams, article.edit);\n\n// Delete an article\nrouter.delete('/articles/:articleId', authenticator, validator.checkArticleIdParams, article.delete);\n\n// Delete an article comment\nrouter.delete('/articles/:articleId/comment/:commentId', authenticator, validator.checkCommentIdParams, article.deleteComment);\n\n// Comment on an article\nrouter.post('/articles/:articleId/comment', authenticator, validator.checkArticleIdParams, article.createComment);\n\n// Comment on a gif\nrouter.post('/gifs/:gifId/comment/',authenticator, validator.checkGifIdParams, gif.createComment);\n\n// View all article or gif with recent first\nrouter.get('/feed', authenticator, article.getFeed);\n\n// View  a specific article\nrouter.get( '/articles/:articleId', authenticator, validator.checkArticleIdParams, article.getOne,);\n\n// View  a specific gif\nrouter.get( '/gifs/:gifId', authenticator, validator.checkGifIdParams, gif.getOne,);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573835302289
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\validator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "validator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validationHelpers = _interopRequireDefault(require(\"../utilities/validationHelpers\"));\n\nvar _regexen = require(\"../utilities/regexen\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar checkForEmptyFields = _validationHelpers[\"default\"].checkForEmptyFields,\n    checkPatternedFields = _validationHelpers[\"default\"].checkPatternedFields;\nvar _default = {\n  auth: function auth(req, res, next) {\n    var errors = [];\n    var _req$body = req.body,\n        firstName = _req$body.firstName,\n        lastName = _req$body.lastName,\n        email = _req$body.email,\n        password = _req$body.password;\n\n    if (req.path.includes('create-user')) {\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('First name', firstName)));\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Last name', lastName)));\n    }\n\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Email address', email, _regexen.emailRegex)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Password', password, _regexen.passwordRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  article: function article(req, res, next) {\n    var errors = [];\n    var _req$body2 = req.body,\n        title = _req$body2.title,\n        article = _req$body2.article;\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Title', title)));\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Article', article)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Article', article, _regexen.articleRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  checkArticleIdParams: function checkArticleIdParams(req, res, next) {\n    var articleId = req.params.articleId;\n    var parsedNumber = parseInt(articleId, 10);\n    var isInteger = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n  checkGifIdParams: function checkGifIdParams(req, res, next) {\n    var gifId = req.params.gifId;\n    var parsedNumber = parseInt(gifId, 10);\n    var isInteger = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n  checkCommentIdParams: function checkCommentIdParams(req, res, next) {\n    var commentId = req.params.commentId;\n    var parsedNumber = parseInt(commentId, 10);\n    var isInteger = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJjaGVja0ZvckVtcHR5RmllbGRzIiwidmFsaWRhdGlvbkhlbHBlcnMiLCJjaGVja1BhdHRlcm5lZEZpZWxkcyIsImF1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyb3JzIiwiYm9keSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInBhdGgiLCJpbmNsdWRlcyIsInB1c2giLCJlbWFpbFJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImxlbmd0aCIsImpzZW5kIiwiZXJyb3IiLCJtZXNzYWdlIiwiZGF0YSIsImFydGljbGUiLCJ0aXRsZSIsImFydGljbGVSZWdleCIsImNoZWNrQXJ0aWNsZUlkUGFyYW1zIiwiYXJ0aWNsZUlkIiwicGFyYW1zIiwicGFyc2VkTnVtYmVyIiwicGFyc2VJbnQiLCJpc0ludGVnZXIiLCJOdW1iZXIiLCJpc0dyZWF0ZXJUaGFuWmVybyIsImNoZWNrR2lmSWRQYXJhbXMiLCJnaWZJZCIsImNoZWNrQ29tbWVudElkUGFyYW1zIiwiY29tbWVudElkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVRQSxtQixHQUE4Q0MsNkIsQ0FBOUNELG1CO0lBQXFCRSxvQixHQUF5QkQsNkIsQ0FBekJDLG9CO2VBRWQ7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLGNBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCLFFBQU1DLE1BQU0sR0FBRyxFQUFmO0FBRHdCLG9CQUlwQkgsR0FBRyxDQUFDSSxJQUpnQjtBQUFBLFFBR3RCQyxTQUhzQixhQUd0QkEsU0FIc0I7QUFBQSxRQUdYQyxRQUhXLGFBR1hBLFFBSFc7QUFBQSxRQUdEQyxLQUhDLGFBR0RBLEtBSEM7QUFBQSxRQUdNQyxRQUhOLGFBR01BLFFBSE47O0FBTXhCLFFBQUlSLEdBQUcsQ0FBQ1MsSUFBSixDQUFTQyxRQUFULENBQWtCLGFBQWxCLENBQUosRUFBc0M7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QUdDLE1BQU0sQ0FBQ0QsU0FBUCxDQUFpQkYsWUFBakIsQ0FBbEI7QUFDQSxRQUFNSSxpQkFBaUIsR0FBR0osWUFBWSxHQUFHLENBQXpDO0FBRUEsUUFBSUUsU0FBUyxJQUFJRSxpQkFBakIsRUFBb0MsT0FBTzNCLElBQUksRUFBWDtBQUNwQyxXQUFPRCxHQUFHLENBQUNjLEtBQUosQ0FBVUMsS0FBVixDQUFnQix5Q0FBaEIsQ0FBUDtBQUNELEdBeERZO0FBMERiZ0IsRUFBQUEsb0JBQW9CLEVBQUUsOEJBQUNoQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUFBLFFBQ3RCK0IsU0FEc0IsR0FDTmpDLEdBRE0sQ0FDaEN3QixNQURnQyxDQUN0QlMsU0FEc0I7QUFFeEMsUUFBTVIsWUFBWSxHQUFHQyxRQUFRLENBQUNPLFNBQUQsRUFBWSxFQUFaLENBQTdCO0FBQ0EsUUFBTU4sU0FBUyxHQUFHQyxNQUFNLENBQUNELFNBQVAsQ0FBaUJGLFlBQWpCLENBQWxCO0FBQ0EsUUFBTUksaUJBQWlCLEdBQUdKLFlBQVksR0FBRyxDQUF6QztBQUVBLFFBQUlFLFNBQVMsSUFBSUUsaUJBQWpCLEVBQW9DLE9BQU8zQixJQUFJLEVBQVg7QUFDcEMsV0FBT0QsR0FBRyxDQUFDYyxLQUFKLENBQVVDLEtBQVYsQ0FBZ0IseUNBQWhCLENBQVA7QUFDRDtBQWxFWSxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyY1xcbWlkZGxld2FyZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGlvbkhlbHBlcnMgZnJvbSAnLi4vdXRpbGl0aWVzL3ZhbGlkYXRpb25IZWxwZXJzJztcbmltcG9ydCB7IGVtYWlsUmVnZXgsIHBhc3N3b3JkUmVnZXgsIGFydGljbGVSZWdleCB9IGZyb20gJy4uL3V0aWxpdGllcy9yZWdleGVuJztcblxuY29uc3QgeyBjaGVja0ZvckVtcHR5RmllbGRzLCBjaGVja1BhdHRlcm5lZEZpZWxkcyB9ID0gdmFsaWRhdGlvbkhlbHBlcnM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYXV0aDogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgY29uc3Qge1xuICAgICAgZmlyc3ROYW1lLCBsYXN0TmFtZSwgZW1haWwsIHBhc3N3b3JkLFxuICAgIH0gPSByZXEuYm9keTtcblxuICAgIGlmIChyZXEucGF0aC5pbmNsdWRlcygnY3JlYXRlLXVzZXInKSkge1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnRmlyc3QgbmFtZScsIGZpcnN0TmFtZSkpO1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnTGFzdCBuYW1lJywgbGFzdE5hbWUpKTtcbiAgICB9XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tQYXR0ZXJuZWRGaWVsZHMoJ0VtYWlsIGFkZHJlc3MnLCBlbWFpbCwgZW1haWxSZWdleCkpO1xuICAgIGVycm9ycy5wdXNoKC4uLmNoZWNrUGF0dGVybmVkRmllbGRzKCdQYXNzd29yZCcsIHBhc3N3b3JkLCBwYXNzd29yZFJlZ2V4KSk7XG5cbiAgICBpZiAoZXJyb3JzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7XG4gICAgICAgIG1lc3NhZ2U6ICdZb3VyIHJlcXVlc3QgY29udGFpbiBlcnJvcnMnLFxuICAgICAgICBkYXRhOiBlcnJvcnMsXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfSxcbiAgYXJ0aWNsZTogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgY29uc3QgeyB0aXRsZSwgYXJ0aWNsZSB9ID0gcmVxLmJvZHk7XG5cbiAgICBlcnJvcnMucHVzaCguLi5jaGVja0ZvckVtcHR5RmllbGRzKCdUaXRsZScsIHRpdGxlKSk7XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnQXJ0aWNsZScsIGFydGljbGUpKTtcbiAgICBlcnJvcnMucHVzaCguLi5jaGVja1BhdHRlcm5lZEZpZWxkcygnQXJ0aWNsZScsIGFydGljbGUsIGFydGljbGVSZWdleCkpO1xuXG4gICAgaWYgKGVycm9ycy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiByZXMuanNlbmQuZXJyb3Ioe1xuICAgICAgICBtZXNzYWdlOiAnWW91ciByZXF1ZXN0IGNvbnRhaW4gZXJyb3JzJyxcbiAgICAgICAgZGF0YTogZXJyb3JzLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG4gIH0sXG4gIGNoZWNrQXJ0aWNsZUlkUGFyYW1zOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB7IHBhcmFtczogeyBhcnRpY2xlSWQgfSB9ID0gcmVxO1xuICAgIGNvbnN0IHBhcnNlZE51bWJlciA9IHBhcnNlSW50KGFydGljbGVJZCwgMTApO1xuICAgIGNvbnN0IGlzSW50ZWdlciA9IE51bWJlci5pc0ludGVnZXIocGFyc2VkTnVtYmVyKTtcbiAgICBjb25zdCBpc0dyZWF0ZXJUaGFuWmVybyA9IHBhcnNlZE51bWJlciA+IDA7XG5cbiAgICBpZiAoaXNJbnRlZ2VyICYmIGlzR3JlYXRlclRoYW5aZXJvKSByZXR1cm4gbmV4dCgpO1xuICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ0lEIG11c3QgYmUgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gemVybycpO1xuICB9LFxuXG4gIGNoZWNrR2lmSWRQYXJhbXM6IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGdpZklkIH0gfSA9IHJlcTtcbiAgICBjb25zdCBwYXJzZWROdW1iZXIgPSBwYXJzZUludChnaWZJZCwgMTApO1xuICAgIGNvbnN0IGlzSW50ZWdlciA9IE51bWJlci5pc0ludGVnZXIocGFyc2VkTnVtYmVyKTtcbiAgICBjb25zdCBpc0dyZWF0ZXJUaGFuWmVybyA9IHBhcnNlZE51bWJlciA+IDA7XG5cbiAgICBpZiAoaXNJbnRlZ2VyICYmIGlzR3JlYXRlclRoYW5aZXJvKSByZXR1cm4gbmV4dCgpO1xuICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ0lEIG11c3QgYmUgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gemVybycpO1xuICB9LFxuICBcbiAgY2hlY2tDb21tZW50SWRQYXJhbXM6IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHsgcGFyYW1zOiB7IGNvbW1lbnRJZCB9IH0gPSByZXE7XG4gICAgY29uc3QgcGFyc2VkTnVtYmVyID0gcGFyc2VJbnQoY29tbWVudElkLCAxMCk7XG4gICAgY29uc3QgaXNJbnRlZ2VyID0gTnVtYmVyLmlzSW50ZWdlcihwYXJzZWROdW1iZXIpO1xuICAgIGNvbnN0IGlzR3JlYXRlclRoYW5aZXJvID0gcGFyc2VkTnVtYmVyID4gMDtcblxuICAgIGlmIChpc0ludGVnZXIgJiYgaXNHcmVhdGVyVGhhblplcm8pIHJldHVybiBuZXh0KCk7XG4gICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignSUQgbXVzdCBiZSBhbiBpbnRlZ2VyIGdyZWF0ZXIgdGhhbiB6ZXJvJyk7XG4gIH0sXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "validator.js"
      ],
      "names": [
        "checkForEmptyFields",
        "validationHelpers",
        "checkPatternedFields",
        "auth",
        "req",
        "res",
        "next",
        "errors",
        "body",
        "firstName",
        "lastName",
        "email",
        "password",
        "path",
        "includes",
        "push",
        "emailRegex",
        "passwordRegex",
        "length",
        "jsend",
        "error",
        "message",
        "data",
        "article",
        "title",
        "articleRegex",
        "checkArticleIdParams",
        "articleId",
        "params",
        "parsedNumber",
        "parseInt",
        "isInteger",
        "Number",
        "isGreaterThanZero",
        "checkGifIdParams",
        "gifId",
        "checkCommentIdParams",
        "commentId"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import validationHelpers from '../utilities/validationHelpers';\nimport { emailRegex, passwordRegex, articleRegex } from '../utilities/regexen';\n\nconst { checkForEmptyFields, checkPatternedFields } = validationHelpers;\n\nexport default {\n  auth: (req, res, next) => {\n    const errors = [];\n    const {\n      firstName, lastName, email, password,\n    } = req.body;\n\n    if (req.path.includes('create-user')) {\n      errors.push(...checkForEmptyFields('First name', firstName));\n      errors.push(...checkForEmptyFields('Last name', lastName));\n    }\n    errors.push(...checkPatternedFields('Email address', email, emailRegex));\n    errors.push(...checkPatternedFields('Password', password, passwordRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  article: (req, res, next) => {\n    const errors = [];\n    const { title, article } = req.body;\n\n    errors.push(...checkForEmptyFields('Title', title));\n    errors.push(...checkForEmptyFields('Article', article));\n    errors.push(...checkPatternedFields('Article', article, articleRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  checkArticleIdParams: (req, res, next) => {\n    const { params: { articleId } } = req;\n    const parsedNumber = parseInt(articleId, 10);\n    const isInteger = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n\n  checkGifIdParams: (req, res, next) => {\n    const { params: { gifId } } = req;\n    const parsedNumber = parseInt(gifId, 10);\n    const isInteger = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n  \n  checkCommentIdParams: (req, res, next) => {\n    const { params: { commentId } } = req;\n    const parsedNumber = parseInt(commentId, 10);\n    const isInteger = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInteger && isGreaterThanZero) return next();\n    return res.jsend.error('ID must be an integer greater than zero');\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573835228766
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\validationHelpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "validationHelpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  checkForEmptyFields: function checkForEmptyFields(field, value) {\n    if (!value || !value.trim()) return [\"\".concat(field, \" is required\")];\n    return [];\n  },\n  checkPatternedFields: function checkPatternedFields(field, value, regex) {\n    if (!regex.test(value)) return [\"\".concat(field, \" is invalid\")];\n    return [];\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb25IZWxwZXJzLmpzIl0sIm5hbWVzIjpbImNoZWNrRm9yRW1wdHlGaWVsZHMiLCJmaWVsZCIsInZhbHVlIiwidHJpbSIsImNoZWNrUGF0dGVybmVkRmllbGRzIiwicmVnZXgiLCJ0ZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxtQkFBbUIsRUFBRSw2QkFBQ0MsS0FBRCxFQUFRQyxLQUFSLEVBQWtCO0FBQ3JDLFFBQUksQ0FBQ0EsS0FBRCxJQUFVLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixFQUFmLEVBQTZCLE9BQU8sV0FBSUYsS0FBSixrQkFBUDtBQUM3QixXQUFPLEVBQVA7QUFDRCxHQUpZO0FBTWJHLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDSCxLQUFELEVBQVFDLEtBQVIsRUFBZUcsS0FBZixFQUF5QjtBQUM3QyxRQUFJLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixDQUFXSixLQUFYLENBQUwsRUFBd0IsT0FBTyxXQUFJRCxLQUFKLGlCQUFQO0FBQ3hCLFdBQU8sRUFBUDtBQUNEO0FBVFksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXHV0aWxpdGllcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgY2hlY2tGb3JFbXB0eUZpZWxkczogKGZpZWxkLCB2YWx1ZSkgPT4ge1xuICAgIGlmICghdmFsdWUgfHwgIXZhbHVlLnRyaW0oKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgcmVxdWlyZWRgXTtcbiAgICByZXR1cm4gW107XG4gIH0sXG5cbiAgY2hlY2tQYXR0ZXJuZWRGaWVsZHM6IChmaWVsZCwgdmFsdWUsIHJlZ2V4KSA9PiB7XG4gICAgaWYgKCFyZWdleC50ZXN0KHZhbHVlKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgaW52YWxpZGBdO1xuICAgIHJldHVybiBbXTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "validationHelpers.js"
      ],
      "names": [
        "checkForEmptyFields",
        "field",
        "value",
        "trim",
        "checkPatternedFields",
        "regex",
        "test"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,mBAAmB,EAAE,6BAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,QAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAAN,EAAf,EAA6B,OAAO,WAAIF,KAAJ,kBAAP;AAC7B,WAAO,EAAP;AACD,GAJY;AAMbG,EAAAA,oBAAoB,EAAE,8BAACH,KAAD,EAAQC,KAAR,EAAeG,KAAf,EAAyB;AAC7C,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWJ,KAAX,CAAL,EAAwB,OAAO,WAAID,KAAJ,iBAAP;AACxB,WAAO,EAAP;AACD;AATY,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export default {\n  checkForEmptyFields: (field, value) => {\n    if (!value || !value.trim()) return [`${field} is required`];\n    return [];\n  },\n\n  checkPatternedFields: (field, value, regex) => {\n    if (!regex.test(value)) return [`${field} is invalid`];\n    return [];\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362075
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\regexen.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "regexen.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.articleRegex = exports.passwordRegex = exports.numberRegex = exports.emailRegex = void 0;\nvar emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexports.emailRegex = emailRegex;\nvar numberRegex = /^\\d$/;\nexports.numberRegex = numberRegex;\nvar passwordRegex = /^.{6,}$/;\nexports.passwordRegex = passwordRegex;\nvar articleRegex = /[a-zA-Z .]{20,}/;\nexports.articleRegex = articleRegex;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2V4ZW4uanMiXSwibmFtZXMiOlsiZW1haWxSZWdleCIsIm51bWJlclJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImFydGljbGVSZWdleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsVUFBVSxHQUFHLDJEQUFuQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsTUFBcEI7O0FBQ0EsSUFBTUMsYUFBYSxHQUFHLFNBQXRCOztBQUNBLElBQU1DLFlBQVksR0FBRyxpQkFBckIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFx1dGlsaXRpZXMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1haWxSZWdleCA9IC9eKFthLXpBLVowLTlfLi1dKStAKChbYS16QS1aMC05LV0pK1xcLikrKFthLXpBLVowLTldezN9KSskLztcbmV4cG9ydCBjb25zdCBudW1iZXJSZWdleCA9IC9eXFxkJC87XG5leHBvcnQgY29uc3QgcGFzc3dvcmRSZWdleCA9IC9eLns2LH0kLztcbmV4cG9ydCBjb25zdCBhcnRpY2xlUmVnZXggPSAvW2EtekEtWiAuXXsyMCx9LztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "regexen.js"
      ],
      "names": [
        "emailRegex",
        "numberRegex",
        "passwordRegex",
        "articleRegex"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,UAAU,GAAG,2DAAnB;;AACA,IAAMC,WAAW,GAAG,MAApB;;AACA,IAAMC,aAAa,GAAG,SAAtB;;AACA,IAAMC,YAAY,GAAG,iBAArB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export const emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexport const numberRegex = /^\\d$/;\nexport const passwordRegex = /^.{6,}$/;\nexport const articleRegex = /[a-zA-Z .]{20,}/;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573696011703
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\authenticator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "authenticator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default(req, res, next) {\n  var token = req.cookies.token;\n  if (!token) return res.jsend.error('You have not been authenticated!');\n\n  try {\n    var user = _jsonwebtoken[\"default\"].decode(token, process.env.SECRET);\n\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error\n    });\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0b3IuanMiXSwibmFtZXMiOlsicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiY29va2llcyIsImpzZW5kIiwiZXJyb3IiLCJ1c2VyIiwiand0IiwiZGVjb2RlIiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsIm1lc3NhZ2UiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFFZSxrQkFBQ0EsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFBQSxNQUN6QkMsS0FEeUIsR0FDZkgsR0FBRyxDQUFDSSxPQURXLENBQ3pCRCxLQUR5QjtBQUVqQyxNQUFJLENBQUNBLEtBQUwsRUFBWSxPQUFPRixHQUFHLENBQUNJLEtBQUosQ0FBVUMsS0FBVixDQUFnQixrQ0FBaEIsQ0FBUDs7QUFFWixNQUFJO0FBQ0YsUUFBTUMsSUFBSSxHQUFHQyx5QkFBSUMsTUFBSixDQUFXTixLQUFYLEVBQWtCTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FBYjs7QUFDQVosSUFBQUEsR0FBRyxDQUFDTyxJQUFKLEdBQVdBLElBQVg7QUFDQSxXQUFPTCxJQUFJLEVBQVg7QUFDRCxHQUpELENBSUUsT0FBT0ksS0FBUCxFQUFjO0FBQ2QsV0FBT0wsR0FBRyxDQUFDSSxLQUFKLENBQVVDLEtBQVYsQ0FBZ0I7QUFDckJPLE1BQUFBLE9BQU8sRUFBRSx1QkFEWTtBQUVyQkMsTUFBQUEsSUFBSSxFQUFFUjtBQUZlLEtBQWhCLENBQVA7QUFJRDtBQUNGLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtaWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuZXhwb3J0IGRlZmF1bHQgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHsgdG9rZW4gfSA9IHJlcS5jb29raWVzO1xuICBpZiAoIXRva2VuKSByZXR1cm4gcmVzLmpzZW5kLmVycm9yKCdZb3UgaGF2ZSBub3QgYmVlbiBhdXRoZW50aWNhdGVkIScpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGp3dC5kZWNvZGUodG9rZW4sIHByb2Nlc3MuZW52LlNFQ1JFVCk7XG4gICAgcmVxLnVzZXIgPSB1c2VyO1xuICAgIHJldHVybiBuZXh0KCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7XG4gICAgICBtZXNzYWdlOiAnYXV0aGVudGljYXRpb24gZmFpbGVkJyxcbiAgICAgIGRhdGE6IGVycm9yLFxuICAgIH0pO1xuICB9XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "authenticator.js"
      ],
      "names": [
        "req",
        "res",
        "next",
        "token",
        "cookies",
        "jsend",
        "error",
        "user",
        "jwt",
        "decode",
        "process",
        "env",
        "SECRET",
        "message",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAEe,kBAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACzBC,KADyB,GACfH,GAAG,CAACI,OADW,CACzBD,KADyB;AAEjC,MAAI,CAACA,KAAL,EAAY,OAAOF,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB,kCAAhB,CAAP;;AAEZ,MAAI;AACF,QAAMC,IAAI,GAAGC,yBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAAb;;AACAZ,IAAAA,GAAG,CAACO,IAAJ,GAAWA,IAAX;AACA,WAAOL,IAAI,EAAX;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACd,WAAOL,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB;AACrBO,MAAAA,OAAO,EAAE,uBADY;AAErBC,MAAAA,IAAI,EAAER;AAFe,KAAhB,CAAP;AAID;AACF,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\n\nexport default (req, res, next) => {\n  const { token } = req.cookies;\n  if (!token) return res.jsend.error('You have not been authenticated!');\n\n  try {\n    const user = jwt.decode(token, process.env.SECRET);\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error,\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573692185003
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$cookies, token, userid, _req$body, firstName, lastName, email, password, gender, jobRole, isAdmin, department, regDate;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // check if user is admin\n              _req$cookies = req.cookies, token = _req$cookies.token, userid = _req$cookies.userid;\n              _req$body = req.body, firstName = _req$body.firstName, lastName = _req$body.lastName, email = _req$body.email, password = _req$body.password, gender = _req$body.gender, jobRole = _req$body.jobRole, isAdmin = _req$body.isAdmin, department = _req$body.department, regDate = _req$body.regDate;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT isadmin FROM employee WHERE id = $1', [userid],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2(error, results) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context2.next = 2;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", res.jsend.error(\"You are not an admin\"));\n\n                          case 2:\n                            if (error) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            if (!(results.rows[0].isadmin === false)) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", res.jsend.error('Only admin can can create an employee user account'));\n\n                          case 5:\n                            _context2.next = 7;\n                            return _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                            /*#__PURE__*/\n                            function () {\n                              var _ref2 = _asyncToGenerator(\n                              /*#__PURE__*/\n                              regeneratorRuntime.mark(function _callee(error, results) {\n                                return regeneratorRuntime.wrap(function _callee$(_context) {\n                                  while (1) {\n                                    switch (_context.prev = _context.next) {\n                                      case 0:\n                                        if (!(results.rows[0] === undefined)) {\n                                          _context.next = 17;\n                                          break;\n                                        }\n\n                                        _context.t0 = _dbconnect[\"default\"];\n                                        _context.t1 = 'INSERT INTO employee (firstName, lastName, email, password, gender, jobRole, isAdmin, department)' + ' VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING id, isAdmin';\n                                        _context.t2 = firstName;\n                                        _context.t3 = lastName;\n                                        _context.t4 = email;\n                                        _context.next = 8;\n                                        return _bcrypt[\"default\"].hash(password, 10);\n\n                                      case 8:\n                                        _context.t5 = _context.sent;\n                                        _context.t6 = gender;\n                                        _context.t7 = jobRole;\n                                        _context.t8 = isAdmin;\n                                        _context.t9 = department;\n                                        _context.t10 = [_context.t2, _context.t3, _context.t4, _context.t5, _context.t6, _context.t7, _context.t8, _context.t9];\n\n                                        _context.t11 = function (err, result) {\n                                          // signin jwt and wrap in a cookie\n                                          var token = _jsonwebtoken[\"default\"].sign({\n                                            userId: result.rows[0].id\n                                          }, process.env.SECRET);\n\n                                          res.cookie('userid', result.rows[0].id, {\n                                            expires: new Date(Date.now() + 3600000),\n                                            httpOnly: true\n                                          });\n                                          res.cookie('token', token, {\n                                            expires: new Date(Date.now() + 3600000),\n                                            httpOnly: true\n                                          });\n                                          return res.jsend.success({\n                                            message: 'User account successfully created',\n                                            user_id: result.rows[0].id,\n                                            Token: token,\n                                            is_admin: result.rows[0].isadmin\n                                          });\n                                        };\n\n                                        _context.next = 17;\n                                        return _context.t0.query.call(_context.t0, _context.t1, _context.t10, _context.t11);\n\n                                      case 17:\n                                        if (!(results.rows[0] !== undefined)) {\n                                          _context.next = 19;\n                                          break;\n                                        }\n\n                                        return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                                      case 19:\n                                        return _context.abrupt(\"return\", null);\n\n                                      case 20:\n                                      case \"end\":\n                                        return _context.stop();\n                                    }\n                                  }\n                                }, _callee);\n                              }));\n\n                              return function (_x5, _x6) {\n                                return _ref2.apply(this, arguments);\n                              };\n                            }());\n\n                          case 7:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function signup(_x, _x2) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  // user login logic\n  login: function login(req, res) {\n    var _req$body2 = req.body,\n        email = _req$body2.email,\n        password = _req$body2.password;\n\n    _dbconnect[\"default\"].query('SELECT id, email, password FROM employee WHERE email = $1 ', [email],\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(error, results) {\n        var match, token;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!error) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw error;\n\n              case 2:\n                if (!(results.rows[0] === undefined)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n              case 4:\n                _context4.next = 6;\n                return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n              case 6:\n                match = _context4.sent;\n\n                if (match) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", res.jsend.error({\n                  message: 'Login failed, check your password'\n                }));\n\n              case 9:\n                // sign jwt and wrap in a cookie\n                token = _jsonwebtoken[\"default\"].sign({\n                  userId: results.rows[0].id\n                }, process.env.SECRET);\n                res.cookie('userid', results.rows[0].id, {\n                  expires: new Date(Date.now() + 3600000),\n                  httpOnly: true\n                });\n                res.cookie('token', token, {\n                  expires: new Date(Date.now() + 3600000),\n                  httpOnly: true\n                });\n                return _context4.abrupt(\"return\", res.jsend.success({\n                  Token: token,\n                  user_id: results.rows[0].id\n                }));\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x7, _x8) {\n        return _ref3.apply(this, arguments);\n      };\n    }()); // disconnect client after operation\n\n\n    _dbconnect[\"default\"].on('remove', function () {\n      (0, _debug[\"default\"])('app:login')('client removed @signin');\n    });\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "signup",
        "req",
        "res",
        "cookies",
        "token",
        "userid",
        "body",
        "firstName",
        "lastName",
        "email",
        "password",
        "gender",
        "jobRole",
        "isAdmin",
        "department",
        "regDate",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "jsend",
        "isadmin",
        "bcrypt",
        "hash",
        "err",
        "result",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "success",
        "message",
        "user_id",
        "Token",
        "is_admin",
        "on",
        "login",
        "compare",
        "match"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;eAEe;AACbA,EAAAA,MAAM;AAAA;AAAA;AAAA,4BAAE,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACN;AADM,6BAEoBD,GAAG,CAACE,OAFxB,EAEEC,KAFF,gBAEEA,KAFF,EAESC,MAFT,gBAESA,MAFT;AAAA,0BAKFJ,GAAG,CAACK,IALF,EAIJC,SAJI,aAIJA,SAJI,EAIOC,QAJP,aAIOA,QAJP,EAIiBC,KAJjB,aAIiBA,KAJjB,EAIyBC,QAJzB,aAIyBA,QAJzB,EAImCC,MAJnC,aAImCA,MAJnC,EAI2CC,OAJ3C,aAI2CA,OAJ3C,EAIoDC,OAJpD,aAIoDA,OAJpD,EAI6DC,UAJ7D,aAI6DA,UAJ7D,EAIyEC,OAJzE,aAIyEA,OAJzE;;AAMN,kBAAI;AACFC,sCAAKC,KAAL,CAAW,4CAAX,EAAyD,CAACZ,MAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmE,kBAAOa,KAAP,EAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC9DA,OAAO,CAACC,IAAR,CAAa,CAAb,MAAoBC,SAD0C;AAAA;AAAA;AAAA;;AAAA,8DACvBnB,GAAG,CAACoB,KAAJ,CAAUJ,KAAV,CAAgB,sBAAhB,CADuB;;AAAA;AAAA,gCAE1DA,KAF0D;AAAA;AAAA;AAAA;;AAAA,kCAGzDC,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBG,OAAhB,KAA4B,KAH6B;AAAA;AAAA;AAAA;;AAAA,8DAGfrB,GAAG,CAACoB,KAAJ,CAAUJ,KAAV,CAAgB,oDAAhB,CAHe;;AAAA;AAAA;AAAA,mCAKzDF,sBAAKC,KAAL,CAAW,6CAAX,EAA0D,CAACR,KAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAoE,iBAAOS,KAAP,EAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEtEA,OAAO,CAACC,IAAR,CAAa,CAAb,MAAoBC,SAFkD;AAAA;AAAA;AAAA;;AAAA,sDAGlEL,qBAHkE;AAAA,sDAGvD,sGACf,gEAJsE;AAAA,sDAIFT,SAJE;AAAA,sDAISC,QAJT;AAAA,sDAImBC,KAJnB;AAAA;AAAA,+CAIiCe,mBAAOC,IAAP,CAAYf,QAAZ,EAAsB,EAAtB,CAJjC;;AAAA;AAAA;AAAA,sDAI4DC,MAJ5D;AAAA,sDAIoEC,OAJpE;AAAA,sDAI6EC,OAJ7E;AAAA,sDAIsFC,UAJtF;AAAA;;AAAA,uDAIoG,UAACY,GAAD,EAAMC,MAAN,EAAiB;AAC3L;AACA,8CAAMvB,KAAK,GAAGwB,yBAAIC,IAAJ,CAAS;AAAEC,4CAAAA,MAAM,EAAEH,MAAM,CAACP,IAAP,CAAY,CAAZ,EAAeW;AAAzB,2CAAT,EAAwCC,OAAO,CAACC,GAAR,CAAYC,MAApD,CAAd;;AACAhC,0CAAAA,GAAG,CAACiC,MAAJ,CAAW,QAAX,EAAqBR,MAAM,CAACP,IAAP,CAAY,CAAZ,EAAeW,EAApC,EAAwC;AAAEK,4CAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,CAAX;AAA2CC,4CAAAA,QAAQ,EAAE;AAArD,2CAAxC;AACArC,0CAAAA,GAAG,CAACiC,MAAJ,CAAW,OAAX,EAAoB/B,KAApB,EAA2B;AAAEgC,4CAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,CAAX;AAA2CC,4CAAAA,QAAQ,EAAE;AAArD,2CAA3B;AACA,iDAAOrC,GAAG,CAACoB,KAAJ,CAAUkB,OAAV,CAAkB;AACvBC,4CAAAA,OAAO,EAAE,mCADc;AAEvBC,4CAAAA,OAAO,EAAEf,MAAM,CAACP,IAAP,CAAY,CAAZ,EAAeW,EAFD;AAGvBY,4CAAAA,KAAK,EAAEvC,KAHgB;AAIvBwC,4CAAAA,QAAQ,EAAEjB,MAAM,CAACP,IAAP,CAAY,CAAZ,EAAeG;AAJF,2CAAlB,CAAP;AAMD,yCAfuE;;AAAA;AAAA,2DAG7DN,KAH6D;;AAAA;AAAA,8CAiBxEE,OAAO,CAACC,IAAR,CAAa,CAAb,MAAoBC,SAjBoD;AAAA;AAAA;AAAA;;AAAA,yEAiBlCnB,GAAG,CAACoB,KAAJ,CAAUJ,KAAV,CAAgB,sBAAhB,CAjBkC;;AAAA;AAAA,yEAkBnE,IAlBmE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApE;;AAAA;AAAA;AAAA;AAAA,gCALyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnE;;AAAA;AAAA;AAAA;AAAA;AA0BD,eA3BD,CA2BE,OAAOA,KAAP,EAAc;AAAE,uCAAM,OAAN,EAAeA,KAAf;AAAwB,eAjCpC,CAkCN;;;AACAF,oCAAK6B,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,uCAAM,WAAN,EAAmB,wBAAnB;AACD,eAFD;;AAnCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADO;AAwCb;AACAC,EAAAA,KAAK,EAAG,eAAC7C,GAAD,EAAMC,GAAN,EAAc;AAAA,qBACQD,GAAG,CAACK,IADZ;AAAA,QACZG,KADY,cACZA,KADY;AAAA,QACLC,QADK,cACLA,QADK;;AAElBM,0BAAKC,KAAL,CAAW,4DAAX,EAAyE,CAACR,KAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkF,kBAAOS,KAAP,EAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC9ED,KAD8E;AAAA;AAAA;AAAA;;AAAA,sBAE1EA,KAF0E;;AAAA;AAAA,sBAI9EC,OAAO,CAACC,IAAR,CAAa,CAAb,MAAoBC,SAJ0D;AAAA;AAAA;AAAA;;AAAA,kDAIxCnB,GAAG,CAACoB,KAAJ,CAAUJ,KAAV,CAAgB,iCAAhB,CAJwC;;AAAA;AAAA;AAAA,uBAK9DM,mBAAOuB,OAAP,CAAerC,QAAf,EAAyBS,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBV,QAAzC,CAL8D;;AAAA;AAK5EsC,gBAAAA,KAL4E;;AAAA,oBAM7EA,KAN6E;AAAA;AAAA;AAAA;;AAAA,kDAOzE9C,GAAG,CAACoB,KAAJ,CAAUJ,KAAV,CAAgB;AAAEuB,kBAAAA,OAAO,EAAE;AAAX,iBAAhB,CAPyE;;AAAA;AASlF;AACMrC,gBAAAA,KAV4E,GAUpEwB,yBAAIC,IAAJ,CAAS;AAAEC,kBAAAA,MAAM,EAAEX,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBW;AAA1B,iBAAT,EAAyCC,OAAO,CAACC,GAAR,CAAYC,MAArD,CAVoE;AAWlFhC,gBAAAA,GAAG,CAACiC,MAAJ,CAAW,QAAX,EAAqBhB,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBW,EAArC,EAAyC;AAAEK,kBAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,CAAX;AAA2CC,kBAAAA,QAAQ,EAAE;AAArD,iBAAzC;AACArC,gBAAAA,GAAG,CAACiC,MAAJ,CAAW,OAAX,EAAoB/B,KAApB,EAA2B;AAAEgC,kBAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,CAAX;AAA2CC,kBAAAA,QAAQ,EAAE;AAArD,iBAA3B;AAZkF,kDAa3ErC,GAAG,CAACoB,KAAJ,CAAUkB,OAAV,CAAkB;AACvBG,kBAAAA,KAAK,EAAEvC,KADgB;AACTsC,kBAAAA,OAAO,EAAEvB,OAAO,CAACC,IAAR,CAAa,CAAb,EAAgBW;AADhB,iBAAlB,CAb2E;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlF;;AAAA;AAAA;AAAA;AAAA,SAFkB,CAmBpB;;;AACAf,0BAAK6B,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,6BAAM,WAAN,EAAmB,wBAAnB;AACD,KAFD;AAGD;AAhEY,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  signup: async (req, res) => {\n    // check if user is admin\n    const { token, userid } = req.cookies;\n    const {\n      firstName, lastName, email,  password, gender, jobRole, isAdmin, department, regDate\n    } = req.body;\n    try {\n      pool.query('SELECT isadmin FROM employee WHERE id = $1', [userid], async (error, results) => {\n        if(results.rows[0] === undefined){ return res.jsend.error(\"You are not an admin\");}\n          if (!error) {\n            if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can create an employee user account');\n          }\n          await pool.query('SELECT email FROM employee WHERE email = $1', [email],  async (error, results) => {\n          // user does not exist\n          if (results.rows[0] === undefined) {\n            await pool.query('INSERT INTO employee (firstName, lastName, email, password, gender, jobRole, isAdmin, department)'+\n              ' VALUES ($1, $2, $3, $4, $5, $6, $7, $8) RETURNING id, isAdmin', [ firstName, lastName, email,  await bcrypt.hash(password, 10), gender, jobRole, isAdmin, department],  (err, result) => {\n              // signin jwt and wrap in a cookie\n              const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n              res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n              res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n              return res.jsend.success({\n                message: 'User account successfully created',\n                user_id: result.rows[0].id,\n                Token: token,\n                is_admin: result.rows[0].isadmin,\n              });\n            });\n          }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n          return null;\n      });\n    });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  login:  (req, res) => {\n    const { email, password } = req.body;\n      pool.query('SELECT id, email, password FROM employee WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        Token: token, user_id: results.rows[0].id\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573839567650
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\gifs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "gifs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar cloudinary = require('cloudinary').v2;\n\n// configure cloudinary\ncloudinary.config({\n  cloud_name: 'ds5hogj9b',\n  api_key: '657785678132187',\n  api_secret: 'EcvkztYhPW8egTvRTo10OdiJpwU'\n});\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res) {\n      var _req$cookies, token, userid, _req$body, url, title;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // check if user is admin\n              _req$cookies = req.cookies, token = _req$cookies.token, userid = _req$cookies.userid;\n              _req$body = req.body, url = _req$body.url, title = _req$body.title; // token = req.header();\n\n              _context.prev = 2;\n              _context.next = 5;\n              return cloudinary.uploader.upload(url, {\n                tags: 'basic_sample',\n                \"width\": 200,\n                \"height\": 150\n              }).then(function (image) {\n                console.log();\n                console.log(\"** File Upload (Promise)\");\n                console.log(\"* public_id for the uploaded image is generated by Cloudinary's service.\");\n                console.log(\"* \" + image.public_id);\n                console.log(\"* \" + image.url); // create trip if user is admin\n\n                _dbconnect[\"default\"].query('INSERT INTO gif (employee_id, imageurl, title) VALUES ($1, $2, $3) RETURNING id, imageurl, title, gifdate ', [userid, image.url, title], function (err, result) {\n                  if (!err) {\n                    return res.jsend.success({\n                      gifID: result.rows[0].id,\n                      message: 'Gif image successfully posted',\n                      CreatedOn: result.rows[0].gifdate,\n                      title: result.rows[0].title,\n                      imageUrl: result.rows[0].imageurl\n                    });\n                  }\n\n                  return res.jsend.error(error);\n                }); // disconnect client\n\n\n                _dbconnect[\"default\"].on('remove', function () {\n                  (0, _debug[\"default\"])('app:*')('Client Removed @ postGif');\n                });\n              })[\"catch\"](function (err) {\n                console.log();\n                console.log(\"** File Upload (Promise)\");\n\n                if (err) {\n                  (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @createGif' + err);\n                }\n              });\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](2);\n              (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @createGif');\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 7]]);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // user delete gif logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$cookies2, token, userid, gifId;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$cookies2 = req.cookies, token = _req$cookies2.token, userid = _req$cookies2.userid;\n              gifId = req.params.gifId; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('DELETE FROM  gif  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [gifId, userid], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"Delete gif failed\");\n                  }\n\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Gif succesfully deleted ',\n                      title: result.rows[0].title\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @deleteGif ' + error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @deleteGif');\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function _delete(_x3, _x4) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // Get specific gif\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var gifId;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              gifId = req.params.gifId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT id, title, imageurl as imageurl, gifdate FROM gif WHERE id = $1', [gifId], function (error, result) {\n                  _dbconnect[\"default\"].query('SELECT id as commentId, comment, employee_id as authorId from gif_comment WHERE gif_id = $1 ', [gifId], function (err, commentResult) {\n                    if (!error) {\n                      if (!err) {\n                        return res.jsend.success({\n                          id: result.rows[0].id,\n                          createdOn: result.rows[0].gifdate,\n                          title: result.rows[0].title,\n                          url: result.rows[0].imageurl,\n                          comment: commentResult.rows\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong getting gif');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @gettingGif');\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getOne(_x5, _x6) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user login logic\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$cookies3, token, userid, gifId, comment;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$cookies3 = req.cookies, token = _req$cookies3.token, userid = _req$cookies3.userid;\n              gifId = req.params.gifId;\n              comment = req.body.comment; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('SELECT title FROM  gif  WHERE id = $1', [gifId], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"No gif to comment on\");\n                  }\n\n                  if (!err) {\n                    _dbconnect[\"default\"].query('INSERT INTO gif_comment (comment, employee_id, gif_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, gifId], function (error, commentResult) {\n                      if (!error) {\n                        return res.jsend.success({\n                          message: 'Comment succesfully created',\n                          createdOn: commentResult.rows[0].comment_date,\n                          gifTitle: result.rows[0].title,\n                          comment: commentResult.rows[0].comment\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    });\n                  }\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong getting article');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @commentGif');\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function createComment(_x7, _x8) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // admin delete comment\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(req, res) {\n      var userid, _req$params, gifId, commentId;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              userid = req.cookies.userid;\n              _req$params = req.params, gifId = _req$params.gifId, commentId = _req$params.commentId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT isadmin FROM employee WHERE id = $1', [userid], function (error, results) {\n                  if (results.rows[0] === undefined) {\n                    return res.jsend.error(\"You are not an admin\");\n                  }\n\n                  if (!error) {\n                    if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n                  }\n\n                  _dbconnect[\"default\"].query('DELETE FROM gif_comment WHERE  id = $1 AND gif_id = $2', [commentId, gifId], function (error, result) {\n                    if (result) {\n                      res.jsend.success({\n                        message: 'Comment deleted successfully'\n                      });\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client removed @deleteComment');\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function deleteComment(_x9, _x10) {\n      return _deleteComment.apply(this, arguments);\n    }\n\n    return deleteComment;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gifs.js"
      ],
      "names": [
        "cloudinary",
        "require",
        "v2",
        "config",
        "cloud_name",
        "api_key",
        "api_secret",
        "create",
        "req",
        "res",
        "cookies",
        "token",
        "userid",
        "body",
        "url",
        "title",
        "uploader",
        "upload",
        "tags",
        "then",
        "image",
        "console",
        "log",
        "public_id",
        "pool",
        "query",
        "err",
        "result",
        "jsend",
        "success",
        "gifID",
        "rows",
        "id",
        "message",
        "CreatedOn",
        "gifdate",
        "imageUrl",
        "imageurl",
        "error",
        "on",
        "gifId",
        "params",
        "undefined",
        "getOne",
        "commentResult",
        "createdOn",
        "comment",
        "createComment",
        "comment_date",
        "gifTitle",
        "deleteComment",
        "commentId",
        "results",
        "isadmin"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "\nlet cloudinary = require('cloudinary').v2;\nimport debug from 'debug';\nimport pool from '../database/dbconnect';\n// configure cloudinary\ncloudinary.config({\n  cloud_name: 'ds5hogj9b',\n  api_key: '657785678132187',\n  api_secret: 'EcvkztYhPW8egTvRTo10OdiJpwU'\n});\n\n\nexport default {\n  create: async (req, res) => {\n    // check if user is admin\n    const { token, userid } = req.cookies;\n    const {url, title} = req.body;\n    // token = req.header();\n    try {\n      // Upload gif to cloudinary\n      await cloudinary.uploader.upload(url, { tags: 'basic_sample', \"width\": 200, \"height\": 150,  })\n      .then(function (image) {\n      console.log();\n      console.log(\"** File Upload (Promise)\");\n      console.log(\"* public_id for the uploaded image is generated by Cloudinary's service.\");\n      console.log(\"* \" + image.public_id);\n      console.log(\"* \" + image.url);\n      // create trip if user is admin\n      pool.query('INSERT INTO gif (employee_id, imageurl, title) VALUES ($1, $2, $3) RETURNING id, imageurl, title, gifdate ', [userid, image.url, title], (err, result) => {\n        if (!err) {\n          return res.jsend.success({\n            gifID: result.rows[0].id,\n            message: 'Gif image successfully posted',\n            CreatedOn: result.rows[0].gifdate,\n            title: result.rows[0].title,\n            imageUrl: result.rows[0].imageurl\n          });\n        }\n          return res.jsend.error(error);\n      });\n    // disconnect client\n    pool.on('remove', () => {\n        debug('app:*')('Client Removed @ postGif');\n      });\n    })\n    .catch(function (err) {\n      console.log();\n      console.log(\"** File Upload (Promise)\");\n      if (err) { debug('app:*')('Error Occured: Something wrong @createGif' + err); }\n    });\n  }catch (error) { debug('app:*')('Error Occured: Something wrong @createGif'); }   \n},\n  // user delete gif logic\n  delete: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { gifId } } = req;\n    // token = req.header();\n    try {\n        pool.query('DELETE FROM  gif  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [gifId, userid], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"Delete gif failed\");}\n          if (!err) {\n            return res.jsend.success({\n              message: 'Gif succesfully deleted ',\n              title: result.rows[0].title\n            });\n          } \n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @deleteGif ' + error); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @deleteGif');\n    }); \n  },\n  // Get specific gif\n  getOne: async (req, res) => {\n    const { params: { gifId } } = req;\n    try {\n      pool.query('SELECT id, title, imageurl as imageurl, gifdate FROM gif WHERE id = $1', [gifId], (error, result) => {\n        pool.query('SELECT id as commentId, comment, employee_id as authorId from gif_comment WHERE gif_id = $1 ', [gifId], (err, commentResult) => {\n          if(!error){\n            if (!err) {\n              return res.jsend.success({\n                id: result.rows[0].id,\n                createdOn: result.rows[0].gifdate,\n                title: result.rows[0].title,\n                url: result.rows[0].imageurl,\n                comment: commentResult.rows,\n              });\n            }\n            return res.jsend.error(error);\n          }\n        });\n      });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong getting gif'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @gettingGif');\n    });\n  },\n  // user login logic\n  createComment: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { gifId } } = req;\n    const {comment} = req.body;\n    // token = req.header();\n    try {\n        pool.query('SELECT title FROM  gif  WHERE id = $1', [gifId], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"No gif to comment on\");}\n          if (!err) {\n            pool.query('INSERT INTO gif_comment (comment, employee_id, gif_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, gifId], (error, commentResult) => {\n              if(!error){\n                return res.jsend.success({\n                message: 'Comment succesfully created',\n                createdOn: commentResult.rows[0].comment_date,\n                gifTitle: result.rows[0].title,\n                comment: commentResult.rows[0].comment,\n              });\n            }\n            return res.jsend.error(error);\n            }); \n          } \n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong getting article'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @commentGif');\n    }); \n  },\n  // admin delete comment\n  deleteComment: async (req, res) => {\n    const { userid } = req.cookies;\n    const { params: { gifId, commentId } } = req;\n      try {\n        pool.query('SELECT isadmin FROM employee WHERE id = $1', [userid], (error, results) => {\n          if(results.rows[0] === undefined){ return res.jsend.error(\"You are not an admin\");}\n            if (!error) {\n              if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n            }\n          pool.query('DELETE FROM gif_comment WHERE  id = $1 AND gif_id = $2', [commentId, gifId], (error, result) => {\n          if (result) {\n          res.jsend.success({ message: 'Comment deleted successfully' });\n        }\n      });\n    });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client removed @deleteComment');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573834828717
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\articles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "articles.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(req, res) {\n      var _req$cookies, token, userid, _req$body, title, article;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _req$cookies = req.cookies, token = _req$cookies.token, userid = _req$cookies.userid;\n              _req$body = req.body, title = _req$body.title, article = _req$body.article; // token = req.header();\n\n              try {\n                // employee post new article\n                _dbconnect[\"default\"].query('INSERT INTO articles (employee_id, title, article) VALUES ($1, $2, $3) RETURNING id, title, articledate', [userid, title, article], function (err, result) {\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Article Succesfully posted',\n                      articleId: result.rows[0].id,\n                      createdOn: result.rows[0].articledate,\n                      title: result.rows[0].title\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @postArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @ postAricle');\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // edit article logic\n  edit: function () {\n    var _edit = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$cookies2, token, userid, _req$body2, title, article, articleId;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _req$cookies2 = req.cookies, token = _req$cookies2.token, userid = _req$cookies2.userid;\n              _req$body2 = req.body, title = _req$body2.title, article = _req$body2.article;\n              articleId = req.params.articleId; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('UPDATE  articles SET  title = $1, article = $2  WHERE id = $3 AND employee_id = $4 RETURNING title, article, articledate', [title, article, articleId, userid], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"Article update failed\");\n                  }\n\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Article succesfully updated',\n                      title: result.rows[0].title,\n                      article: result.rows[0].article,\n                      createdOn: result.rows[0].articledate\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @editArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @ editAricle');\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function edit(_x3, _x4) {\n      return _edit.apply(this, arguments);\n    }\n\n    return edit;\n  }(),\n  // delete article logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(req, res) {\n      var _req$cookies3, token, userid, articleId;\n\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _req$cookies3 = req.cookies, token = _req$cookies3.token, userid = _req$cookies3.userid;\n              articleId = req.params.articleId; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('DELETE FROM  articles  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [articleId, userid], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"Delete article failed\");\n                  }\n\n                  if (!err) {\n                    return res.jsend.success({\n                      message: 'Article succesfully deleted ',\n                      title: result.rows[0].title\n                    });\n                  }\n\n                  return res.jsend.error(err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong @deleteArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @deleteArticle');\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function _delete(_x5, _x6) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // user get a specific article\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var articleId;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              articleId = req.params.articleId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT id, title, article, articledate FROM articles WHERE id = $1', [articleId], function (error, result) {\n                  _dbconnect[\"default\"].query('SELECT id as commentId, comment, employee_id as authorId from article_comment WHERE article_id = $1 ', [articleId], function (err, commentResult) {\n                    if (!error) {\n                      if (!err) {\n                        return res.jsend.success({\n                          id: result.rows[0].id,\n                          createdOn: result.rows[0].articledate,\n                          title: result.rows[0].title,\n                          article: result.rows[0].article,\n                          comment: commentResult.rows\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong getting article');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @gettingArticle');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getOne(_x7, _x8) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user comment on article\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(req, res) {\n      var _req$cookies4, token, userid, articleId, comment;\n\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _req$cookies4 = req.cookies, token = _req$cookies4.token, userid = _req$cookies4.userid;\n              articleId = req.params.articleId;\n              comment = req.body.comment; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('SELECT title, article FROM  articles  WHERE id = $1', [articleId], function (err, result) {\n                  if (result.rows[0] === undefined) {\n                    return res.jsend.error(\"No article to comment on\");\n                  }\n\n                  if (!err) {\n                    _dbconnect[\"default\"].query('INSERT INTO article_comment (comment, employee_id, article_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, articleId], function (error, commentResult) {\n                      if (!error) {\n                        return res.jsend.success({\n                          message: 'Comment succesfully created',\n                          createdOn: commentResult.rows[0].comment_date,\n                          articleTitle: result.rows[0].title,\n                          article: result.rows[0].article,\n                          comment: commentResult.rows[0].comment\n                        });\n                      }\n\n                      return res.jsend.error(error);\n                    });\n                  }\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong commentArticle');\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @commentArticle');\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function createComment(_x9, _x10) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // delete comment\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var userid, _req$params, articleId, commentId;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              userid = req.cookies.userid;\n              _req$params = req.params, articleId = _req$params.articleId, commentId = _req$params.commentId;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT isadmin FROM employee WHERE id = $1', [userid], function (error, results) {\n                  if (results.rows[0] === undefined) {\n                    return res.jsend.error(\"You are not an admin\");\n                  }\n\n                  if (!error) {\n                    if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n                  }\n\n                  _dbconnect[\"default\"].query('DELETE FROM article_comment WHERE  id = $1 AND gif_id = $2 ', [commentId, articleId], function (error, result) {\n                    if (result) {\n                      res.jsend.success({\n                        message: 'Comment deleted successfully'\n                      });\n                    }\n                  });\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client removed @deleteComment');\n              });\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function deleteComment(_x11, _x12) {\n      return _deleteComment.apply(this, arguments);\n    }\n\n    return deleteComment;\n  }(),\n  // user login logic\n  getFeed: function () {\n    var _getFeed = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(req, res) {\n      var token;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              token = req.cookies.token;\n              req.Header = token; // token = req.header();\n\n              try {\n                _dbconnect[\"default\"].query('SELECT id, employee_id as authorId, title, article, articledate as createdOn FROM  articles' + ' UNION ALL ' + 'SELECT id, employee_id as authorId, title, imageurl as url, gifdate as createdOn FROM  gif  ORDER BY createdON DESC', function (err, result) {\n                  if (!err) {\n                    return res.jsend.success(result.rows);\n                  }\n\n                  return res.jsend.error('Unable to get feed ' + err);\n                });\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')('Error Occured: Something wrong gettingFeed ' + error);\n              } // disconnect client\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:*')('Client Removed @getFeed');\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function getFeed(_x13, _x14) {\n      return _getFeed.apply(this, arguments);\n    }\n\n    return getFeed;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "articles.js"
      ],
      "names": [
        "create",
        "req",
        "res",
        "cookies",
        "token",
        "userid",
        "body",
        "title",
        "article",
        "pool",
        "query",
        "err",
        "result",
        "jsend",
        "success",
        "message",
        "articleId",
        "rows",
        "id",
        "createdOn",
        "articledate",
        "error",
        "on",
        "edit",
        "params",
        "undefined",
        "getOne",
        "commentResult",
        "comment",
        "createComment",
        "comment_date",
        "articleTitle",
        "deleteComment",
        "commentId",
        "results",
        "isadmin",
        "getFeed",
        "Header"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import debug from 'debug';\nimport pool from '../database/dbconnect';\n\nexport default {\n  create: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { title, article} = req.body;\n    // token = req.header();\n    try {\n        // employee post new article\n        pool.query('INSERT INTO articles (employee_id, title, article) VALUES ($1, $2, $3) RETURNING id, title, articledate', [userid, title, article], (err, result) => {\n          if (!err) {\n            return res.jsend.success({\n              message: 'Article Succesfully posted',\n              articleId: result.rows[0].id,\n              createdOn: result.rows[0].articledate,\n              title: result.rows[0].title,\n            });\n          }\n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @postArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @ postAricle');\n    });\n   \n  },\n  // edit article logic\n  edit: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { title, article} = req.body;\n    const { params: { articleId } } = req;\n    // token = req.header();\n    try {\n        pool.query('UPDATE  articles SET  title = $1, article = $2  WHERE id = $3 AND employee_id = $4 RETURNING title, article, articledate', [title, article, articleId, userid], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"Article update failed\");}\n          if (!err) {\n            return res.jsend.success({\n              message: 'Article succesfully updated',\n              title: result.rows[0].title,\n              article: result.rows[0].article,\n              createdOn: result.rows[0].articledate,\n            });\n          } \n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @editArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @ editAricle');\n    });\n  },\n\n  // delete article logic\n  delete: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { articleId } } = req;\n    // token = req.header();\n    try {\n        pool.query('DELETE FROM  articles  WHERE id = $1 AND employee_id = $2 RETURNING id, title', [articleId, userid], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"Delete article failed\");}\n          if (!err) {\n            return res.jsend.success({\n              message: 'Article succesfully deleted ',\n              title: result.rows[0].title\n            });\n          } \n          return res.jsend.error(err);\n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong @deleteArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @deleteArticle');\n    }); \n  },\n\n  // user get a specific article\n  getOne: async (req, res) => {\n    const { params: { articleId } } = req;\n    try {\n      pool.query('SELECT id, title, article, articledate FROM articles WHERE id = $1', [articleId], (error, result) => {\n        pool.query('SELECT id as commentId, comment, employee_id as authorId from article_comment WHERE article_id = $1 ', [articleId], (err, commentResult) => {\n          if(!error){\n            if (!err) {\n              return res.jsend.success({\n                id: result.rows[0].id,\n                createdOn: result.rows[0].articledate,\n                title: result.rows[0].title,\n                article: result.rows[0].article,\n                comment: commentResult.rows,\n              });\n            }\n            return res.jsend.error(error);\n          }\n        });\n      });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong getting article'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @gettingArticle');\n    });\n  },\n  // user comment on article\n  createComment: async (req, res) => {\n    const { token, userid } = req.cookies;\n    const { params: { articleId } } = req;\n    const {comment} = req.body;\n    // token = req.header();\n    try {\n        pool.query('SELECT title, article FROM  articles  WHERE id = $1', [articleId], (err, result) => {\n          if(result.rows[0] === undefined){ return res.jsend.error(\"No article to comment on\");}\n          if (!err) {\n            pool.query('INSERT INTO article_comment (comment, employee_id, article_id) VALUES ($1, $2, $3) RETURNING comment, comment_date', [comment, userid, articleId], (error, commentResult) => {\n              if(!error){\n                return res.jsend.success({\n                message: 'Comment succesfully created',\n                createdOn: commentResult.rows[0].comment_date,\n                articleTitle: result.rows[0].title,\n                article: result.rows[0].article,\n                comment: commentResult.rows[0].comment,\n              });\n            }\n            return res.jsend.error(error);\n            }); \n          } \n        });\n    } catch (error) { debug('app:*')('Error Occured: Something wrong commentArticle'); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client Removed @commentArticle');\n    });\n  },\n  // delete comment\n  deleteComment: async (req, res) => {\n    const { userid } = req.cookies;\n    const { params: { articleId, commentId } } = req;\n      try {\n        pool.query('SELECT isadmin FROM employee WHERE id = $1', [userid], (error, results) => {\n          if(results.rows[0] === undefined){ return res.jsend.error(\"You are not an admin\");}\n            if (!error) {\n              if (results.rows[0].isadmin === false) return res.jsend.error('Only admin can can delete a comment');\n            }\n          pool.query('DELETE FROM article_comment WHERE  id = $1 AND gif_id = $2 ', [commentId, articleId ], (error, result) => {\n          if (result) {\n          res.jsend.success({ message: 'Comment deleted successfully' });\n        }\n      });\n    });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:*')('Client removed @deleteComment');\n    });\n  },\n  // user login logic\n  getFeed: async (req, res) => {\n    const { token } = req.cookies;\n    req.Header = token;\n    // token = req.header();\n    try {\n      pool.query('SELECT id, employee_id as authorId, title, article, articledate as createdOn FROM  articles'\n      + ' UNION ALL '\n      + 'SELECT id, employee_id as authorId, title, imageurl as url, gifdate as createdOn FROM  gif  ORDER BY createdON DESC', (err, result) => {\n        if (!err) {\n              return res.jsend.success(result.rows);\n          }\n          return res.jsend.error('Unable to get feed '+ err); \n      });\n  } catch (error) { debug('app:*')('Error Occured: Something wrong gettingFeed ' + error); }\n  // disconnect client\n  pool.on('remove', () => {\n    debug('app:*')('Client Removed @getFeed');\n  });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573834879977
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\config\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\config\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire('dotenv').config();\n\nvar config = {\n  // If using onine database\n  // development: {\n  //   use_env_variable: 'DATABASE_URL'\n  // },\n  development: {\n    user: 'postgres',\n    // this is the db user credential\n    database: 'teamwork',\n    password: 'olajide4me',\n    port: 5433,\n    max: 100,\n    // max number of clients in the pool\n    idleTimeoutMillis: 30000\n  },\n  test: {\n    user: 'postgres',\n    // this is the db user credential\n    database: 'teamwork_test',\n    password: 'olajide4me',\n    port: 5433,\n    max: 100,\n    // max number of clients in the pool\n    idleTimeoutMillis: 30000\n  },\n  production: {\n    database: process.env.DB_NAME,\n    username: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    host: process.env.DB_HOST,\n    dialect: 'postgres'\n  }\n};\nvar _default = config;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZGV2ZWxvcG1lbnQiLCJ1c2VyIiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsInBvcnQiLCJtYXgiLCJpZGxlVGltZW91dE1pbGxpcyIsInRlc3QiLCJwcm9kdWN0aW9uIiwicHJvY2VzcyIsImVudiIsIkRCX05BTUUiLCJ1c2VybmFtZSIsIkRCX1VTRVIiLCJEQl9QQVNTIiwiaG9zdCIsIkRCX0hPU1QiLCJkaWFsZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUdBLElBQU1BLE1BQU0sR0FBRztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBRUFDLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxJQUFJLEVBQUUsVUFESztBQUNPO0FBQ2xCQyxJQUFBQSxRQUFRLEVBQUUsVUFGQztBQUdYQyxJQUFBQSxRQUFRLEVBQUUsWUFIQztBQUlYQyxJQUFBQSxJQUFJLEVBQUUsSUFKSztBQUtYQyxJQUFBQSxHQUFHLEVBQUUsR0FMTTtBQUtEO0FBQ1ZDLElBQUFBLGlCQUFpQixFQUFFO0FBTlIsR0FQQTtBQWdCYkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pOLElBQUFBLElBQUksRUFBRSxVQURGO0FBQ2M7QUFDbEJDLElBQUFBLFFBQVEsRUFBRSxlQUZOO0FBR0pDLElBQUFBLFFBQVEsRUFBRSxZQUhOO0FBSUpDLElBQUFBLElBQUksRUFBRSxJQUpGO0FBS0pDLElBQUFBLEdBQUcsRUFBRSxHQUxEO0FBS007QUFDVkMsSUFBQUEsaUJBQWlCLEVBQUU7QUFOZixHQWhCTztBQXlCYkUsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZOLElBQUFBLFFBQVEsRUFBRU8sT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BRFo7QUFFVkMsSUFBQUEsUUFBUSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsT0FGWjtBQUdWVixJQUFBQSxRQUFRLEVBQUVNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxPQUhaO0FBSVZDLElBQUFBLElBQUksRUFBRU4sT0FBTyxDQUFDQyxHQUFSLENBQVlNLE9BSlI7QUFLVkMsSUFBQUEsT0FBTyxFQUFFO0FBTEM7QUF6QkMsQ0FBZjtlQWtDZWxCLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxjb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTsgXHJcblxyXG5cclxuY29uc3QgY29uZmlnID0ge1xyXG5cclxuICAvLyBJZiB1c2luZyBvbmluZSBkYXRhYmFzZVxyXG4gIC8vIGRldmVsb3BtZW50OiB7XHJcbiAgLy8gICB1c2VfZW52X3ZhcmlhYmxlOiAnREFUQUJBU0VfVVJMJ1xyXG4gIC8vIH0sXHJcblxyXG4gIGRldmVsb3BtZW50OiB7XHJcbiAgICB1c2VyOiAncG9zdGdyZXMnLCAvLyB0aGlzIGlzIHRoZSBkYiB1c2VyIGNyZWRlbnRpYWxcclxuICAgIGRhdGFiYXNlOiAndGVhbXdvcmsnLFxyXG4gICAgcGFzc3dvcmQ6ICdvbGFqaWRlNG1lJyxcclxuICAgIHBvcnQ6IDU0MzMsXHJcbiAgICBtYXg6IDEwMCwgLy8gbWF4IG51bWJlciBvZiBjbGllbnRzIGluIHRoZSBwb29sXHJcbiAgICBpZGxlVGltZW91dE1pbGxpczogMzAwMDAsXHJcbiAgfSxcclxuXHJcbiAgdGVzdDoge1xyXG4gICAgdXNlcjogJ3Bvc3RncmVzJywgLy8gdGhpcyBpcyB0aGUgZGIgdXNlciBjcmVkZW50aWFsXHJcbiAgICBkYXRhYmFzZTogJ3RlYW13b3JrX3Rlc3QnLFxyXG4gICAgcGFzc3dvcmQ6ICdvbGFqaWRlNG1lJyxcclxuICAgIHBvcnQ6IDU0MzMsXHJcbiAgICBtYXg6IDEwMCwgLy8gbWF4IG51bWJlciBvZiBjbGllbnRzIGluIHRoZSBwb29sXHJcbiAgICBpZGxlVGltZW91dE1pbGxpczogMzAwMDAsXHJcbiAgfSxcclxuXHJcbiAgcHJvZHVjdGlvbjoge1xyXG4gICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUsXHJcbiAgICB1c2VybmFtZTogcHJvY2Vzcy5lbnYuREJfVVNFUixcclxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTLFxyXG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCxcclxuICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcydcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25maWc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "require",
        "config",
        "development",
        "user",
        "database",
        "password",
        "port",
        "max",
        "idleTimeoutMillis",
        "test",
        "production",
        "process",
        "env",
        "DB_NAME",
        "username",
        "DB_USER",
        "DB_PASS",
        "host",
        "DB_HOST",
        "dialect"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,IAAMA,MAAM,GAAG;AAEb;AACA;AACA;AACA;AAEAC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,UADK;AACO;AAClBC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,QAAQ,EAAE,YAHC;AAIXC,IAAAA,IAAI,EAAE,IAJK;AAKXC,IAAAA,GAAG,EAAE,GALM;AAKD;AACVC,IAAAA,iBAAiB,EAAE;AANR,GAPA;AAgBbC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAE,UADF;AACc;AAClBC,IAAAA,QAAQ,EAAE,eAFN;AAGJC,IAAAA,QAAQ,EAAE,YAHN;AAIJC,IAAAA,IAAI,EAAE,IAJF;AAKJC,IAAAA,GAAG,EAAE,GALD;AAKM;AACVC,IAAAA,iBAAiB,EAAE;AANf,GAhBO;AAyBbE,EAAAA,UAAU,EAAE;AACVN,IAAAA,QAAQ,EAAEO,OAAO,CAACC,GAAR,CAAYC,OADZ;AAEVC,IAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,OAFZ;AAGVV,IAAAA,QAAQ,EAAEM,OAAO,CAACC,GAAR,CAAYI,OAHZ;AAIVC,IAAAA,IAAI,EAAEN,OAAO,CAACC,GAAR,CAAYM,OAJR;AAKVC,IAAAA,OAAO,EAAE;AALC;AAzBC,CAAf;eAkCelB,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config",
      "sourcesContent": [
        "require('dotenv').config(); \r\n\r\n\r\nconst config = {\r\n\r\n  // If using onine database\r\n  // development: {\r\n  //   use_env_variable: 'DATABASE_URL'\r\n  // },\r\n\r\n  development: {\r\n    user: 'postgres', // this is the db user credential\r\n    database: 'teamwork',\r\n    password: 'olajide4me',\r\n    port: 5433,\r\n    max: 100, // max number of clients in the pool\r\n    idleTimeoutMillis: 30000,\r\n  },\r\n\r\n  test: {\r\n    user: 'postgres', // this is the db user credential\r\n    database: 'teamwork_test',\r\n    password: 'olajide4me',\r\n    port: 5433,\r\n    max: 100, // max number of clients in the pool\r\n    idleTimeoutMillis: 30000,\r\n  },\r\n\r\n  production: {\r\n    database: process.env.DB_NAME,\r\n    username: process.env.DB_USER,\r\n    password: process.env.DB_PASS,\r\n    host: process.env.DB_HOST,\r\n    dialect: 'postgres'\r\n  }\r\n};\r\n\r\nexport default config;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573387822181
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\config\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\config\\\\config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config\\config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config\\config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire('dotenv').config();\n\nvar config = {\n  // If using onine database\n  // development: {\n  //   use_env_variable: 'DATABASE_URL'\n  // },\n  development: {\n    user: 'postgres',\n    // this is the db user credential\n    database: 'teamwork',\n    password: 'olajide4me',\n    port: 5433,\n    max: 100,\n    // max number of clients in the pool\n    idleTimeoutMillis: 30000\n  },\n  test: {\n    user: 'postgres',\n    // this is the db user credential\n    database: 'teamwork_test',\n    password: 'olajide4me',\n    port: 5433,\n    max: 100,\n    // max number of clients in the pool\n    idleTimeoutMillis: 30000\n  },\n  production: {\n    database: process.env.DB_NAME,\n    username: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    host: process.env.DB_HOST,\n    dialect: 'postgres'\n  }\n};\nvar _default = config;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZGV2ZWxvcG1lbnQiLCJ1c2VyIiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsInBvcnQiLCJtYXgiLCJpZGxlVGltZW91dE1pbGxpcyIsInRlc3QiLCJwcm9kdWN0aW9uIiwicHJvY2VzcyIsImVudiIsIkRCX05BTUUiLCJ1c2VybmFtZSIsIkRCX1VTRVIiLCJEQl9QQVNTIiwiaG9zdCIsIkRCX0hPU1QiLCJkaWFsZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUdBLElBQU1BLE1BQU0sR0FBRztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBRUFDLEVBQUFBLFdBQVcsRUFBRTtBQUNYQyxJQUFBQSxJQUFJLEVBQUUsVUFESztBQUNPO0FBQ2xCQyxJQUFBQSxRQUFRLEVBQUUsVUFGQztBQUdYQyxJQUFBQSxRQUFRLEVBQUUsWUFIQztBQUlYQyxJQUFBQSxJQUFJLEVBQUUsSUFKSztBQUtYQyxJQUFBQSxHQUFHLEVBQUUsR0FMTTtBQUtEO0FBQ1ZDLElBQUFBLGlCQUFpQixFQUFFO0FBTlIsR0FQQTtBQWdCYkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pOLElBQUFBLElBQUksRUFBRSxVQURGO0FBQ2M7QUFDbEJDLElBQUFBLFFBQVEsRUFBRSxlQUZOO0FBR0pDLElBQUFBLFFBQVEsRUFBRSxZQUhOO0FBSUpDLElBQUFBLElBQUksRUFBRSxJQUpGO0FBS0pDLElBQUFBLEdBQUcsRUFBRSxHQUxEO0FBS007QUFDVkMsSUFBQUEsaUJBQWlCLEVBQUU7QUFOZixHQWhCTztBQXlCYkUsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZOLElBQUFBLFFBQVEsRUFBRU8sT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BRFo7QUFFVkMsSUFBQUEsUUFBUSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsT0FGWjtBQUdWVixJQUFBQSxRQUFRLEVBQUVNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxPQUhaO0FBSVZDLElBQUFBLElBQUksRUFBRU4sT0FBTyxDQUFDQyxHQUFSLENBQVlNLE9BSlI7QUFLVkMsSUFBQUEsT0FBTyxFQUFFO0FBTEM7QUF6QkMsQ0FBZjtlQWtDZWxCLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxjb25maWciLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTsgXHJcblxyXG5cclxuY29uc3QgY29uZmlnID0ge1xyXG5cclxuICAvLyBJZiB1c2luZyBvbmluZSBkYXRhYmFzZVxyXG4gIC8vIGRldmVsb3BtZW50OiB7XHJcbiAgLy8gICB1c2VfZW52X3ZhcmlhYmxlOiAnREFUQUJBU0VfVVJMJ1xyXG4gIC8vIH0sXHJcblxyXG4gIGRldmVsb3BtZW50OiB7XHJcbiAgICB1c2VyOiAncG9zdGdyZXMnLCAvLyB0aGlzIGlzIHRoZSBkYiB1c2VyIGNyZWRlbnRpYWxcclxuICAgIGRhdGFiYXNlOiAndGVhbXdvcmsnLFxyXG4gICAgcGFzc3dvcmQ6ICdvbGFqaWRlNG1lJyxcclxuICAgIHBvcnQ6IDU0MzMsXHJcbiAgICBtYXg6IDEwMCwgLy8gbWF4IG51bWJlciBvZiBjbGllbnRzIGluIHRoZSBwb29sXHJcbiAgICBpZGxlVGltZW91dE1pbGxpczogMzAwMDAsXHJcbiAgfSxcclxuXHJcbiAgdGVzdDoge1xyXG4gICAgdXNlcjogJ3Bvc3RncmVzJywgLy8gdGhpcyBpcyB0aGUgZGIgdXNlciBjcmVkZW50aWFsXHJcbiAgICBkYXRhYmFzZTogJ3RlYW13b3JrX3Rlc3QnLFxyXG4gICAgcGFzc3dvcmQ6ICdvbGFqaWRlNG1lJyxcclxuICAgIHBvcnQ6IDU0MzMsXHJcbiAgICBtYXg6IDEwMCwgLy8gbWF4IG51bWJlciBvZiBjbGllbnRzIGluIHRoZSBwb29sXHJcbiAgICBpZGxlVGltZW91dE1pbGxpczogMzAwMDAsXHJcbiAgfSxcclxuXHJcbiAgcHJvZHVjdGlvbjoge1xyXG4gICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUsXHJcbiAgICB1c2VybmFtZTogcHJvY2Vzcy5lbnYuREJfVVNFUixcclxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTLFxyXG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCxcclxuICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcydcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25maWc7Il19",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "require",
        "config",
        "development",
        "user",
        "database",
        "password",
        "port",
        "max",
        "idleTimeoutMillis",
        "test",
        "production",
        "process",
        "env",
        "DB_NAME",
        "username",
        "DB_USER",
        "DB_PASS",
        "host",
        "DB_HOST",
        "dialect"
      ],
      "mappings": ";;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAGA,IAAMA,MAAM,GAAG;AAEb;AACA;AACA;AACA;AAEAC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,UADK;AACO;AAClBC,IAAAA,QAAQ,EAAE,UAFC;AAGXC,IAAAA,QAAQ,EAAE,YAHC;AAIXC,IAAAA,IAAI,EAAE,IAJK;AAKXC,IAAAA,GAAG,EAAE,GALM;AAKD;AACVC,IAAAA,iBAAiB,EAAE;AANR,GAPA;AAgBbC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAE,UADF;AACc;AAClBC,IAAAA,QAAQ,EAAE,eAFN;AAGJC,IAAAA,QAAQ,EAAE,YAHN;AAIJC,IAAAA,IAAI,EAAE,IAJF;AAKJC,IAAAA,GAAG,EAAE,GALD;AAKM;AACVC,IAAAA,iBAAiB,EAAE;AANf,GAhBO;AAyBbE,EAAAA,UAAU,EAAE;AACVN,IAAAA,QAAQ,EAAEO,OAAO,CAACC,GAAR,CAAYC,OADZ;AAEVC,IAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,OAFZ;AAGVV,IAAAA,QAAQ,EAAEM,OAAO,CAACC,GAAR,CAAYI,OAHZ;AAIVC,IAAAA,IAAI,EAAEN,OAAO,CAACC,GAAR,CAAYM,OAJR;AAKVC,IAAAA,OAAO,EAAE;AALC;AAzBC,CAAf;eAkCelB,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\config",
      "sourcesContent": [
        "require('dotenv').config(); \r\n\r\n\r\nconst config = {\r\n\r\n  // If using onine database\r\n  // development: {\r\n  //   use_env_variable: 'DATABASE_URL'\r\n  // },\r\n\r\n  development: {\r\n    user: 'postgres', // this is the db user credential\r\n    database: 'teamwork',\r\n    password: 'olajide4me',\r\n    port: 5433,\r\n    max: 100, // max number of clients in the pool\r\n    idleTimeoutMillis: 30000,\r\n  },\r\n\r\n  test: {\r\n    user: 'postgres', // this is the db user credential\r\n    database: 'teamwork_test',\r\n    password: 'olajide4me',\r\n    port: 5433,\r\n    max: 100, // max number of clients in the pool\r\n    idleTimeoutMillis: 30000,\r\n  },\r\n\r\n  production: {\r\n    database: process.env.DB_NAME,\r\n    username: process.env.DB_USER,\r\n    password: process.env.DB_PASS,\r\n    host: process.env.DB_HOST,\r\n    dialect: 'postgres'\r\n  }\r\n};\r\n\r\nexport default config;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573387822181
  }
}