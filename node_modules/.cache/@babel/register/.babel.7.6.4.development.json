{
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsend = _interopRequireDefault(require(\"jsend\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _tables = _interopRequireDefault(require(\"./models/tables\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // to resolve cross origin resource shearing (CORS) error add folowing to te response header \n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n  next();\n});\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _morgan[\"default\"])('combined'));\napp.use(_jsend[\"default\"].middleware);\n\n_tables[\"default\"].createEmployeeTable();\n\n_tables[\"default\"].createGifTable();\n\n_tables[\"default\"].createArticlesTable();\n\n_tables[\"default\"].createCommentTable();\n\n_tables[\"default\"].disconnect();\n\napp.use('/api/v1', _routes[\"default\"]);\napp.get('*', function (req, res) {\n  return res.jsend.success('Invana!!!');\n});\nvar port = parseInt(process.env.PORT, 10) || 4000;\napp.listen(port, function () {\n  return (0, _debug[\"default\"])('app:*')(\"Live at \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJhcHAiLCJ1c2UiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2V0SGVhZGVyIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJqc2VuZCIsIm1pZGRsZXdhcmUiLCJ0YWJsZSIsImNyZWF0ZUVtcGxveWVlVGFibGUiLCJjcmVhdGVHaWZUYWJsZSIsImNyZWF0ZUFydGljbGVzVGFibGUiLCJjcmVhdGVDb21tZW50VGFibGUiLCJkaXNjb25uZWN0IiwidjFSb3V0ZXIiLCJnZXQiLCJzdWNjZXNzIiwicG9ydCIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQUEsbUJBQU9DLE1BQVA7O0FBRUEsSUFBTUMsR0FBRyxHQUFHLDBCQUFaLEMsQ0FFQTs7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDeEJELEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDZCQUFkLEVBQTZDLEdBQTdDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDhCQUFkLEVBQThDLHdFQUE5QztBQUNBRixFQUFBQSxHQUFHLENBQUNFLFNBQUosQ0FBYyw4QkFBZCxFQUE4Qyx3Q0FBOUM7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBTEg7QUFPQUosR0FBRyxDQUFDQyxHQUFKLENBQVFLLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVFLLHVCQUFXRyxJQUFYLEVBQVI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVEsK0JBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsd0JBQU8sVUFBUCxDQUFSO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRUyxrQkFBTUMsVUFBZDs7QUFDQUMsbUJBQU1DLG1CQUFOOztBQUNBRCxtQkFBTUUsY0FBTjs7QUFDQUYsbUJBQU1HLG1CQUFOOztBQUNBSCxtQkFBTUksa0JBQU47O0FBRUFKLG1CQUFNSyxVQUFOOztBQUVBakIsR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBUixFQUFtQmlCLGtCQUFuQjtBQUVBbEIsR0FBRyxDQUFDbUIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDakIsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTyxLQUFKLENBQVVVLE9BQVYsQ0FBa0IsV0FBbEIsQ0FBZDtBQUFBLENBQWI7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQWIsRUFBbUIsRUFBbkIsQ0FBUixJQUFrQyxJQUEvQztBQUVBekIsR0FBRyxDQUFDMEIsTUFBSixDQUFXTCxJQUFYLEVBQWlCO0FBQUEsU0FBTSx1QkFBTSxPQUFOLG9CQUEwQkEsSUFBMUIsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQGJhYmVsL3BvbHlmaWxsJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSAnY29va2llLXBhcnNlcic7XG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBqc2VuZCBmcm9tICdqc2VuZCc7XG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHRhYmxlIGZyb20gJy4vbW9kZWxzL3RhYmxlcyc7XG5cbmltcG9ydCB2MVJvdXRlciBmcm9tICcuL3JvdXRlcyc7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyB0byByZXNvbHZlIGNyb3NzIG9yaWdpbiByZXNvdXJjZSBzaGVhcmluZyAoQ09SUykgZXJyb3IgYWRkIGZvbG93aW5nIHRvIHRlIHJlc3BvbnNlIGhlYWRlciBcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ09yaWdpbiwgWC1SZXF1ZXN0ZWQtV2l0aCwgQ29udGVudCwgQWNjZXB0LCBDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24nKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ0dFVCwgUE9TVCwgUFVULCBERUxFVEUsIFBBVENILCBPUFRJT05TJyk7XG4gICAgbmV4dCgpO1xuICB9KTtcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJykpO1xuYXBwLnVzZShqc2VuZC5taWRkbGV3YXJlKTtcbnRhYmxlLmNyZWF0ZUVtcGxveWVlVGFibGUoKTtcbnRhYmxlLmNyZWF0ZUdpZlRhYmxlKCk7XG50YWJsZS5jcmVhdGVBcnRpY2xlc1RhYmxlKCk7XG50YWJsZS5jcmVhdGVDb21tZW50VGFibGUoKTtcblxudGFibGUuZGlzY29ubmVjdCgpO1xuXG5hcHAudXNlKCcvYXBpL3YxJywgdjFSb3V0ZXIpO1xuXG5hcHAuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMuanNlbmQuc3VjY2VzcygnSW52YW5hISEhJykpO1xuXG5jb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCwgMTApIHx8IDQwMDA7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4gZGVidWcoJ2FwcDoqJykoYExpdmUgYXQgJHtwb3J0fWApKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "use",
        "req",
        "res",
        "next",
        "setHeader",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "jsend",
        "middleware",
        "table",
        "createEmployeeTable",
        "createGifTable",
        "createArticlesTable",
        "createCommentTable",
        "disconnect",
        "v1Router",
        "get",
        "success",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wEAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAD,EAAAA,IAAI;AACL,CALH;AAOAJ,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACC,GAAJ,CAAQK,uBAAWG,IAAX,EAAR;AACAT,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,wBAAO,UAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQS,kBAAMC,UAAd;;AACAC,mBAAMC,mBAAN;;AACAD,mBAAME,cAAN;;AACAF,mBAAMG,mBAAN;;AACAH,mBAAMI,kBAAN;;AAEAJ,mBAAMK,UAAN;;AAEAjB,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBiB,kBAAnB;AAEAlB,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,UAACjB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACO,KAAJ,CAAUU,OAAV,CAAkB,WAAlB,CAAd;AAAA,CAAb;AAEA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AAEAzB,GAAG,CAAC0B,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAM,uBAAM,OAAN,oBAA0BA,IAA1B,EAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "sourcesContent": [
        "import '@babel/polyfill';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport dotenv from 'dotenv';\nimport express from 'express';\nimport jsend from 'jsend';\nimport morgan from 'morgan';\nimport debug from 'debug';\nimport table from './models/tables';\n\nimport v1Router from './routes';\n\ndotenv.config();\n\nconst app = express();\n\n// to resolve cross origin resource shearing (CORS) error add folowing to te response header \napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    next();\n  });\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(morgan('combined'));\napp.use(jsend.middleware);\ntable.createEmployeeTable();\ntable.createGifTable();\ntable.createArticlesTable();\ntable.createCommentTable();\n\ntable.disconnect();\n\napp.use('/api/v1', v1Router);\n\napp.get('*', (req, res) => res.jsend.success('Invana!!!'));\n\nconst port = parseInt(process.env.PORT, 10) || 4000;\n\napp.listen(port, () => debug('app:*')(`Live at ${port}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572618923925
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _validator = _interopRequireDefault(require(\"../middlewares/validator\"));\n\nvar _authenticator = _interopRequireDefault(require(\"../middlewares/authenticator\"));\n\nvar _users = _interopRequireDefault(require(\"../controllers/users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//import inventory from '../controllers/inventory';\nvar router = _express[\"default\"].Router(); // auth\n\n\nrouter.post('/signup', _validator[\"default\"].auth, _users[\"default\"].signup);\nrouter.post('/login', _validator[\"default\"].auth, _users[\"default\"].login); // inventory\n// Create inventory\n//router.post('/inventory', authenticator, validator.inventory, inventory.create);\n// Get all inventory\n//router.get('/inventory', authenticator, inventory.findAll);\n// Get an inventory\n//router.get(\n//  '/inventory/:inventoryId', authenticator, validator.checkInventoryParams, inventory.findOne,\n//);\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwidmFsaWRhdG9yIiwiYXV0aCIsInVzZXJzIiwic2lnbnVwIiwibG9naW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7OztBQUNBO0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmLEMsQ0FFQTs7O0FBQ0FGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFNBQVosRUFBdUJDLHNCQUFVQyxJQUFqQyxFQUF1Q0Msa0JBQU1DLE1BQTdDO0FBQ0FQLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFFBQVosRUFBc0JDLHNCQUFVQyxJQUFoQyxFQUFzQ0Msa0JBQU1FLEtBQTVDLEUsQ0FFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O2VBRWVSLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0IHZhbGlkYXRvciBmcm9tICcuLi9taWRkbGV3YXJlcy92YWxpZGF0b3InO1xuaW1wb3J0IGF1dGhlbnRpY2F0b3IgZnJvbSAnLi4vbWlkZGxld2FyZXMvYXV0aGVudGljYXRvcic7XG5pbXBvcnQgdXNlcnMgZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlcnMnO1xuLy9pbXBvcnQgaW52ZW50b3J5IGZyb20gJy4uL2NvbnRyb2xsZXJzL2ludmVudG9yeSc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIGF1dGhcbnJvdXRlci5wb3N0KCcvc2lnbnVwJywgdmFsaWRhdG9yLmF1dGgsIHVzZXJzLnNpZ251cCk7XG5yb3V0ZXIucG9zdCgnL2xvZ2luJywgdmFsaWRhdG9yLmF1dGgsIHVzZXJzLmxvZ2luKTtcblxuLy8gaW52ZW50b3J5XG4vLyBDcmVhdGUgaW52ZW50b3J5XG4vL3JvdXRlci5wb3N0KCcvaW52ZW50b3J5JywgYXV0aGVudGljYXRvciwgdmFsaWRhdG9yLmludmVudG9yeSwgaW52ZW50b3J5LmNyZWF0ZSk7XG5cbi8vIEdldCBhbGwgaW52ZW50b3J5XG4vL3JvdXRlci5nZXQoJy9pbnZlbnRvcnknLCBhdXRoZW50aWNhdG9yLCBpbnZlbnRvcnkuZmluZEFsbCk7XG5cbi8vIEdldCBhbiBpbnZlbnRvcnlcbi8vcm91dGVyLmdldChcbi8vICAnL2ludmVudG9yeS86aW52ZW50b3J5SWQnLCBhdXRoZW50aWNhdG9yLCB2YWxpZGF0b3IuY2hlY2tJbnZlbnRvcnlQYXJhbXMsIGludmVudG9yeS5maW5kT25lLFxuLy8pO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "validator",
        "auth",
        "users",
        "signup",
        "login"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;AACA;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,sBAAUC,IAAjC,EAAuCC,kBAAMC,MAA7C;AACAP,MAAM,CAACG,IAAP,CAAY,QAAZ,EAAsBC,sBAAUC,IAAhC,EAAsCC,kBAAME,KAA5C,E,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;eAEeR,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\n\nimport validator from '../middlewares/validator';\nimport authenticator from '../middlewares/authenticator';\nimport users from '../controllers/users';\n//import inventory from '../controllers/inventory';\n\nconst router = express.Router();\n\n// auth\nrouter.post('/signup', validator.auth, users.signup);\nrouter.post('/login', validator.auth, users.login);\n\n// inventory\n// Create inventory\n//router.post('/inventory', authenticator, validator.inventory, inventory.create);\n\n// Get all inventory\n//router.get('/inventory', authenticator, inventory.findAll);\n\n// Get an inventory\n//router.get(\n//  '/inventory/:inventoryId', authenticator, validator.checkInventoryParams, inventory.findOne,\n//);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572541716084
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\validator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "validator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validationHelpers = _interopRequireDefault(require(\"../utilities/validationHelpers\"));\n\nvar _regexen = require(\"../utilities/regexen\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar checkForEmptyFields = _validationHelpers[\"default\"].checkForEmptyFields,\n    checkPatternedFields = _validationHelpers[\"default\"].checkPatternedFields;\nvar _default = {\n  auth: function auth(req, res, next) {\n    var errors = [];\n    var _req$body = req.body,\n        firstname = _req$body.firstname,\n        lastname = _req$body.lastname,\n        email = _req$body.email,\n        password = _req$body.password;\n\n    if (req.path.includes('signup')) {\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('First name', firstname)));\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Last name', lastname)));\n    }\n\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Email address', email, _regexen.emailRegex)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Password', password, _regexen.passwordRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  inventory: function inventory(req, res, next) {\n    var errors = [];\n    var _req$body2 = req.body,\n        category = _req$body2.category,\n        name = _req$body2.name,\n        description = _req$body2.description;\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Category', category)));\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Name', name)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Description', description, _regexen.descriptionRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  checkInventoryParams: function checkInventoryParams(req, res, next) {\n    var inventoryId = req.params.inventoryId;\n    var parsedNumber = parseInt(inventoryId, 10);\n    var isInter = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInter && isGreaterThanZero) return next();\n    return res.jsend.error('Inventory ID must be an integer greater than zero');\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJjaGVja0ZvckVtcHR5RmllbGRzIiwidmFsaWRhdGlvbkhlbHBlcnMiLCJjaGVja1BhdHRlcm5lZEZpZWxkcyIsImF1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyb3JzIiwiYm9keSIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInBhdGgiLCJpbmNsdWRlcyIsInB1c2giLCJlbWFpbFJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImxlbmd0aCIsImpzZW5kIiwiZXJyb3IiLCJtZXNzYWdlIiwiZGF0YSIsImludmVudG9yeSIsImNhdGVnb3J5IiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb25SZWdleCIsImNoZWNrSW52ZW50b3J5UGFyYW1zIiwiaW52ZW50b3J5SWQiLCJwYXJhbXMiLCJwYXJzZWROdW1iZXIiLCJwYXJzZUludCIsImlzSW50ZXIiLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJpc0dyZWF0ZXJUaGFuWmVybyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7SUFFUUEsbUIsR0FBOENDLDZCLENBQTlDRCxtQjtJQUFxQkUsb0IsR0FBeUJELDZCLENBQXpCQyxvQjtlQUVkO0FBQ2JDLEVBQUFBLElBQUksRUFBRSxjQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN4QixRQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUR3QixvQkFJcEJILEdBQUcsQ0FBQ0ksSUFKZ0I7QUFBQSxRQUd0QkMsU0FIc0IsYUFHdEJBLFNBSHNCO0FBQUEsUUFHWEMsUUFIVyxhQUdYQSxRQUhXO0FBQUEsUUFHREMsS0FIQyxhQUdEQSxLQUhDO0FBQUEsUUFHTUMsUUFITixhQUdNQSxRQUhOOztBQU14QixRQUFJUixHQUFHLENBQUNTLElBQUosQ0FBU0MsUUFBVCxDQUFrQixRQUFsQixDQUFKLEVBQWlDO0FBQy9CUCxNQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU1AsbUJBQW1CLENBQUMsWUFBRCxFQUFlUyxTQUFmLENBQTVCLEVBQU47QUFDQUYsTUFBQUEsTUFBTSxDQUFDUSxJQUFQLE9BQUFSLE1BQU0scUJBQVNQLG1CQUFtQixDQUFDLFdBQUQsRUFBY1UsUUFBZCxDQUE1QixFQUFOO0FBQ0Q7O0FBQ0RILElBQUFBLE1BQU0sQ0FBQ1EsSUFBUCxPQUFBUixNQUFNLHFCQUFTTCxvQkFBb0IsQ0FBQyxlQUFELEVBQWtCUyxLQUFsQixFQUF5QkssbUJBQXpCLENBQTdCLEVBQU47QUFDQVQsSUFBQUEsTUFBTSxDQUFDUSxJQUFQLE9BQUFSLE1BQU0scUJBQVNMLG9CQUFvQixDQUFDLFVBQUQsRUFBYVUsUUFBYixFQUF1Qkssc0JBQXZCLENBQTdCLEVBQU47O0FBRUEsUUFBSVYsTUFBTSxDQUFDVyxNQUFYLEVBQW1CO0FBQ2pCLGFBQU9iLEdBQUcsQ0FBQ2MsS0FBSixDQUFVQyxLQUFWLENBQWdCO0FBQ3JCQyxRQUFBQSxPQUFPLEVBQUUsNkJBRFk7QUFFckJDLFFBQUFBLElBQUksRUFBRWY7QUFGZSxPQUFoQixDQUFQO0FBSUQ7O0FBQ0QsV0FBT0QsSUFBSSxFQUFYO0FBQ0QsR0FyQlk7QUFzQmJpQixFQUFBQSxTQUFTLEVBQUUsbUJBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUM3QixRQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUQ2QixxQkFFV0gsR0FBRyxDQUFDSSxJQUZmO0FBQUEsUUFFckJnQixRQUZxQixjQUVyQkEsUUFGcUI7QUFBQSxRQUVYQyxJQUZXLGNBRVhBLElBRlc7QUFBQSxRQUVMQyxXQUZLLGNBRUxBLFdBRks7QUFJN0JuQixJQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU1AsbUJBQW1CLENBQUMsVUFBRCxFQUFhd0IsUUFBYixDQUE1QixFQUFOO0FBQ0FqQixJQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU1AsbUJBQW1CLENBQUMsTUFBRCxFQUFTeUIsSUFBVCxDQUE1QixFQUFOO0FBQ0FsQixJQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU0wsb0JBQW9CLENBQUMsYUFBRCxFQUFnQndCLFdBQWhCLEVBQTZCQyx5QkFBN0IsQ0FBN0IsRUFBTjs7QUFFQSxRQUFJcEIsTUFBTSxDQUFDVyxNQUFYLEVBQW1CO0FBQ2pCLGFBQU9iLEdBQUcsQ0FBQ2MsS0FBSixDQUFVQyxLQUFWLENBQWdCO0FBQ3JCQyxRQUFBQSxPQUFPLEVBQUUsNkJBRFk7QUFFckJDLFFBQUFBLElBQUksRUFBRWY7QUFGZSxPQUFoQixDQUFQO0FBSUQ7O0FBQ0QsV0FBT0QsSUFBSSxFQUFYO0FBQ0QsR0FyQ1k7QUFzQ2JzQixFQUFBQSxvQkFBb0IsRUFBRSw4QkFBQ3hCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQUEsUUFDdEJ1QixXQURzQixHQUNKekIsR0FESSxDQUNoQzBCLE1BRGdDLENBQ3RCRCxXQURzQjtBQUV4QyxRQUFNRSxZQUFZLEdBQUdDLFFBQVEsQ0FBQ0gsV0FBRCxFQUFjLEVBQWQsQ0FBN0I7QUFDQSxRQUFNSSxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkosWUFBakIsQ0FBaEI7QUFDQSxRQUFNSyxpQkFBaUIsR0FBR0wsWUFBWSxHQUFHLENBQXpDO0FBRUEsUUFBSUUsT0FBTyxJQUFJRyxpQkFBZixFQUFrQyxPQUFPOUIsSUFBSSxFQUFYO0FBQ2xDLFdBQU9ELEdBQUcsQ0FBQ2MsS0FBSixDQUFVQyxLQUFWLENBQWdCLG1EQUFoQixDQUFQO0FBQ0Q7QUE5Q1ksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXG1pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRpb25IZWxwZXJzIGZyb20gJy4uL3V0aWxpdGllcy92YWxpZGF0aW9uSGVscGVycyc7XG5pbXBvcnQgeyBlbWFpbFJlZ2V4LCBwYXNzd29yZFJlZ2V4LCBkZXNjcmlwdGlvblJlZ2V4IH0gZnJvbSAnLi4vdXRpbGl0aWVzL3JlZ2V4ZW4nO1xuXG5jb25zdCB7IGNoZWNrRm9yRW1wdHlGaWVsZHMsIGNoZWNrUGF0dGVybmVkRmllbGRzIH0gPSB2YWxpZGF0aW9uSGVscGVycztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhdXRoOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICBjb25zdCB7XG4gICAgICBmaXJzdG5hbWUsIGxhc3RuYW1lLCBlbWFpbCwgcGFzc3dvcmQsXG4gICAgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKHJlcS5wYXRoLmluY2x1ZGVzKCdzaWdudXAnKSkge1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnRmlyc3QgbmFtZScsIGZpcnN0bmFtZSkpO1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnTGFzdCBuYW1lJywgbGFzdG5hbWUpKTtcbiAgICB9XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tQYXR0ZXJuZWRGaWVsZHMoJ0VtYWlsIGFkZHJlc3MnLCBlbWFpbCwgZW1haWxSZWdleCkpO1xuICAgIGVycm9ycy5wdXNoKC4uLmNoZWNrUGF0dGVybmVkRmllbGRzKCdQYXNzd29yZCcsIHBhc3N3b3JkLCBwYXNzd29yZFJlZ2V4KSk7XG5cbiAgICBpZiAoZXJyb3JzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7XG4gICAgICAgIG1lc3NhZ2U6ICdZb3VyIHJlcXVlc3QgY29udGFpbiBlcnJvcnMnLFxuICAgICAgICBkYXRhOiBlcnJvcnMsXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfSxcbiAgaW52ZW50b3J5OiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICBjb25zdCB7IGNhdGVnb3J5LCBuYW1lLCBkZXNjcmlwdGlvbiB9ID0gcmVxLmJvZHk7XG5cbiAgICBlcnJvcnMucHVzaCguLi5jaGVja0ZvckVtcHR5RmllbGRzKCdDYXRlZ29yeScsIGNhdGVnb3J5KSk7XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnTmFtZScsIG5hbWUpKTtcbiAgICBlcnJvcnMucHVzaCguLi5jaGVja1BhdHRlcm5lZEZpZWxkcygnRGVzY3JpcHRpb24nLCBkZXNjcmlwdGlvbiwgZGVzY3JpcHRpb25SZWdleCkpO1xuXG4gICAgaWYgKGVycm9ycy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiByZXMuanNlbmQuZXJyb3Ioe1xuICAgICAgICBtZXNzYWdlOiAnWW91ciByZXF1ZXN0IGNvbnRhaW4gZXJyb3JzJyxcbiAgICAgICAgZGF0YTogZXJyb3JzLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG4gIH0sXG4gIGNoZWNrSW52ZW50b3J5UGFyYW1zOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB7IHBhcmFtczogeyBpbnZlbnRvcnlJZCB9IH0gPSByZXE7XG4gICAgY29uc3QgcGFyc2VkTnVtYmVyID0gcGFyc2VJbnQoaW52ZW50b3J5SWQsIDEwKTtcbiAgICBjb25zdCBpc0ludGVyID0gTnVtYmVyLmlzSW50ZWdlcihwYXJzZWROdW1iZXIpO1xuICAgIGNvbnN0IGlzR3JlYXRlclRoYW5aZXJvID0gcGFyc2VkTnVtYmVyID4gMDtcblxuICAgIGlmIChpc0ludGVyICYmIGlzR3JlYXRlclRoYW5aZXJvKSByZXR1cm4gbmV4dCgpO1xuICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ0ludmVudG9yeSBJRCBtdXN0IGJlIGFuIGludGVnZXIgZ3JlYXRlciB0aGFuIHplcm8nKTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "validator.js"
      ],
      "names": [
        "checkForEmptyFields",
        "validationHelpers",
        "checkPatternedFields",
        "auth",
        "req",
        "res",
        "next",
        "errors",
        "body",
        "firstname",
        "lastname",
        "email",
        "password",
        "path",
        "includes",
        "push",
        "emailRegex",
        "passwordRegex",
        "length",
        "jsend",
        "error",
        "message",
        "data",
        "inventory",
        "category",
        "name",
        "description",
        "descriptionRegex",
        "checkInventoryParams",
        "inventoryId",
        "params",
        "parsedNumber",
        "parseInt",
        "isInter",
        "Number",
        "isInteger",
        "isGreaterThanZero"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import validationHelpers from '../utilities/validationHelpers';\nimport { emailRegex, passwordRegex, descriptionRegex } from '../utilities/regexen';\n\nconst { checkForEmptyFields, checkPatternedFields } = validationHelpers;\n\nexport default {\n  auth: (req, res, next) => {\n    const errors = [];\n    const {\n      firstname, lastname, email, password,\n    } = req.body;\n\n    if (req.path.includes('signup')) {\n      errors.push(...checkForEmptyFields('First name', firstname));\n      errors.push(...checkForEmptyFields('Last name', lastname));\n    }\n    errors.push(...checkPatternedFields('Email address', email, emailRegex));\n    errors.push(...checkPatternedFields('Password', password, passwordRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  inventory: (req, res, next) => {\n    const errors = [];\n    const { category, name, description } = req.body;\n\n    errors.push(...checkForEmptyFields('Category', category));\n    errors.push(...checkForEmptyFields('Name', name));\n    errors.push(...checkPatternedFields('Description', description, descriptionRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  checkInventoryParams: (req, res, next) => {\n    const { params: { inventoryId } } = req;\n    const parsedNumber = parseInt(inventoryId, 10);\n    const isInter = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInter && isGreaterThanZero) return next();\n    return res.jsend.error('Inventory ID must be an integer greater than zero');\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362053
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\validationHelpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "validationHelpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  checkForEmptyFields: function checkForEmptyFields(field, value) {\n    if (!value || !value.trim()) return [\"\".concat(field, \" is required\")];\n    return [];\n  },\n  checkPatternedFields: function checkPatternedFields(field, value, regex) {\n    if (!regex.test(value)) return [\"\".concat(field, \" is invalid\")];\n    return [];\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb25IZWxwZXJzLmpzIl0sIm5hbWVzIjpbImNoZWNrRm9yRW1wdHlGaWVsZHMiLCJmaWVsZCIsInZhbHVlIiwidHJpbSIsImNoZWNrUGF0dGVybmVkRmllbGRzIiwicmVnZXgiLCJ0ZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxtQkFBbUIsRUFBRSw2QkFBQ0MsS0FBRCxFQUFRQyxLQUFSLEVBQWtCO0FBQ3JDLFFBQUksQ0FBQ0EsS0FBRCxJQUFVLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixFQUFmLEVBQTZCLE9BQU8sV0FBSUYsS0FBSixrQkFBUDtBQUM3QixXQUFPLEVBQVA7QUFDRCxHQUpZO0FBTWJHLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDSCxLQUFELEVBQVFDLEtBQVIsRUFBZUcsS0FBZixFQUF5QjtBQUM3QyxRQUFJLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixDQUFXSixLQUFYLENBQUwsRUFBd0IsT0FBTyxXQUFJRCxLQUFKLGlCQUFQO0FBQ3hCLFdBQU8sRUFBUDtBQUNEO0FBVFksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXHV0aWxpdGllcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgY2hlY2tGb3JFbXB0eUZpZWxkczogKGZpZWxkLCB2YWx1ZSkgPT4ge1xuICAgIGlmICghdmFsdWUgfHwgIXZhbHVlLnRyaW0oKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgcmVxdWlyZWRgXTtcbiAgICByZXR1cm4gW107XG4gIH0sXG5cbiAgY2hlY2tQYXR0ZXJuZWRGaWVsZHM6IChmaWVsZCwgdmFsdWUsIHJlZ2V4KSA9PiB7XG4gICAgaWYgKCFyZWdleC50ZXN0KHZhbHVlKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgaW52YWxpZGBdO1xuICAgIHJldHVybiBbXTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "validationHelpers.js"
      ],
      "names": [
        "checkForEmptyFields",
        "field",
        "value",
        "trim",
        "checkPatternedFields",
        "regex",
        "test"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,mBAAmB,EAAE,6BAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,QAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAAN,EAAf,EAA6B,OAAO,WAAIF,KAAJ,kBAAP;AAC7B,WAAO,EAAP;AACD,GAJY;AAMbG,EAAAA,oBAAoB,EAAE,8BAACH,KAAD,EAAQC,KAAR,EAAeG,KAAf,EAAyB;AAC7C,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWJ,KAAX,CAAL,EAAwB,OAAO,WAAID,KAAJ,iBAAP;AACxB,WAAO,EAAP;AACD;AATY,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export default {\n  checkForEmptyFields: (field, value) => {\n    if (!value || !value.trim()) return [`${field} is required`];\n    return [];\n  },\n\n  checkPatternedFields: (field, value, regex) => {\n    if (!regex.test(value)) return [`${field} is invalid`];\n    return [];\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362075
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\regexen.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "regexen.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.descriptionRegex = exports.passwordRegex = exports.numberRegex = exports.emailRegex = void 0;\nvar emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexports.emailRegex = emailRegex;\nvar numberRegex = /^\\d$/;\nexports.numberRegex = numberRegex;\nvar passwordRegex = /^.{6,}$/;\nexports.passwordRegex = passwordRegex;\nvar descriptionRegex = /[a-zA-Z .]{20,}/;\nexports.descriptionRegex = descriptionRegex;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2V4ZW4uanMiXSwibmFtZXMiOlsiZW1haWxSZWdleCIsIm51bWJlclJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImRlc2NyaXB0aW9uUmVnZXgiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLFVBQVUsR0FBRywyREFBbkI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHLE1BQXBCOztBQUNBLElBQU1DLGFBQWEsR0FBRyxTQUF0Qjs7QUFDQSxJQUFNQyxnQkFBZ0IsR0FBRyxpQkFBekIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFx1dGlsaXRpZXMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1haWxSZWdleCA9IC9eKFthLXpBLVowLTlfLi1dKStAKChbYS16QS1aMC05LV0pK1xcLikrKFthLXpBLVowLTldezN9KSskLztcbmV4cG9ydCBjb25zdCBudW1iZXJSZWdleCA9IC9eXFxkJC87XG5leHBvcnQgY29uc3QgcGFzc3dvcmRSZWdleCA9IC9eLns2LH0kLztcbmV4cG9ydCBjb25zdCBkZXNjcmlwdGlvblJlZ2V4ID0gL1thLXpBLVogLl17MjAsfS87XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "regexen.js"
      ],
      "names": [
        "emailRegex",
        "numberRegex",
        "passwordRegex",
        "descriptionRegex"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,UAAU,GAAG,2DAAnB;;AACA,IAAMC,WAAW,GAAG,MAApB;;AACA,IAAMC,aAAa,GAAG,SAAtB;;AACA,IAAMC,gBAAgB,GAAG,iBAAzB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export const emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexport const numberRegex = /^\\d$/;\nexport const passwordRegex = /^.{6,}$/;\nexport const descriptionRegex = /[a-zA-Z .]{20,}/;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362072
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\authenticator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "authenticator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default(req, res, next) {\n  var token = req.cookies.token;\n  if (!token) return res.jsend.error('Unauthenticated!');\n\n  try {\n    var user = _jsonwebtoken[\"default\"].decode(token, process.env.SECRET);\n\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error\n    });\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0b3IuanMiXSwibmFtZXMiOlsicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiY29va2llcyIsImpzZW5kIiwiZXJyb3IiLCJ1c2VyIiwiand0IiwiZGVjb2RlIiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsIm1lc3NhZ2UiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFFZSxrQkFBQ0EsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFBQSxNQUN6QkMsS0FEeUIsR0FDZkgsR0FBRyxDQUFDSSxPQURXLENBQ3pCRCxLQUR5QjtBQUVqQyxNQUFJLENBQUNBLEtBQUwsRUFBWSxPQUFPRixHQUFHLENBQUNJLEtBQUosQ0FBVUMsS0FBVixDQUFnQixrQkFBaEIsQ0FBUDs7QUFFWixNQUFJO0FBQ0YsUUFBTUMsSUFBSSxHQUFHQyx5QkFBSUMsTUFBSixDQUFXTixLQUFYLEVBQWtCTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FBYjs7QUFDQVosSUFBQUEsR0FBRyxDQUFDTyxJQUFKLEdBQVdBLElBQVg7QUFDQSxXQUFPTCxJQUFJLEVBQVg7QUFDRCxHQUpELENBSUUsT0FBT0ksS0FBUCxFQUFjO0FBQ2QsV0FBT0wsR0FBRyxDQUFDSSxLQUFKLENBQVVDLEtBQVYsQ0FBZ0I7QUFDckJPLE1BQUFBLE9BQU8sRUFBRSx1QkFEWTtBQUVyQkMsTUFBQUEsSUFBSSxFQUFFUjtBQUZlLEtBQWhCLENBQVA7QUFJRDtBQUNGLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtaWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuZXhwb3J0IGRlZmF1bHQgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHsgdG9rZW4gfSA9IHJlcS5jb29raWVzO1xuICBpZiAoIXRva2VuKSByZXR1cm4gcmVzLmpzZW5kLmVycm9yKCdVbmF1dGhlbnRpY2F0ZWQhJyk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gand0LmRlY29kZSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICByZXEudXNlciA9IHVzZXI7XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKHtcbiAgICAgIG1lc3NhZ2U6ICdhdXRoZW50aWNhdGlvbiBmYWlsZWQnLFxuICAgICAgZGF0YTogZXJyb3IsXG4gICAgfSk7XG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authenticator.js"
      ],
      "names": [
        "req",
        "res",
        "next",
        "token",
        "cookies",
        "jsend",
        "error",
        "user",
        "jwt",
        "decode",
        "process",
        "env",
        "SECRET",
        "message",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAEe,kBAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACzBC,KADyB,GACfH,GAAG,CAACI,OADW,CACzBD,KADyB;AAEjC,MAAI,CAACA,KAAL,EAAY,OAAOF,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB,kBAAhB,CAAP;;AAEZ,MAAI;AACF,QAAMC,IAAI,GAAGC,yBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAAb;;AACAZ,IAAAA,GAAG,CAACO,IAAJ,GAAWA,IAAX;AACA,WAAOL,IAAI,EAAX;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACd,WAAOL,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB;AACrBO,MAAAA,OAAO,EAAE,uBADY;AAErBC,MAAAA,IAAI,EAAER;AAFe,KAAhB,CAAP;AAID;AACF,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\n\nexport default (req, res, next) => {\n  const { token } = req.cookies;\n  if (!token) return res.jsend.error('Unauthenticated!');\n\n  try {\n    const user = jwt.decode(token, process.env.SECRET);\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error,\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362050
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, email, firstName, lastName, password;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // check for existence\n              _req$body = req.body, email = _req$body.email, firstName = _req$body.firstName, lastName = _req$body.lastName, password = _req$body.password;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(error, results) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.t0 = _dbconnect[\"default\"];\n                            _context.t1 = email;\n                            _context.t2 = firstName;\n                            _context.t3 = lastName;\n                            _context.next = 7;\n                            return _bcrypt[\"default\"].hash(password, 10);\n\n                          case 7:\n                            _context.t4 = _context.sent;\n                            _context.t5 = [_context.t1, _context.t2, _context.t3, _context.t4];\n\n                            _context.t6 = function (err, result) {\n                              // signin jwt and wrap in a cookie\n                              var token = _jsonwebtoken[\"default\"].sign({\n                                userId: result.rows[0].id\n                              }, process.env.SECRET);\n\n                              res.cookie('userid', result.rows[0].id, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              res.cookie('token', token, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              return res.jsend.success({\n                                user_id: result.rows[0].id,\n                                is_admin: result.rows[0].is_admin,\n                                Token: token\n                              });\n                            };\n\n                            _context.t0.query.call(_context.t0, 'INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', _context.t5, _context.t6);\n\n                          case 11:\n                            if (!(results.rows[0] !== undefined)) {\n                              _context.next = 13;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                          case 13:\n                            return _context.abrupt(\"return\", null);\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signup(_x, _x2) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  // user login logic\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, email, password;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!error) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context3.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context3.sent;\n\n                          if (match) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context3.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function login(_x5, _x6) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInNpZ251cCIsInJlcSIsInJlcyIsImJvZHkiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGFzc3dvcmQiLCJwb29sIiwicXVlcnkiLCJlcnJvciIsInJlc3VsdHMiLCJyb3dzIiwidW5kZWZpbmVkIiwiYmNyeXB0IiwiaGFzaCIsImVyciIsInJlc3VsdCIsInRva2VuIiwiand0Iiwic2lnbiIsInVzZXJJZCIsImlkIiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsImNvb2tpZSIsImV4cGlyZXMiLCJEYXRlIiwibm93IiwiaHR0cE9ubHkiLCJqc2VuZCIsInN1Y2Nlc3MiLCJ1c2VyX2lkIiwiaXNfYWRtaW4iLCJUb2tlbiIsIm9uIiwibG9naW4iLCJjb21wYXJlIiwibWF0Y2giLCJtZXNzYWdlIiwiaXNBZG1pbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztlQUVlO0FBQ2JBLEVBQUFBLE1BQU07QUFBQTtBQUFBO0FBQUEsNEJBQUUsa0JBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ047QUFETSwwQkFJRkQsR0FBRyxDQUFDRSxJQUpGLEVBR0pDLEtBSEksYUFHSkEsS0FISSxFQUdHQyxTQUhILGFBR0dBLFNBSEgsRUFHY0MsUUFIZCxhQUdjQSxRQUhkLEVBR3dCQyxRQUh4QixhQUd3QkEsUUFIeEI7O0FBS04sa0JBQUk7QUFDRkMsc0NBQUtDLEtBQUwsQ0FBVyw2Q0FBWCxFQUEwRCxDQUFDTCxLQUFELENBQTFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQ0FBbUUsaUJBQU9NLEtBQVAsRUFBY0MsT0FBZDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0NBRTdEQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiLE1BQW9CQyxTQUZ5QztBQUFBO0FBQUE7QUFBQTs7QUFBQSwwQ0FHL0RMLHFCQUgrRDtBQUFBLDBD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QVo2RSw0REFhdEU1QixHQUFHLENBQUM2QixLQUFKLENBQVVDLE9BQVYsQ0FBa0I7QUFDdkJDLDRCQUFBQSxPQUFPLEVBQUV0QixPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiLEVBQWdCVSxFQURGO0FBQ01tQiw0QkFBQUEsT0FBTyxFQUFFOUIsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYixFQUFnQnNCLFFBRC9CO0FBQ3lDQyw0QkFBQUEsS0FBSyxFQUFFakI7QUFEaEQsMkJBQWxCLENBYnNFOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUEvRTs7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFGSyxDQW1CTDs7O0FBQ0FWLG9DQUFLNEIsRUFBTCxDQUFRLFFBQVIsRUFBa0IsWUFBTTtBQUN0Qix1Q0FBTSxXQUFOLEVBQW1CLHdCQUFuQjtBQUNELGVBRkQ7O0FBcEJLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQUY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFoQ1EsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0JztcbmltcG9ydCBwb29sIGZyb20gJy4uL2RhdGFiYXNlL2RiY29ubmVjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2lnbnVwOiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICAvLyBjaGVjayBmb3IgZXhpc3RlbmNlXG4gICAgY29uc3Qge1xuICAgICAgZW1haWwsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIHBhc3N3b3JkLFxuICAgIH0gPSByZXEuYm9keTtcbiAgICB0cnkge1xuICAgICAgcG9vbC5xdWVyeSgnU0VMRUNUIGVtYWlsIEZST00gZW1wbG95ZWUgV0hFUkUgZW1haWwgPSAkMScsIFtlbWFpbF0sIGFzeW5jIChlcnJvciwgcmVzdWx0cykgPT4ge1xuICAgICAgICAvLyB1c2VyIGRvZXMgbm90IGV4aXN0XG4gICAgICAgIGlmIChyZXN1bHRzLnJvd3NbMF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHBvb2wucXVlcnkoJ0lOU0VSVCBJTlRPIHVzZXJzIChlbWFpbCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgcGFzc3dvcmQpIFZBTFVFUyAoJDEsICQyLCAkMywgJDQpIFJFVFVSTklORyBpZCwgaXNfYWRtaW4nLCBbZW1haWwsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCAxMCldLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgIC8vIHNpZ25pbiBqd3QgYW5kIHdyYXAgaW4gYSBjb29raWVcbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oeyB1c2VySWQ6IHJlc3VsdC5yb3dzWzBdLmlkIH0sIHByb2Nlc3MuZW52LlNFQ1JFVCk7XG4gICAgICAgICAgICByZXMuY29va2llKCd1c2VyaWQnLCByZXN1bHQucm93c1swXS5pZCwgeyBleHBpcmVzOiBuZXcgRGF0ZShEYXRlLm5vdygpICsgMzYwMDAwMCksIGh0dHBPbmx5OiB0cnVlIH0pO1xuICAgICAgICAgICAgcmVzLmNvb2tpZSgndG9rZW4nLCB0b2tlbiwgeyBleHBpcmVzOiBuZXcgRGF0ZShEYXRlLm5vdygpICsgMzYwMDAwMCksIGh0dHBPbmx5OiB0cnVlIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5zdWNjZXNzKHtcbiAgICAgICAgICAgICAgdXNlcl9pZDogcmVzdWx0LnJvd3NbMF0uaWQsXG4gICAgICAgICAgICAgIGlzX2FkbWluOiByZXN1bHQucm93c1swXS5pc19hZG1pbixcbiAgICAgICAgICAgICAgVG9rZW46IHRva2VuLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc3VsdHMucm93c1swXSAhPT0gdW5kZWZpbmVkKSByZXR1cm4gcmVzLmpzZW5kLmVycm9yKCdFbWFpbCBhbHJlYWR5IGV4aXN0cycpOyAvLyBlbWFpbCBleGlzdHNcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikgeyBkZWJ1ZygnYXBwOionKShlcnJvcik7IH1cbiAgICAvLyBkaXNjb25uZWN0IGNsaWVudCBhZnRlciBvcGVyYXRpb25cbiAgICBwb29sLm9uKCdyZW1vdmUnLCAoKSA9PiB7XG4gICAgICBkZWJ1ZygnYXBwOmxvZ2luJykoJ2NsaWVudCByZW1vdmVkIEBzaWdudXAnKTtcbiAgICB9KTtcbiAgfSxcbiAgLy8gdXNlciBsb2dpbiBsb2dpY1xuICBsb2dpbjogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xuICAgIHBvb2wucXVlcnkoJ1NFTEVDVCBpZCwgZW1haWwsIHBhc3N3b3JkIEZST00gdXNlcnMgV0hFUkUgZW1haWwgPSAkMSAnLCBbZW1haWxdLCBhc3luYyAoZXJyb3IsIHJlc3VsdHMpID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHRzLnJvd3NbMF0gPT09IHVuZGVmaW5lZCkgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignTG9naW4gZmFpbGVkLCBjaGVjayB5b3VyIGlucHV0cycpO1xuICAgICAgY29uc3QgbWF0Y2ggPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgcmVzdWx0cy5yb3dzWzBdLnBhc3N3b3JkKTtcbiAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7IG1lc3NhZ2U6ICdMb2dpbiBmYWlsZWQsIGNoZWNrIHlvdXIgcGFzc3dvcmQnIH0pO1xuICAgICAgfVxuICAgICAgLy8gc2lnbiBqd3QgYW5kIHdyYXAgaW4gYSBjb29raWVcbiAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oeyB1c2VySWQ6IHJlc3VsdHMucm93c1swXS5pZCB9LCBwcm9jZXNzLmVudi5TRUNSRVQpO1xuICAgICAgcmVzLmNvb2tpZSgndXNlcmlkJywgcmVzdWx0cy5yb3dzWzBdLmlkLCB7IGV4cGlyZXM6IG5ldyBEYXRlKERhdGUubm93KCkgKyAzNjAwMDAwKSwgaHR0cE9ubHk6IHRydWUgfSk7XG4gICAgICByZXMuY29va2llKCd0b2tlbicsIHRva2VuLCB7IGV4cGlyZXM6IG5ldyBEYXRlKERhdGUubm93KCkgKyAzNjAwMDAwKSwgaHR0cE9ubHk6IHRydWUgfSk7XG4gICAgICByZXR1cm4gcmVzLmpzZW5kLnN1Y2Nlc3Moe1xuICAgICAgICB1c2VyX2lkOiByZXN1bHRzLnJvd3NbMF0uaWQsIGlzQWRtaW46IHJlc3VsdHMucm93c1swXS5pc19hZG1pbiwgVG9rZW46IHRva2VuLFxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy8gZGlzY29ubmVjdCBjbGllbnQgYWZ0ZXIgb3BlcmF0aW9uXG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgZGVidWcoJ2FwcDpsb2dpbicpKCdjbGllbnQgcmVtb3ZlZCBAc2lnbmluJyk7XG4gICAgfSk7XG4gIH0sXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "signup",
        "req",
        "res",
        "body",
        "email",
        "firstName",
        "lastName",
        "password",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "bcrypt",
        "hash",
        "err",
        "result",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "jsend",
        "success",
        "user_id",
        "is_admin",
        "Token",
        "on",
        "login",
        "compare",
        "match",
        "message",
        "isAdmin"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  signup: async (req, res) => {\n    // check for existence\n    const {\n      email, firstName, lastName, password,\n    } = req.body;\n    try {\n      pool.query('SELECT email FROM employee WHERE email = $1', [email], async (error, results) => {\n        // user does not exist\n        if (results.rows[0] === undefined) {\n          pool.query('INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', [email, firstName, lastName, await bcrypt.hash(password, 10)], (err, result) => {\n            // signin jwt and wrap in a cookie\n            const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n            res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            return res.jsend.success({\n              user_id: result.rows[0].id,\n              is_admin: result.rows[0].is_admin,\n              Token: token,\n            });\n          });\n        }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n        return null;\n      });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  login: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572541562566
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Users = _interopRequireDefault(require(\"./Users\"));\n\nvar _Inventory = _interopRequireDefault(require(\"./Inventory\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  Users: _Users[\"default\"],\n  Inventory: _Inventory[\"default\"]\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlVzZXJzIiwiSW52ZW50b3J5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUFFQSxFQUFBQSxLQUFLLEVBQUxBLGlCQUFGO0FBQVNDLEVBQUFBLFNBQVMsRUFBVEE7QUFBVCxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXJzIGZyb20gJy4vVXNlcnMnO1xuaW1wb3J0IEludmVudG9yeSBmcm9tICcuL0ludmVudG9yeSc7XG5cbmV4cG9ydCBkZWZhdWx0IHsgVXNlcnMsIEludmVudG9yeSB9O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Users",
        "Inventory"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AAAEA,EAAAA,KAAK,EAALA,iBAAF;AAASC,EAAAA,SAAS,EAATA;AAAT,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "import Users from './Users';\nimport Inventory from './Inventory';\n\nexport default { Users, Inventory };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362057
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\Users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\Users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\Users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\Users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "Users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar Users = {\n  create: function create(user) {\n    return Users.list.push(user);\n  },\n  list: []\n};\nvar _default = Users;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJzIiwiY3JlYXRlIiwidXNlciIsImxpc3QiLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsTUFBTSxFQUFFLGdCQUFDQyxJQUFEO0FBQUEsV0FBVUYsS0FBSyxDQUFDRyxJQUFOLENBQVdDLElBQVgsQ0FBZ0JGLElBQWhCLENBQVY7QUFBQSxHQURJO0FBRVpDLEVBQUFBLElBQUksRUFBRTtBQUZNLENBQWQ7ZUFLZUgsSyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVzZXJzID0ge1xuICBjcmVhdGU6ICh1c2VyKSA9PiBVc2Vycy5saXN0LnB1c2godXNlciksXG4gIGxpc3Q6IFtdLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Users.js"
      ],
      "names": [
        "Users",
        "create",
        "user",
        "list",
        "push"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE,gBAACC,IAAD;AAAA,WAAUF,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBF,IAAhB,CAAV;AAAA,GADI;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAd;eAKeH,K",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "const Users = {\n  create: (user) => Users.list.push(user),\n  list: [],\n};\n\nexport default Users;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362064
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\Inventory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\Inventory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\Inventory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\Inventory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "Inventory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar Inventory = {\n  create: function create(inventory) {\n    return Inventory.list.push(inventory);\n  },\n  findAll: function findAll(userId) {\n    return Inventory.list.filter(function (inventory) {\n      return inventory.userId === userId;\n    });\n  },\n  findOne: function findOne(inventoryId) {\n    return Inventory.list.find(function (inventory) {\n      return inventory.id === inventoryId;\n    });\n  },\n  list: []\n};\nvar _default = Inventory;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkludmVudG9yeS5qcyJdLCJuYW1lcyI6WyJJbnZlbnRvcnkiLCJjcmVhdGUiLCJpbnZlbnRvcnkiLCJsaXN0IiwicHVzaCIsImZpbmRBbGwiLCJ1c2VySWQiLCJmaWx0ZXIiLCJmaW5kT25lIiwiaW52ZW50b3J5SWQiLCJmaW5kIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsTUFBTSxFQUFFLGdCQUFDQyxTQUFEO0FBQUEsV0FBZUYsU0FBUyxDQUFDRyxJQUFWLENBQWVDLElBQWYsQ0FBb0JGLFNBQXBCLENBQWY7QUFBQSxHQURRO0FBRWhCRyxFQUFBQSxPQUFPLEVBQUUsaUJBQUNDLE1BQUQ7QUFBQSxXQUFZTixTQUFTLENBQUNHLElBQVYsQ0FBZUksTUFBZixDQUFzQixVQUFDTCxTQUFEO0FBQUEsYUFBZUEsU0FBUyxDQUFDSSxNQUFWLEtBQXFCQSxNQUFwQztBQUFBLEtBQXRCLENBQVo7QUFBQSxHQUZPO0FBR2hCRSxFQUFBQSxPQUFPLEVBQUUsaUJBQUNDLFdBQUQ7QUFBQSxXQUFpQlQsU0FBUyxDQUFDRyxJQUFWLENBQWVPLElBQWYsQ0FBb0IsVUFBQ1IsU0FBRDtBQUFBLGFBQWVBLFNBQVMsQ0FBQ1MsRUFBVixLQUFpQkYsV0FBaEM7QUFBQSxLQUFwQixDQUFqQjtBQUFBLEdBSE87QUFJaEJOLEVBQUFBLElBQUksRUFBRTtBQUpVLENBQWxCO2VBT2VILFMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBJbnZlbnRvcnkgPSB7XG4gIGNyZWF0ZTogKGludmVudG9yeSkgPT4gSW52ZW50b3J5Lmxpc3QucHVzaChpbnZlbnRvcnkpLFxuICBmaW5kQWxsOiAodXNlcklkKSA9PiBJbnZlbnRvcnkubGlzdC5maWx0ZXIoKGludmVudG9yeSkgPT4gaW52ZW50b3J5LnVzZXJJZCA9PT0gdXNlcklkKSxcbiAgZmluZE9uZTogKGludmVudG9yeUlkKSA9PiBJbnZlbnRvcnkubGlzdC5maW5kKChpbnZlbnRvcnkpID0+IGludmVudG9yeS5pZCA9PT0gaW52ZW50b3J5SWQpLFxuICBsaXN0OiBbXSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEludmVudG9yeTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Inventory.js"
      ],
      "names": [
        "Inventory",
        "create",
        "inventory",
        "list",
        "push",
        "findAll",
        "userId",
        "filter",
        "findOne",
        "inventoryId",
        "find",
        "id"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,gBAACC,SAAD;AAAA,WAAeF,SAAS,CAACG,IAAV,CAAeC,IAAf,CAAoBF,SAApB,CAAf;AAAA,GADQ;AAEhBG,EAAAA,OAAO,EAAE,iBAACC,MAAD;AAAA,WAAYN,SAAS,CAACG,IAAV,CAAeI,MAAf,CAAsB,UAACL,SAAD;AAAA,aAAeA,SAAS,CAACI,MAAV,KAAqBA,MAApC;AAAA,KAAtB,CAAZ;AAAA,GAFO;AAGhBE,EAAAA,OAAO,EAAE,iBAACC,WAAD;AAAA,WAAiBT,SAAS,CAACG,IAAV,CAAeO,IAAf,CAAoB,UAACR,SAAD;AAAA,aAAeA,SAAS,CAACS,EAAV,KAAiBF,WAAhC;AAAA,KAApB,CAAjB;AAAA,GAHO;AAIhBN,EAAAA,IAAI,EAAE;AAJU,CAAlB;eAOeH,S",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "const Inventory = {\n  create: (inventory) => Inventory.list.push(inventory),\n  findAll: (userId) => Inventory.list.filter((inventory) => inventory.userId === userId),\n  findOne: (inventoryId) => Inventory.list.find((inventory) => inventory.id === inventoryId),\n  list: [],\n};\n\nexport default Inventory;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\inventory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\inventory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\inventory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\inventory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "inventory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Inventory = _models[\"default\"].Inventory;\nvar _default = {\n  create: function create(req, res) {\n    var _req$body = req.body,\n        category = _req$body.category,\n        name = _req$body.name,\n        description = _req$body.description,\n        userId = req.user.userId;\n    var inventory = {\n      id: Inventory.list.length + 1,\n      category: category,\n      name: name,\n      description: description,\n      userId: userId\n    }; // persist inventory to database\n\n    Inventory.create(inventory);\n    return res.jsend.success(inventory);\n  },\n  findAll: function findAll(req, res) {\n    var userId = req.user.userId;\n    var listOfInventory = Inventory.findAll(userId);\n    return res.jsend.success(listOfInventory);\n  },\n  findOne: function findOne(req, res) {\n    var inventoryId = req.params.inventoryId,\n        userId = req.user.userId;\n    var inventory = Inventory.findOne(+inventoryId);\n    if (!inventory) return res.jsend.error('Inventory does not exist');\n    if (inventory.userId !== userId) return res.jsend.error('You cannot access this inventory');\n    return res.jsend.success(inventory);\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yeS5qcyJdLCJuYW1lcyI6WyJJbnZlbnRvcnkiLCJtb2RlbHMiLCJjcmVhdGUiLCJyZXEiLCJyZXMiLCJib2R5IiwiY2F0ZWdvcnkiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJ1c2VySWQiLCJ1c2VyIiwiaW52ZW50b3J5IiwiaWQiLCJsaXN0IiwibGVuZ3RoIiwianNlbmQiLCJzdWNjZXNzIiwiZmluZEFsbCIsImxpc3RPZkludmVudG9yeSIsImZpbmRPbmUiLCJpbnZlbnRvcnlJZCIsInBhcmFtcyIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7SUFFUUEsUyxHQUFjQyxrQixDQUFkRCxTO2VBRU87QUFDYkUsRUFBQUEsTUFBTSxFQUFFLGdCQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLG9CQUNnREQsR0FEaEQsQ0FDWkUsSUFEWTtBQUFBLFFBQ0pDLFFBREksYUFDSkEsUUFESTtBQUFBLFFBQ01DLElBRE4sYUFDTUEsSUFETjtBQUFBLFFBQ1lDLFdBRFosYUFDWUEsV0FEWjtBQUFBLFFBQ21DQyxNQURuQyxHQUNnRE4sR0FEaEQsQ0FDMkJPLElBRDNCLENBQ21DRCxNQURuQztBQUdwQixRQUFNRSxTQUFTLEdBQUc7QUFDaEJDLE1BQUFBLEVBQUUsRUFBRVosU0FBUyxDQUFDYSxJQUFWLENBQWVDLE1BQWYsR0FBd0IsQ0FEWjtBQUVoQlIsTUFBQUEsUUFBUSxFQUFSQSxRQUZnQjtBQUdoQkMsTUFBQUEsSUFBSSxFQUFKQSxJQUhnQjtBQUloQkMsTUFBQUEsV0FBVyxFQUFYQSxXQUpnQjtBQUtoQkMsTUFBQUEsTUFBTSxFQUFOQTtBQUxnQixLQUFsQixDQUhvQixDQVdwQjs7QUFDQVQsSUFBQUEsU0FBUyxDQUFDRSxNQUFWLENBQWlCUyxTQUFqQjtBQUNBLFdBQU9QLEdBQUcsQ0FBQ1csS0FBSixDQUFVQyxPQUFWLENBQWtCTCxTQUFsQixDQUFQO0FBQ0QsR0FmWTtBQWdCYk0sRUFBQUEsT0FBTyxFQUFFLGlCQUFDZCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLFFBQ0xLLE1BREssR0FDUU4sR0FEUixDQUNiTyxJQURhLENBQ0xELE1BREs7QUFFckIsUUFBTVMsZUFBZSxHQUFHbEIsU0FBUyxDQUFDaUIsT0FBVixDQUFrQlIsTUFBbEIsQ0FBeEI7QUFDQSxXQUFPTCxHQUFHLENBQUNXLEtBQUosQ0FBVUMsT0FBVixDQUFrQkUsZUFBbEIsQ0FBUDtBQUNELEdBcEJZO0FBcUJiQyxFQUFBQSxPQUFPLEVBQUUsaUJBQUNoQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLFFBQ0hnQixXQURHLEdBQ2lDakIsR0FEakMsQ0FDYmtCLE1BRGEsQ0FDSEQsV0FERztBQUFBLFFBQ29CWCxNQURwQixHQUNpQ04sR0FEakMsQ0FDWU8sSUFEWixDQUNvQkQsTUFEcEI7QUFFckIsUUFBTUUsU0FBUyxHQUFHWCxTQUFTLENBQUNtQixPQUFWLENBQWtCLENBQUNDLFdBQW5CLENBQWxCO0FBRUEsUUFBSSxDQUFDVCxTQUFMLEVBQWdCLE9BQU9QLEdBQUcsQ0FBQ1csS0FBSixDQUFVTyxLQUFWLENBQWdCLDBCQUFoQixDQUFQO0FBQ2hCLFFBQUlYLFNBQVMsQ0FBQ0YsTUFBVixLQUFxQkEsTUFBekIsRUFBaUMsT0FBT0wsR0FBRyxDQUFDVyxLQUFKLENBQVVPLEtBQVYsQ0FBZ0Isa0NBQWhCLENBQVA7QUFFakMsV0FBT2xCLEdBQUcsQ0FBQ1csS0FBSixDQUFVQyxPQUFWLENBQWtCTCxTQUFsQixDQUFQO0FBQ0Q7QUE3QlksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZGVscyBmcm9tICcuLi9tb2RlbHMnO1xuXG5jb25zdCB7IEludmVudG9yeSB9ID0gbW9kZWxzO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGNyZWF0ZTogKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBib2R5OiB7IGNhdGVnb3J5LCBuYW1lLCBkZXNjcmlwdGlvbiB9LCB1c2VyOiB7IHVzZXJJZCB9IH0gPSByZXE7XG5cbiAgICBjb25zdCBpbnZlbnRvcnkgPSB7XG4gICAgICBpZDogSW52ZW50b3J5Lmxpc3QubGVuZ3RoICsgMSxcbiAgICAgIGNhdGVnb3J5LFxuICAgICAgbmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgdXNlcklkLFxuICAgIH07XG5cbiAgICAvLyBwZXJzaXN0IGludmVudG9yeSB0byBkYXRhYmFzZVxuICAgIEludmVudG9yeS5jcmVhdGUoaW52ZW50b3J5KTtcbiAgICByZXR1cm4gcmVzLmpzZW5kLnN1Y2Nlc3MoaW52ZW50b3J5KTtcbiAgfSxcbiAgZmluZEFsbDogKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyB1c2VyOiB7IHVzZXJJZCB9IH0gPSByZXE7XG4gICAgY29uc3QgbGlzdE9mSW52ZW50b3J5ID0gSW52ZW50b3J5LmZpbmRBbGwodXNlcklkKTtcbiAgICByZXR1cm4gcmVzLmpzZW5kLnN1Y2Nlc3MobGlzdE9mSW52ZW50b3J5KTtcbiAgfSxcbiAgZmluZE9uZTogKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBwYXJhbXM6IHsgaW52ZW50b3J5SWQgfSwgdXNlcjogeyB1c2VySWQgfSB9ID0gcmVxO1xuICAgIGNvbnN0IGludmVudG9yeSA9IEludmVudG9yeS5maW5kT25lKCtpbnZlbnRvcnlJZCk7XG5cbiAgICBpZiAoIWludmVudG9yeSkgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignSW52ZW50b3J5IGRvZXMgbm90IGV4aXN0Jyk7XG4gICAgaWYgKGludmVudG9yeS51c2VySWQgIT09IHVzZXJJZCkgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcignWW91IGNhbm5vdCBhY2Nlc3MgdGhpcyBpbnZlbnRvcnknKTtcblxuICAgIHJldHVybiByZXMuanNlbmQuc3VjY2VzcyhpbnZlbnRvcnkpO1xuICB9LFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "inventory.js"
      ],
      "names": [
        "Inventory",
        "models",
        "create",
        "req",
        "res",
        "body",
        "category",
        "name",
        "description",
        "userId",
        "user",
        "inventory",
        "id",
        "list",
        "length",
        "jsend",
        "success",
        "findAll",
        "listOfInventory",
        "findOne",
        "inventoryId",
        "params",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;;;IAEQA,S,GAAcC,kB,CAAdD,S;eAEO;AACbE,EAAAA,MAAM,EAAE,gBAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACgDD,GADhD,CACZE,IADY;AAAA,QACJC,QADI,aACJA,QADI;AAAA,QACMC,IADN,aACMA,IADN;AAAA,QACYC,WADZ,aACYA,WADZ;AAAA,QACmCC,MADnC,GACgDN,GADhD,CAC2BO,IAD3B,CACmCD,MADnC;AAGpB,QAAME,SAAS,GAAG;AAChBC,MAAAA,EAAE,EAAEZ,SAAS,CAACa,IAAV,CAAeC,MAAf,GAAwB,CADZ;AAEhBR,MAAAA,QAAQ,EAARA,QAFgB;AAGhBC,MAAAA,IAAI,EAAJA,IAHgB;AAIhBC,MAAAA,WAAW,EAAXA,WAJgB;AAKhBC,MAAAA,MAAM,EAANA;AALgB,KAAlB,CAHoB,CAWpB;;AACAT,IAAAA,SAAS,CAACE,MAAV,CAAiBS,SAAjB;AACA,WAAOP,GAAG,CAACW,KAAJ,CAAUC,OAAV,CAAkBL,SAAlB,CAAP;AACD,GAfY;AAgBbM,EAAAA,OAAO,EAAE,iBAACd,GAAD,EAAMC,GAAN,EAAc;AAAA,QACLK,MADK,GACQN,GADR,CACbO,IADa,CACLD,MADK;AAErB,QAAMS,eAAe,GAAGlB,SAAS,CAACiB,OAAV,CAAkBR,MAAlB,CAAxB;AACA,WAAOL,GAAG,CAACW,KAAJ,CAAUC,OAAV,CAAkBE,eAAlB,CAAP;AACD,GApBY;AAqBbC,EAAAA,OAAO,EAAE,iBAAChB,GAAD,EAAMC,GAAN,EAAc;AAAA,QACHgB,WADG,GACiCjB,GADjC,CACbkB,MADa,CACHD,WADG;AAAA,QACoBX,MADpB,GACiCN,GADjC,CACYO,IADZ,CACoBD,MADpB;AAErB,QAAME,SAAS,GAAGX,SAAS,CAACmB,OAAV,CAAkB,CAACC,WAAnB,CAAlB;AAEA,QAAI,CAACT,SAAL,EAAgB,OAAOP,GAAG,CAACW,KAAJ,CAAUO,KAAV,CAAgB,0BAAhB,CAAP;AAChB,QAAIX,SAAS,CAACF,MAAV,KAAqBA,MAAzB,EAAiC,OAAOL,GAAG,CAACW,KAAJ,CAAUO,KAAV,CAAgB,kCAAhB,CAAP;AAEjC,WAAOlB,GAAG,CAACW,KAAJ,CAAUC,OAAV,CAAkBL,SAAlB,CAAP;AACD;AA7BY,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import models from '../models';\n\nconst { Inventory } = models;\n\nexport default {\n  create: (req, res) => {\n    const { body: { category, name, description }, user: { userId } } = req;\n\n    const inventory = {\n      id: Inventory.list.length + 1,\n      category,\n      name,\n      description,\n      userId,\n    };\n\n    // persist inventory to database\n    Inventory.create(inventory);\n    return res.jsend.success(inventory);\n  },\n  findAll: (req, res) => {\n    const { user: { userId } } = req;\n    const listOfInventory = Inventory.findAll(userId);\n    return res.jsend.success(listOfInventory);\n  },\n  findOne: (req, res) => {\n    const { params: { inventoryId }, user: { userId } } = req;\n    const inventory = Inventory.findOne(+inventoryId);\n\n    if (!inventory) return res.jsend.error('Inventory does not exist');\n    if (inventory.userId !== userId) return res.jsend.error('You cannot access this inventory');\n\n    return res.jsend.success(inventory);\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362043
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\tables.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "tables.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// get debug module for debugging mode\n// get postgres connection pool for database query\nvar tables = {\n  // create user tables if not exist\n  createEmployeeTable: function createEmployeeTable() {\n    var employee = \"CREATE TABLE IF NOT EXISTS\\n       employee( \\n          id SERIAL PRIMARY KEY, \\n          firstName VARCHAR NOT NULL,\\n          lastName VARCHAR NOT NULL,\\n          email VARCHAR NOT NULL,\\n          password VARCHAR NOT NULL,\\n          gender VARCHAR NOT NULL,\\n          jobRoll VARCHAR NOT NULL,\\n          department VARCHAR NOT NULL,\\n          is_admin BOOLEAN DEFAULT FALSE,\\n          regDate TIMESTAMP DEFAULT NOW()\\n        )\";\n\n    _dbconnect[\"default\"].query(employee).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table employee is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createGifTable: function createGifTable() {\n    var gif = \"CREATE TABLE IF NOT EXISTS\\n      gif(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        image VARCHAR NOT NULL,\\n        title VARCHAR NOT NULL,\\n        gifDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(gif).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table gif is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createArticlesTable: function createArticlesTable() {\n    var articles = \"CREATE TABLE IF NOT EXISTS\\n      articles(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        title VARCHAR NOT NULL,\\n        article VARCHAR NOT NULL,\\n        articleDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(articles).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table articles is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createCommentTable: function createCommentTable() {\n    var comment = \"CREATE TABLE IF NOT EXISTS\\n      comment(\\n        id SERIAL PRIMARY KEY,\\n        article_id INT NOT NULL,\\n        employee_id INT NOT NULL,\\n        comment VARCHAR NOT NULL,\\n        comment_date TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(comment).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table comment is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  disconnect: function disconnect() {\n    // disconnect client\n    _dbconnect[\"default\"].on('remove', function () {\n      (0, _debug[\"default\"])('app:database')('Tables created successfully, conection removed');\n    });\n  }\n}; // export utilities to be accessible  from any where within the application\n\nvar _default = tables;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlcy5qcyJdLCJuYW1lcyI6WyJ0YWJsZXMiLCJjcmVhdGVFbXBsb3llZVRhYmxlIiwiZW1wbG95ZWUiLCJwb29sIiwicXVlcnkiLCJ0aGVuIiwicmVzIiwiZXJyIiwiY3JlYXRlR2lmVGFibGUiLCJnaWYiLCJjcmVhdGVBcnRpY2xlc1RhYmxlIiwiYXJ0aWNsZXMiLCJjcmVhdGVDb21tZW50VGFibGUiLCJjb21tZW50IiwiZGlzY29ubmVjdCIsIm9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBRUE7Ozs7QUFIQTtBQUVBO0FBR0EsSUFBTUEsTUFBTSxHQUFHO0FBQ2I7QUFDQUMsRUFBQUEsbUJBQW1CLEVBQUUsK0JBQU07QUFDekIsUUFBTUMsUUFBUSw2YkFBZDs7QUFhQUMsMEJBQUtDLEtBQUwsQ0FBV0YsUUFBWCxFQUNHRyxJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFTO0FBQ2IsNkJBQU0sT0FBTix3Q0FBOENBLEdBQTlDO0FBQ0QsS0FISCxXQUlTLFVBQUNDLEdBQUQsRUFBUztBQUNkLDZCQUFNLE9BQU4sRUFBZUEsR0FBZjtBQUNELEtBTkg7QUFPRCxHQXZCWTtBQXdCYkMsRUFBQUEsY0FBYyxFQUFFLDBCQUFNO0FBQ3BCLFFBQU1DLEdBQUcsa09BQVQ7O0FBUUFOLDBCQUFLQyxLQUFMLENBQVdLLEdBQVgsRUFDR0osSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sbUNBQXlDQSxHQUF6QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F4Q1k7QUF5Q2JHLEVBQUFBLG1CQUFtQixFQUFFLCtCQUFNO0FBQ3pCLFFBQU1DLFFBQVEsNk9BQWQ7O0FBUUFSLDBCQUFLQyxLQUFMLENBQVdPLFFBQVgsRUFDR04sSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sd0NBQThDQSxHQUE5QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F6RFk7QUEwRGJLLEVBQUFBLGtCQUFrQixFQUFFLDhCQUFNO0FBQ3hCLFFBQU1DLE9BQU8sOE9BQWI7O0FBUUFWLDBCQUFLQyxLQUFMLENBQVdTLE9BQVgsRUFDR1IsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sdUNBQTZDQSxHQUE3QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0ExRVk7QUEyRVpPLEVBQUFBLFVBQVUsRUFBRSxzQkFBTTtBQUNqQjtBQUNBWCwwQkFBS1ksRUFBTCxDQUFRLFFBQVIsRUFBa0IsWUFBTTtBQUN0Qiw2QkFBTSxjQUFOLEVBQXNCLGdEQUF0QjtBQUNELEtBRkQ7QUFHRDtBQWhGWSxDQUFmLEMsQ0FrRkE7O2VBQ2VmLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnZXQgZGVidWcgbW9kdWxlIGZvciBkZWJ1Z2dpbmcgbW9kZVxuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbi8vIGdldCBwb3N0Z3JlcyBjb25uZWN0aW9uIHBvb2wgZm9yIGRhdGFiYXNlIHF1ZXJ5XG5pbXBvcnQgcG9vbCBmcm9tICcuLi9kYXRhYmFzZS9kYmNvbm5lY3QnO1xuXG5jb25zdCB0YWJsZXMgPSB7XG4gIC8vIGNyZWF0ZSB1c2VyIHRhYmxlcyBpZiBub3QgZXhpc3RcbiAgY3JlYXRlRW1wbG95ZWVUYWJsZTogKCkgPT4ge1xuICAgIGNvbnN0IGVtcGxveWVlID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTXG4gICAgICAgZW1wbG95ZWUoIFxuICAgICAgICAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSwgXG4gICAgICAgICAgZmlyc3ROYW1lIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgbGFzdE5hbWUgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBlbWFpbCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIHBhc3N3b3JkIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgZ2VuZGVyIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgam9iUm9sbCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIGRlcGFydG1lbnQgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBpc19hZG1pbiBCT09MRUFOIERFRkFVTFQgRkFMU0UsXG4gICAgICAgICAgcmVnRGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgICApYDtcbiAgICBwb29sLnF1ZXJ5KGVtcGxveWVlKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgZW1wbG95ZWUgaXMgYXZhaWxhYmxlICR7cmVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGRlYnVnKCdhcHA6KicpKGVycik7XG4gICAgICB9KTtcbiAgfSxcbiAgY3JlYXRlR2lmVGFibGU6ICgpID0+IHtcbiAgICBjb25zdCBnaWYgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGdpZihcbiAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLFxuICAgICAgICBlbXBsb3llZV9pZCBJTlQgTk9UIE5VTEwsXG4gICAgICAgIGltYWdlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIHRpdGxlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGdpZkRhdGUgVElNRVNUQU1QIERFRkFVTFQgTk9XKClcbiAgICAgIClgO1xuICAgIHBvb2wucXVlcnkoZ2lmKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgZ2lmIGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gIGNyZWF0ZUFydGljbGVzVGFibGU6ICgpID0+IHtcbiAgICBjb25zdCBhcnRpY2xlcyA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUU1xuICAgICAgYXJ0aWNsZXMoXG4gICAgICAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICB0aXRsZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBhcnRpY2xlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGFydGljbGVEYXRlIFRJTUVTVEFNUCBERUZBVUxUIE5PVygpXG4gICAgICApYDtcbiAgICBwb29sLnF1ZXJ5KGFydGljbGVzKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgYXJ0aWNsZXMgaXMgYXZhaWxhYmxlICR7cmVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGRlYnVnKCdhcHA6KicpKGVycik7XG4gICAgICB9KTtcbiAgfSxcbiAgY3JlYXRlQ29tbWVudFRhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgY29tbWVudCA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUU1xuICAgICAgY29tbWVudChcbiAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLFxuICAgICAgICBhcnRpY2xlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICBjb21tZW50IFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGNvbW1lbnRfZGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShjb21tZW50KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgY29tbWVudCBpcyBhdmFpbGFibGUgJHtyZXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoZXJyKTtcbiAgICAgIH0pO1xuICB9LFxuICAgZGlzY29ubmVjdDogKCkgPT4ge1xuICAgIC8vIGRpc2Nvbm5lY3QgY2xpZW50XG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgZGVidWcoJ2FwcDpkYXRhYmFzZScpKCdUYWJsZXMgY3JlYXRlZCBzdWNjZXNzZnVsbHksIGNvbmVjdGlvbiByZW1vdmVkJyk7XG4gICAgfSk7XG4gIH0sXG59O1xuLy8gZXhwb3J0IHV0aWxpdGllcyB0byBiZSBhY2Nlc3NpYmxlICBmcm9tIGFueSB3aGVyZSB3aXRoaW4gdGhlIGFwcGxpY2F0aW9uXG5leHBvcnQgZGVmYXVsdCB0YWJsZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tables.js"
      ],
      "names": [
        "tables",
        "createEmployeeTable",
        "employee",
        "pool",
        "query",
        "then",
        "res",
        "err",
        "createGifTable",
        "gif",
        "createArticlesTable",
        "articles",
        "createCommentTable",
        "comment",
        "disconnect",
        "on"
      ],
      "mappings": ";;;;;;;AACA;;AAEA;;;;AAHA;AAEA;AAGA,IAAMA,MAAM,GAAG;AACb;AACAC,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,6bAAd;;AAaAC,0BAAKC,KAAL,CAAWF,QAAX,EACGG,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAvBY;AAwBbC,EAAAA,cAAc,EAAE,0BAAM;AACpB,QAAMC,GAAG,kOAAT;;AAQAN,0BAAKC,KAAL,CAAWK,GAAX,EACGJ,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,mCAAyCA,GAAzC;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAxCY;AAyCbG,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,6OAAd;;AAQAR,0BAAKC,KAAL,CAAWO,QAAX,EACGN,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAzDY;AA0DbK,EAAAA,kBAAkB,EAAE,8BAAM;AACxB,QAAMC,OAAO,8OAAb;;AAQAV,0BAAKC,KAAL,CAAWS,OAAX,EACGR,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,uCAA6CA,GAA7C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GA1EY;AA2EZO,EAAAA,UAAU,EAAE,sBAAM;AACjB;AACAX,0BAAKY,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,6BAAM,cAAN,EAAsB,gDAAtB;AACD,KAFD;AAGD;AAhFY,CAAf,C,CAkFA;;eACef,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "// get debug module for debugging mode\nimport debug from 'debug';\n// get postgres connection pool for database query\nimport pool from '../database/dbconnect';\n\nconst tables = {\n  // create user tables if not exist\n  createEmployeeTable: () => {\n    const employee = `CREATE TABLE IF NOT EXISTS\n       employee( \n          id SERIAL PRIMARY KEY, \n          firstName VARCHAR NOT NULL,\n          lastName VARCHAR NOT NULL,\n          email VARCHAR NOT NULL,\n          password VARCHAR NOT NULL,\n          gender VARCHAR NOT NULL,\n          jobRoll VARCHAR NOT NULL,\n          department VARCHAR NOT NULL,\n          is_admin BOOLEAN DEFAULT FALSE,\n          regDate TIMESTAMP DEFAULT NOW()\n        )`;\n    pool.query(employee)\n      .then((res) => {\n        debug('app:*')(`table employee is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createGifTable: () => {\n    const gif = `CREATE TABLE IF NOT EXISTS\n      gif(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        image VARCHAR NOT NULL,\n        title VARCHAR NOT NULL,\n        gifDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(gif)\n      .then((res) => {\n        debug('app:*')(`table gif is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createArticlesTable: () => {\n    const articles = `CREATE TABLE IF NOT EXISTS\n      articles(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        title VARCHAR NOT NULL,\n        article VARCHAR NOT NULL,\n        articleDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(articles)\n      .then((res) => {\n        debug('app:*')(`table articles is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createCommentTable: () => {\n    const comment = `CREATE TABLE IF NOT EXISTS\n      comment(\n        id SERIAL PRIMARY KEY,\n        article_id INT NOT NULL,\n        employee_id INT NOT NULL,\n        comment VARCHAR NOT NULL,\n        comment_date TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(comment)\n      .then((res) => {\n        debug('app:*')(`table comment is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n   disconnect: () => {\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:database')('Tables created successfully, conection removed');\n    });\n  },\n};\n// export utilities to be accessible  from any where within the application\nexport default tables;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572620299633
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\\\\dbconnect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
        "sourceFileName": "dbconnect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// get node postgres connector\nvar config = {\n  user: 'postgres',\n  // this is the db user credential\n  database: 'teamwork',\n  password: 'olajide4me',\n  port: 5433,\n  max: 100,\n  // max number of clients in the pool\n  idleTimeoutMillis: 30000\n};\n\nvar pool = _pg[\"default\"].Pool(config);\n\npool.on('connect', function () {\n  (0, _debug[\"default\"])('app:database')('connected to the Database');\n});\nmodule.exports = pool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29ubmVjdC5qcyJdLCJuYW1lcyI6WyJjb25maWciLCJ1c2VyIiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsInBvcnQiLCJtYXgiLCJpZGxlVGltZW91dE1pbGxpcyIsInBvb2wiLCJwZyIsIlBvb2wiLCJvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFGQTtBQUlBLElBQU1BLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUUsVUFETztBQUNLO0FBQ2xCQyxFQUFBQSxRQUFRLEVBQUUsVUFGRztBQUdiQyxFQUFBQSxRQUFRLEVBQUUsWUFIRztBQUliQyxFQUFBQSxJQUFJLEVBQUUsSUFKTztBQUtiQyxFQUFBQSxHQUFHLEVBQUUsR0FMUTtBQUtIO0FBQ1ZDLEVBQUFBLGlCQUFpQixFQUFFO0FBTk4sQ0FBZjs7QUFRQSxJQUFNQyxJQUFJLEdBQUdDLGVBQUdDLElBQUgsQ0FBUVQsTUFBUixDQUFiOztBQUNBTyxJQUFJLENBQUNHLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIseUJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDRCxDQUZEO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsSUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxkYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldCBub2RlIHBvc3RncmVzIGNvbm5lY3RvclxuaW1wb3J0IHBnIGZyb20gJ3BnJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5cbmNvbnN0IGNvbmZpZyA9IHtcbiAgdXNlcjogJ3Bvc3RncmVzJywgLy8gdGhpcyBpcyB0aGUgZGIgdXNlciBjcmVkZW50aWFsXG4gIGRhdGFiYXNlOiAndGVhbXdvcmsnLFxuICBwYXNzd29yZDogJ29sYWppZGU0bWUnLFxuICBwb3J0OiA1NDMzLFxuICBtYXg6IDEwMCwgLy8gbWF4IG51bWJlciBvZiBjbGllbnRzIGluIHRoZSBwb29sXG4gIGlkbGVUaW1lb3V0TWlsbGlzOiAzMDAwMCxcbn07XG5jb25zdCBwb29sID0gcGcuUG9vbChjb25maWcpO1xucG9vbC5vbignY29ubmVjdCcsICgpID0+IHtcbiAgZGVidWcoJ2FwcDpkYXRhYmFzZScpKCdjb25uZWN0ZWQgdG8gdGhlIERhdGFiYXNlJyk7XG59KTtcbm1vZHVsZS5leHBvcnRzID0gcG9vbDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dbconnect.js"
      ],
      "names": [
        "config",
        "user",
        "database",
        "password",
        "port",
        "max",
        "idleTimeoutMillis",
        "pool",
        "pg",
        "Pool",
        "on",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;AACA;;;;AAFA;AAIA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,UADO;AACK;AAClBC,EAAAA,QAAQ,EAAE,UAFG;AAGbC,EAAAA,QAAQ,EAAE,YAHG;AAIbC,EAAAA,IAAI,EAAE,IAJO;AAKbC,EAAAA,GAAG,EAAE,GALQ;AAKH;AACVC,EAAAA,iBAAiB,EAAE;AANN,CAAf;;AAQA,IAAMC,IAAI,GAAGC,eAAGC,IAAH,CAAQT,MAAR,CAAb;;AACAO,IAAI,CAACG,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,yBAAM,cAAN,EAAsB,2BAAtB;AACD,CAFD;AAGAC,MAAM,CAACC,OAAP,GAAiBL,IAAjB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "sourcesContent": [
        "// get node postgres connector\nimport pg from 'pg';\nimport debug from 'debug';\n\nconst config = {\n  user: 'postgres', // this is the db user credential\n  database: 'teamwork',\n  password: 'olajide4me',\n  port: 5433,\n  max: 100, // max number of clients in the pool\n  idleTimeoutMillis: 30000,\n};\nconst pool = pg.Pool(config);\npool.on('connect', () => {\n  debug('app:database')('connected to the Database');\n});\nmodule.exports = pool;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572537468525
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\tests\\\\test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests\\test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests\\test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests\\test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _app = _interopRequireDefault(require(\"../app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// Import the dependencies for testing\n// Configure chai\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\n_chai[\"default\"].should();\n\ndescribe(\"Teamwork Application Unit Tests\", function () {\n  describe(\"Test for GET tasks\", function () {\n    // Test to get all articles and gifs\n    it(\"should get all article or gifs\", function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).get('/feed').end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    }); // Test to get single student record\n\n    it(\"should get a specific article\", function (done) {\n      var id = 1;\n\n      _chai[\"default\"].request(_app[\"default\"]).get(\"GET /articles/\".concat(id)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it(\"should get a specific gif\", function (done) {\n      var id = 1;\n\n      _chai[\"default\"].request(_app[\"default\"]).get(\"/gifs/\".concat(id)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n  });\n  describe('Test for POST tasks', function () {\n    it('Create a new employee', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/auth/create-user').send({\n        title: 'run',\n        done: false\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Login a user', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/auth/signin').send({\n        email: 'run',\n        password: false\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Create new article', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/articles').send({\n        title: 'run',\n        UserId: 2\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Post comment on article', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/articles/:Id/comment').send({\n        email: 'run',\n        password: false\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Post comment on gif', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/gifs/:Id/comment').send({\n        email: 'run',\n        password: false\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n    it('Create new gif', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).post('/gifs').send({\n        url: 'run',\n        password: false\n      }).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        done(err);\n      });\n    });\n  });\n  describe('Test for DELETE tasks', function () {\n    it('Delete a gif', function (done) {\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/gifs/:Id').end(function (err, res) {\n        res.should.have.status(200); // res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n    it('Delete an article', function (done) {\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/articles/:Id').end(function (err, res) {\n        res.should.have.status(200); // res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n    it('Delete an article comment', function (done) {\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/articles/:Id/comment').end(function (err, res) {\n        res.should.have.status(200); //res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n    it('Delete a gif comment', function (done) {\n      _chai[\"default\"].request(_app[\"default\"])[\"delete\"]('/gifs/:Id/comment').end(function (err, res) {\n        res.should.have.status(200); //res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n  });\n  describe('Test for PATCH/PUT tasks', function () {\n    it('Edit an article', function (done) {\n      _chai[\"default\"].request(_app[\"default\"]).patch('/articless/:Id').send({\n        title: 'run',\n        password: false\n      }).end(function (err, res) {\n        res.should.have.status(200); // res.body.should.be.a('object');\n\n        done(err);\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "should",
        "describe",
        "it",
        "done",
        "request",
        "app",
        "get",
        "end",
        "err",
        "res",
        "have",
        "status",
        "body",
        "be",
        "a",
        "id",
        "post",
        "send",
        "title",
        "email",
        "password",
        "UserId",
        "url",
        "patch"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\tests",
      "sourcesContent": [
        "// Import the dependencies for testing\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../app';\r\n// Configure chai\r\nchai.use(chaiHttp);\r\nchai.should();\r\ndescribe(\"Teamwork Application Unit Tests\", () => {\r\n    describe(\"Test for GET tasks\", () => {\r\n        // Test to get all articles and gifs\r\n        it(\"should get all article or gifs\", (done) => {\r\n             chai.request(app)\r\n                 .get('/feed')\r\n                 .end((err, res) => {\r\n                     res.should.have.status(200);\r\n                     res.body.should.be.a('object');\r\n                     done(err);\r\n                  });\r\n         });\r\n        // Test to get single student record\r\n        it(\"should get a specific article\", (done) => {\r\n             const id = 1;\r\n             chai.request(app)\r\n                 .get(`GET /articles/${id}`)\r\n                 .end((err, res) => {\r\n                     res.should.have.status(200);\r\n                     res.body.should.be.a('object');\r\n                     done(err);\r\n                  });\r\n         });\r\n\r\n\r\n        it(\"should get a specific gif\", (done) => {\r\n             const id = 1;\r\n             chai.request(app)\r\n                 .get(`/gifs/${id}`)\r\n                 .end((err, res) => {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                  });\r\n         });\r\n    });\r\n\r\n    describe('Test for POST tasks', function() {\r\n        it('Create a new employee', function(done) {\r\n            chai.request(app)\r\n                .post('/auth/create-user')\r\n                .send({\r\n                    title: 'run',\r\n                    done: false\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n        it('Login a user', function(done) {\r\n            chai.request(app)\r\n                .post('/auth/signin')\r\n                .send({\r\n                    email: 'run',\r\n                    password: false\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n        it('Create new article', function(done) {\r\n            chai.request(app)\r\n                .post('/articles')\r\n                .send({\r\n                    title: 'run',\r\n                    UserId: 2\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Post comment on article', function(done) {\r\n            chai.request(app)\r\n                .post('/articles/:Id/comment')\r\n                .send({\r\n                    email: 'run',\r\n                    password: false\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Post comment on gif', function(done) {\r\n            chai.request(app)\r\n                .post('/gifs/:Id/comment')\r\n                .send({\r\n                    email: 'run',\r\n                    password: false\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Create new gif', function(done) {\r\n            chai.request(app)\r\n                .post('/gifs')\r\n                .send({\r\n                    url: 'run',\r\n                    password: false\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n    });\r\n    describe('Test for DELETE tasks', function() {\r\n        it('Delete a gif', function(done) {\r\n            chai.request(app)\r\n                .delete('/gifs/:Id')\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    // res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Delete an article', function(done) {\r\n            chai.request(app)\r\n                .delete('/articles/:Id')\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    // res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Delete an article comment', function(done) {\r\n            chai.request(app)\r\n                .delete('/articles/:Id/comment')\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    //res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n\r\n        it('Delete a gif comment', function(done) {\r\n            chai.request(app)\r\n                .delete('/gifs/:Id/comment')\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    //res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n    });\r\n\r\n    describe('Test for PATCH/PUT tasks', function() {\r\n        it('Edit an article', function(done) {\r\n            chai.request(app)\r\n                .patch('/articless/:Id')\r\n                .send({\r\n                    title: 'run',\r\n                    password: false\r\n                })\r\n                .end(function(err, res) {\r\n                    res.should.have.status(200);\r\n                    // res.body.should.be.a('object');\r\n                    done(err);\r\n                });\r\n        });\r\n    });\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1573145644731
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _jsend = _interopRequireDefault(require(\"jsend\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _tables = _interopRequireDefault(require(\"./models/tables\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // to resolve cross origin resource shearing (CORS) error add folowing to te response header \n\napp.use(function (req, res, next) {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n  next();\n});\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _cookieParser[\"default\"])());\napp.use((0, _morgan[\"default\"])('combined'));\napp.use(_jsend[\"default\"].middleware);\n\n_tables[\"default\"].createEmployeeTable();\n\n_tables[\"default\"].createGifTable();\n\n_tables[\"default\"].createArticlesTable();\n\n_tables[\"default\"].createCommentTable();\n\n_tables[\"default\"].disconnect();\n\napp.use('/api/v1', _routes[\"default\"]);\napp.get('*', function (req, res) {\n  return res.jsend.success('Teamwork!!!');\n});\nvar port = parseInt(process.env.PORT, 10) || 4000;\napp.listen(port, function () {\n  return (0, _debug[\"default\"])('app:*')(\"Live at \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJhcHAiLCJ1c2UiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2V0SGVhZGVyIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJqc2VuZCIsIm1pZGRsZXdhcmUiLCJ0YWJsZSIsImNyZWF0ZUVtcGxveWVlVGFibGUiLCJjcmVhdGVHaWZUYWJsZSIsImNyZWF0ZUFydGljbGVzVGFibGUiLCJjcmVhdGVDb21tZW50VGFibGUiLCJkaXNjb25uZWN0IiwidjFSb3V0ZXIiLCJnZXQiLCJzdWNjZXNzIiwicG9ydCIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQUEsbUJBQU9DLE1BQVA7O0FBRUEsSUFBTUMsR0FBRyxHQUFHLDBCQUFaLEMsQ0FFQTs7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDeEJELEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDZCQUFkLEVBQTZDLEdBQTdDO0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ0UsU0FBSixDQUFjLDhCQUFkLEVBQThDLHdFQUE5QztBQUNBRixFQUFBQSxHQUFHLENBQUNFLFNBQUosQ0FBYyw4QkFBZCxFQUE4Qyx3Q0FBOUM7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBTEg7QUFPQUosR0FBRyxDQUFDQyxHQUFKLENBQVFLLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQVIsR0FBRyxDQUFDQyxHQUFKLENBQVFLLHVCQUFXRyxJQUFYLEVBQVI7QUFDQVQsR0FBRyxDQUFDQyxHQUFKLENBQVEsK0JBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsd0JBQU8sVUFBUCxDQUFSO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRUyxrQkFBTUMsVUFBZDs7QUFDQUMsbUJBQU1DLG1CQUFOOztBQUNBRCxtQkFBTUUsY0FBTjs7QUFDQUYsbUJBQU1HLG1CQUFOOztBQUNBSCxtQkFBTUksa0JBQU47O0FBRUFKLG1CQUFNSyxVQUFOOztBQUVBakIsR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBUixFQUFtQmlCLGtCQUFuQjtBQUVBbEIsR0FBRyxDQUFDbUIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDakIsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDTyxLQUFKLENBQVVVLE9BQVYsQ0FBa0IsYUFBbEIsQ0FBZDtBQUFBLENBQWI7QUFFQSxJQUFNQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQWIsRUFBbUIsRUFBbkIsQ0FBUixJQUFrQyxJQUEvQztBQUVBekIsR0FBRyxDQUFDMEIsTUFBSixDQUFXTCxJQUFYLEVBQWlCO0FBQUEsU0FBTSx1QkFBTSxPQUFOLG9CQUEwQkEsSUFBMUIsRUFBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQGJhYmVsL3BvbHlmaWxsJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSAnY29va2llLXBhcnNlcic7XG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBqc2VuZCBmcm9tICdqc2VuZCc7XG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IHRhYmxlIGZyb20gJy4vbW9kZWxzL3RhYmxlcyc7XG5cbmltcG9ydCB2MVJvdXRlciBmcm9tICcuL3JvdXRlcyc7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyB0byByZXNvbHZlIGNyb3NzIG9yaWdpbiByZXNvdXJjZSBzaGVhcmluZyAoQ09SUykgZXJyb3IgYWRkIGZvbG93aW5nIHRvIHRlIHJlc3BvbnNlIGhlYWRlciBcbmFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ09yaWdpbiwgWC1SZXF1ZXN0ZWQtV2l0aCwgQ29udGVudCwgQWNjZXB0LCBDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24nKTtcbiAgICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ0dFVCwgUE9TVCwgUFVULCBERUxFVEUsIFBBVENILCBPUFRJT05TJyk7XG4gICAgbmV4dCgpO1xuICB9KTtcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShtb3JnYW4oJ2NvbWJpbmVkJykpO1xuYXBwLnVzZShqc2VuZC5taWRkbGV3YXJlKTtcbnRhYmxlLmNyZWF0ZUVtcGxveWVlVGFibGUoKTtcbnRhYmxlLmNyZWF0ZUdpZlRhYmxlKCk7XG50YWJsZS5jcmVhdGVBcnRpY2xlc1RhYmxlKCk7XG50YWJsZS5jcmVhdGVDb21tZW50VGFibGUoKTtcblxudGFibGUuZGlzY29ubmVjdCgpO1xuXG5hcHAudXNlKCcvYXBpL3YxJywgdjFSb3V0ZXIpO1xuXG5hcHAuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMuanNlbmQuc3VjY2VzcygnVGVhbXdvcmshISEnKSk7XG5cbmNvbnN0IHBvcnQgPSBwYXJzZUludChwcm9jZXNzLmVudi5QT1JULCAxMCkgfHwgNDAwMDtcblxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBkZWJ1ZygnYXBwOionKShgTGl2ZSBhdCAke3BvcnR9YCkpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "use",
        "req",
        "res",
        "next",
        "setHeader",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "jsend",
        "middleware",
        "table",
        "createEmployeeTable",
        "createGifTable",
        "createArticlesTable",
        "createCommentTable",
        "disconnect",
        "v1Router",
        "get",
        "success",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wEAA9C;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAD,EAAAA,IAAI;AACL,CALH;AAOAJ,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACC,GAAJ,CAAQK,uBAAWG,IAAX,EAAR;AACAT,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,wBAAO,UAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQS,kBAAMC,UAAd;;AACAC,mBAAMC,mBAAN;;AACAD,mBAAME,cAAN;;AACAF,mBAAMG,mBAAN;;AACAH,mBAAMI,kBAAN;;AAEAJ,mBAAMK,UAAN;;AAEAjB,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBiB,kBAAnB;AAEAlB,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,UAACjB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACO,KAAJ,CAAUU,OAAV,CAAkB,aAAlB,CAAd;AAAA,CAAb;AAEA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,IAAb,EAAmB,EAAnB,CAAR,IAAkC,IAA/C;AAEAzB,GAAG,CAAC0B,MAAJ,CAAWL,IAAX,EAAiB;AAAA,SAAM,uBAAM,OAAN,oBAA0BA,IAA1B,EAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src",
      "sourcesContent": [
        "import '@babel/polyfill';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport dotenv from 'dotenv';\nimport express from 'express';\nimport jsend from 'jsend';\nimport morgan from 'morgan';\nimport debug from 'debug';\nimport table from './models/tables';\n\nimport v1Router from './routes';\n\ndotenv.config();\n\nconst app = express();\n\n// to resolve cross origin resource shearing (CORS) error add folowing to te response header \napp.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');\n    next();\n  });\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(morgan('combined'));\napp.use(jsend.middleware);\ntable.createEmployeeTable();\ntable.createGifTable();\ntable.createArticlesTable();\ntable.createCommentTable();\n\ntable.disconnect();\n\napp.use('/api/v1', v1Router);\n\napp.get('*', (req, res) => res.jsend.success('Teamwork!!!'));\n\nconst port = parseInt(process.env.PORT, 10) || 4000;\n\napp.listen(port, () => debug('app:*')(`Live at ${port}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573081608026
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\models\\\\tables.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models\\tables.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
        "sourceFileName": "tables.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// get debug module for debugging mode\n// get postgres connection pool for database query\nvar tables = {\n  // create user tables if not exist\n  createEmployeeTable: function createEmployeeTable() {\n    var employee = \"CREATE TABLE IF NOT EXISTS\\n       employee( \\n          id SERIAL PRIMARY KEY, \\n          firstName VARCHAR NOT NULL,\\n          lastName VARCHAR NOT NULL,\\n          email VARCHAR NOT NULL,\\n          password VARCHAR NOT NULL,\\n          gender VARCHAR NOT NULL,\\n          jobRoll VARCHAR NOT NULL,\\n          department VARCHAR NOT NULL,\\n          is_admin BOOLEAN DEFAULT FALSE,\\n          regDate TIMESTAMP DEFAULT NOW()\\n        )\";\n\n    _dbconnect[\"default\"].query(employee).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table employee is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createGifTable: function createGifTable() {\n    var gif = \"CREATE TABLE IF NOT EXISTS\\n      gif(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        image VARCHAR NOT NULL,\\n        title VARCHAR NOT NULL,\\n        gifDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(gif).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table gif is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createArticlesTable: function createArticlesTable() {\n    var articles = \"CREATE TABLE IF NOT EXISTS\\n      articles(\\n        id SERIAL PRIMARY KEY,\\n        employee_id INT NOT NULL,\\n        title VARCHAR NOT NULL,\\n        article VARCHAR NOT NULL,\\n        articleDate TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(articles).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table articles is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  createCommentTable: function createCommentTable() {\n    var comment = \"CREATE TABLE IF NOT EXISTS\\n      comment(\\n        id SERIAL PRIMARY KEY,\\n        article_id INT NOT NULL,\\n        employee_id INT NOT NULL,\\n        comment VARCHAR NOT NULL,\\n        comment_date TIMESTAMP DEFAULT NOW()\\n      )\";\n\n    _dbconnect[\"default\"].query(comment).then(function (res) {\n      (0, _debug[\"default\"])('app:*')(\"table comment is available \".concat(res));\n    })[\"catch\"](function (err) {\n      (0, _debug[\"default\"])('app:*')(err);\n    });\n  },\n  disconnect: function disconnect() {\n    // disconnect client\n    _dbconnect[\"default\"].on('remove', function () {\n      (0, _debug[\"default\"])('app:database')('Tables created successfully, conection removed');\n    });\n  }\n}; // export utilities to be accessible  from any where within the application\n\nvar _default = tables;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlcy5qcyJdLCJuYW1lcyI6WyJ0YWJsZXMiLCJjcmVhdGVFbXBsb3llZVRhYmxlIiwiZW1wbG95ZWUiLCJwb29sIiwicXVlcnkiLCJ0aGVuIiwicmVzIiwiZXJyIiwiY3JlYXRlR2lmVGFibGUiLCJnaWYiLCJjcmVhdGVBcnRpY2xlc1RhYmxlIiwiYXJ0aWNsZXMiLCJjcmVhdGVDb21tZW50VGFibGUiLCJjb21tZW50IiwiZGlzY29ubmVjdCIsIm9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBRUE7Ozs7QUFIQTtBQUVBO0FBR0EsSUFBTUEsTUFBTSxHQUFHO0FBQ2I7QUFDQUMsRUFBQUEsbUJBQW1CLEVBQUUsK0JBQU07QUFDekIsUUFBTUMsUUFBUSw2YkFBZDs7QUFhQUMsMEJBQUtDLEtBQUwsQ0FBV0YsUUFBWCxFQUNHRyxJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFTO0FBQ2IsNkJBQU0sT0FBTix3Q0FBOENBLEdBQTlDO0FBQ0QsS0FISCxXQUlTLFVBQUNDLEdBQUQsRUFBUztBQUNkLDZCQUFNLE9BQU4sRUFBZUEsR0FBZjtBQUNELEtBTkg7QUFPRCxHQXZCWTtBQXdCYkMsRUFBQUEsY0FBYyxFQUFFLDBCQUFNO0FBQ3BCLFFBQU1DLEdBQUcsa09BQVQ7O0FBUUFOLDBCQUFLQyxLQUFMLENBQVdLLEdBQVgsRUFDR0osSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sbUNBQXlDQSxHQUF6QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F4Q1k7QUF5Q2JHLEVBQUFBLG1CQUFtQixFQUFFLCtCQUFNO0FBQ3pCLFFBQU1DLFFBQVEsNk9BQWQ7O0FBUUFSLDBCQUFLQyxLQUFMLENBQVdPLFFBQVgsRUFDR04sSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sd0NBQThDQSxHQUE5QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0F6RFk7QUEwRGJLLEVBQUFBLGtCQUFrQixFQUFFLDhCQUFNO0FBQ3hCLFFBQU1DLE9BQU8sOE9BQWI7O0FBUUFWLDBCQUFLQyxLQUFMLENBQVdTLE9BQVgsRUFDR1IsSUFESCxDQUNRLFVBQUNDLEdBQUQsRUFBUztBQUNiLDZCQUFNLE9BQU4sdUNBQTZDQSxHQUE3QztBQUNELEtBSEgsV0FJUyxVQUFDQyxHQUFELEVBQVM7QUFDZCw2QkFBTSxPQUFOLEVBQWVBLEdBQWY7QUFDRCxLQU5IO0FBT0QsR0ExRVk7QUEyRVpPLEVBQUFBLFVBQVUsRUFBRSxzQkFBTTtBQUNqQjtBQUNBWCwwQkFBS1ksRUFBTCxDQUFRLFFBQVIsRUFBa0IsWUFBTTtBQUN0Qiw2QkFBTSxjQUFOLEVBQXNCLGdEQUF0QjtBQUNELEtBRkQ7QUFHRDtBQWhGWSxDQUFmLEMsQ0FrRkE7O2VBQ2VmLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBnZXQgZGVidWcgbW9kdWxlIGZvciBkZWJ1Z2dpbmcgbW9kZVxuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbi8vIGdldCBwb3N0Z3JlcyBjb25uZWN0aW9uIHBvb2wgZm9yIGRhdGFiYXNlIHF1ZXJ5XG5pbXBvcnQgcG9vbCBmcm9tICcuLi9kYXRhYmFzZS9kYmNvbm5lY3QnO1xuXG5jb25zdCB0YWJsZXMgPSB7XG4gIC8vIGNyZWF0ZSB1c2VyIHRhYmxlcyBpZiBub3QgZXhpc3RcbiAgY3JlYXRlRW1wbG95ZWVUYWJsZTogKCkgPT4ge1xuICAgIGNvbnN0IGVtcGxveWVlID0gYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTXG4gICAgICAgZW1wbG95ZWUoIFxuICAgICAgICAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSwgXG4gICAgICAgICAgZmlyc3ROYW1lIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgbGFzdE5hbWUgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBlbWFpbCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIHBhc3N3b3JkIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgZ2VuZGVyIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgICAgam9iUm9sbCBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICAgIGRlcGFydG1lbnQgVkFSQ0hBUiBOT1QgTlVMTCxcbiAgICAgICAgICBpc19hZG1pbiBCT09MRUFOIERFRkFVTFQgRkFMU0UsXG4gICAgICAgICAgcmVnRGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgICApYDtcbiAgICBwb29sLnF1ZXJ5KGVtcGxveWVlKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgZW1wbG95ZWUgaXMgYXZhaWxhYmxlICR7cmVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGRlYnVnKCdhcHA6KicpKGVycik7XG4gICAgICB9KTtcbiAgfSxcbiAgY3JlYXRlR2lmVGFibGU6ICgpID0+IHtcbiAgICBjb25zdCBnaWYgPSBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFNcbiAgICAgIGdpZihcbiAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLFxuICAgICAgICBlbXBsb3llZV9pZCBJTlQgTk9UIE5VTEwsXG4gICAgICAgIGltYWdlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIHRpdGxlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGdpZkRhdGUgVElNRVNUQU1QIERFRkFVTFQgTk9XKClcbiAgICAgIClgO1xuICAgIHBvb2wucXVlcnkoZ2lmKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgZ2lmIGlzIGF2YWlsYWJsZSAke3Jlc31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShlcnIpO1xuICAgICAgfSk7XG4gIH0sXG4gIGNyZWF0ZUFydGljbGVzVGFibGU6ICgpID0+IHtcbiAgICBjb25zdCBhcnRpY2xlcyA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUU1xuICAgICAgYXJ0aWNsZXMoXG4gICAgICAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICB0aXRsZSBWQVJDSEFSIE5PVCBOVUxMLFxuICAgICAgICBhcnRpY2xlIFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGFydGljbGVEYXRlIFRJTUVTVEFNUCBERUZBVUxUIE5PVygpXG4gICAgICApYDtcbiAgICBwb29sLnF1ZXJ5KGFydGljbGVzKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgYXJ0aWNsZXMgaXMgYXZhaWxhYmxlICR7cmVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGRlYnVnKCdhcHA6KicpKGVycik7XG4gICAgICB9KTtcbiAgfSxcbiAgY3JlYXRlQ29tbWVudFRhYmxlOiAoKSA9PiB7XG4gICAgY29uc3QgY29tbWVudCA9IGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUU1xuICAgICAgY29tbWVudChcbiAgICAgICAgaWQgU0VSSUFMIFBSSU1BUlkgS0VZLFxuICAgICAgICBhcnRpY2xlX2lkIElOVCBOT1QgTlVMTCxcbiAgICAgICAgZW1wbG95ZWVfaWQgSU5UIE5PVCBOVUxMLFxuICAgICAgICBjb21tZW50IFZBUkNIQVIgTk9UIE5VTEwsXG4gICAgICAgIGNvbW1lbnRfZGF0ZSBUSU1FU1RBTVAgREVGQVVMVCBOT1coKVxuICAgICAgKWA7XG4gICAgcG9vbC5xdWVyeShjb21tZW50KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWJ1ZygnYXBwOionKShgdGFibGUgY29tbWVudCBpcyBhdmFpbGFibGUgJHtyZXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgZGVidWcoJ2FwcDoqJykoZXJyKTtcbiAgICAgIH0pO1xuICB9LFxuICAgZGlzY29ubmVjdDogKCkgPT4ge1xuICAgIC8vIGRpc2Nvbm5lY3QgY2xpZW50XG4gICAgcG9vbC5vbigncmVtb3ZlJywgKCkgPT4ge1xuICAgICAgZGVidWcoJ2FwcDpkYXRhYmFzZScpKCdUYWJsZXMgY3JlYXRlZCBzdWNjZXNzZnVsbHksIGNvbmVjdGlvbiByZW1vdmVkJyk7XG4gICAgfSk7XG4gIH0sXG59O1xuLy8gZXhwb3J0IHV0aWxpdGllcyB0byBiZSBhY2Nlc3NpYmxlICBmcm9tIGFueSB3aGVyZSB3aXRoaW4gdGhlIGFwcGxpY2F0aW9uXG5leHBvcnQgZGVmYXVsdCB0YWJsZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "tables.js"
      ],
      "names": [
        "tables",
        "createEmployeeTable",
        "employee",
        "pool",
        "query",
        "then",
        "res",
        "err",
        "createGifTable",
        "gif",
        "createArticlesTable",
        "articles",
        "createCommentTable",
        "comment",
        "disconnect",
        "on"
      ],
      "mappings": ";;;;;;;AACA;;AAEA;;;;AAHA;AAEA;AAGA,IAAMA,MAAM,GAAG;AACb;AACAC,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,6bAAd;;AAaAC,0BAAKC,KAAL,CAAWF,QAAX,EACGG,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAvBY;AAwBbC,EAAAA,cAAc,EAAE,0BAAM;AACpB,QAAMC,GAAG,kOAAT;;AAQAN,0BAAKC,KAAL,CAAWK,GAAX,EACGJ,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,mCAAyCA,GAAzC;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAxCY;AAyCbG,EAAAA,mBAAmB,EAAE,+BAAM;AACzB,QAAMC,QAAQ,6OAAd;;AAQAR,0BAAKC,KAAL,CAAWO,QAAX,EACGN,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,wCAA8CA,GAA9C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GAzDY;AA0DbK,EAAAA,kBAAkB,EAAE,8BAAM;AACxB,QAAMC,OAAO,8OAAb;;AAQAV,0BAAKC,KAAL,CAAWS,OAAX,EACGR,IADH,CACQ,UAACC,GAAD,EAAS;AACb,6BAAM,OAAN,uCAA6CA,GAA7C;AACD,KAHH,WAIS,UAACC,GAAD,EAAS;AACd,6BAAM,OAAN,EAAeA,GAAf;AACD,KANH;AAOD,GA1EY;AA2EZO,EAAAA,UAAU,EAAE,sBAAM;AACjB;AACAX,0BAAKY,EAAL,CAAQ,QAAR,EAAkB,YAAM;AACtB,6BAAM,cAAN,EAAsB,gDAAtB;AACD,KAFD;AAGD;AAhFY,CAAf,C,CAkFA;;eACef,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\models",
      "sourcesContent": [
        "// get debug module for debugging mode\nimport debug from 'debug';\n// get postgres connection pool for database query\nimport pool from '../database/dbconnect';\n\nconst tables = {\n  // create user tables if not exist\n  createEmployeeTable: () => {\n    const employee = `CREATE TABLE IF NOT EXISTS\n       employee( \n          id SERIAL PRIMARY KEY, \n          firstName VARCHAR NOT NULL,\n          lastName VARCHAR NOT NULL,\n          email VARCHAR NOT NULL,\n          password VARCHAR NOT NULL,\n          gender VARCHAR NOT NULL,\n          jobRoll VARCHAR NOT NULL,\n          department VARCHAR NOT NULL,\n          is_admin BOOLEAN DEFAULT FALSE,\n          regDate TIMESTAMP DEFAULT NOW()\n        )`;\n    pool.query(employee)\n      .then((res) => {\n        debug('app:*')(`table employee is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createGifTable: () => {\n    const gif = `CREATE TABLE IF NOT EXISTS\n      gif(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        image VARCHAR NOT NULL,\n        title VARCHAR NOT NULL,\n        gifDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(gif)\n      .then((res) => {\n        debug('app:*')(`table gif is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createArticlesTable: () => {\n    const articles = `CREATE TABLE IF NOT EXISTS\n      articles(\n        id SERIAL PRIMARY KEY,\n        employee_id INT NOT NULL,\n        title VARCHAR NOT NULL,\n        article VARCHAR NOT NULL,\n        articleDate TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(articles)\n      .then((res) => {\n        debug('app:*')(`table articles is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n  createCommentTable: () => {\n    const comment = `CREATE TABLE IF NOT EXISTS\n      comment(\n        id SERIAL PRIMARY KEY,\n        article_id INT NOT NULL,\n        employee_id INT NOT NULL,\n        comment VARCHAR NOT NULL,\n        comment_date TIMESTAMP DEFAULT NOW()\n      )`;\n    pool.query(comment)\n      .then((res) => {\n        debug('app:*')(`table comment is available ${res}`);\n      })\n      .catch((err) => {\n        debug('app:*')(err);\n      });\n  },\n   disconnect: () => {\n    // disconnect client\n    pool.on('remove', () => {\n      debug('app:database')('Tables created successfully, conection removed');\n    });\n  },\n};\n// export utilities to be accessible  from any where within the application\nexport default tables;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572620299633
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\database\\\\dbconnect.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database\\dbconnect.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
        "sourceFileName": "dbconnect.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// get node postgres connector\nvar config = {\n  user: 'postgres',\n  // this is the db user credential\n  database: 'teamwork',\n  password: 'olajide4me',\n  port: 5433,\n  max: 100,\n  // max number of clients in the pool\n  idleTimeoutMillis: 30000\n};\n\nvar pool = _pg[\"default\"].Pool(config);\n\npool.on('connect', function () {\n  (0, _debug[\"default\"])('app:database')('connected to the Database');\n});\nmodule.exports = pool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiY29ubmVjdC5qcyJdLCJuYW1lcyI6WyJjb25maWciLCJ1c2VyIiwiZGF0YWJhc2UiLCJwYXNzd29yZCIsInBvcnQiLCJtYXgiLCJpZGxlVGltZW91dE1pbGxpcyIsInBvb2wiLCJwZyIsIlBvb2wiLCJvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFGQTtBQUlBLElBQU1BLE1BQU0sR0FBRztBQUNiQyxFQUFBQSxJQUFJLEVBQUUsVUFETztBQUNLO0FBQ2xCQyxFQUFBQSxRQUFRLEVBQUUsVUFGRztBQUdiQyxFQUFBQSxRQUFRLEVBQUUsWUFIRztBQUliQyxFQUFBQSxJQUFJLEVBQUUsSUFKTztBQUtiQyxFQUFBQSxHQUFHLEVBQUUsR0FMUTtBQUtIO0FBQ1ZDLEVBQUFBLGlCQUFpQixFQUFFO0FBTk4sQ0FBZjs7QUFRQSxJQUFNQyxJQUFJLEdBQUdDLGVBQUdDLElBQUgsQ0FBUVQsTUFBUixDQUFiOztBQUNBTyxJQUFJLENBQUNHLEVBQUwsQ0FBUSxTQUFSLEVBQW1CLFlBQU07QUFDdkIseUJBQU0sY0FBTixFQUFzQiwyQkFBdEI7QUFDRCxDQUZEO0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsSUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxkYXRhYmFzZSIsInNvdXJjZXNDb250ZW50IjpbIi8vIGdldCBub2RlIHBvc3RncmVzIGNvbm5lY3RvclxuaW1wb3J0IHBnIGZyb20gJ3BnJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5cbmNvbnN0IGNvbmZpZyA9IHtcbiAgdXNlcjogJ3Bvc3RncmVzJywgLy8gdGhpcyBpcyB0aGUgZGIgdXNlciBjcmVkZW50aWFsXG4gIGRhdGFiYXNlOiAndGVhbXdvcmsnLFxuICBwYXNzd29yZDogJ29sYWppZGU0bWUnLFxuICBwb3J0OiA1NDMzLFxuICBtYXg6IDEwMCwgLy8gbWF4IG51bWJlciBvZiBjbGllbnRzIGluIHRoZSBwb29sXG4gIGlkbGVUaW1lb3V0TWlsbGlzOiAzMDAwMCxcbn07XG5jb25zdCBwb29sID0gcGcuUG9vbChjb25maWcpO1xucG9vbC5vbignY29ubmVjdCcsICgpID0+IHtcbiAgZGVidWcoJ2FwcDpkYXRhYmFzZScpKCdjb25uZWN0ZWQgdG8gdGhlIERhdGFiYXNlJyk7XG59KTtcbm1vZHVsZS5leHBvcnRzID0gcG9vbDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dbconnect.js"
      ],
      "names": [
        "config",
        "user",
        "database",
        "password",
        "port",
        "max",
        "idleTimeoutMillis",
        "pool",
        "pg",
        "Pool",
        "on",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;AACA;;;;AAFA;AAIA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,UADO;AACK;AAClBC,EAAAA,QAAQ,EAAE,UAFG;AAGbC,EAAAA,QAAQ,EAAE,YAHG;AAIbC,EAAAA,IAAI,EAAE,IAJO;AAKbC,EAAAA,GAAG,EAAE,GALQ;AAKH;AACVC,EAAAA,iBAAiB,EAAE;AANN,CAAf;;AAQA,IAAMC,IAAI,GAAGC,eAAGC,IAAH,CAAQT,MAAR,CAAb;;AACAO,IAAI,CAACG,EAAL,CAAQ,SAAR,EAAmB,YAAM;AACvB,yBAAM,cAAN,EAAsB,2BAAtB;AACD,CAFD;AAGAC,MAAM,CAACC,OAAP,GAAiBL,IAAjB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\database",
      "sourcesContent": [
        "// get node postgres connector\nimport pg from 'pg';\nimport debug from 'debug';\n\nconst config = {\n  user: 'postgres', // this is the db user credential\n  database: 'teamwork',\n  password: 'olajide4me',\n  port: 5433,\n  max: 100, // max number of clients in the pool\n  idleTimeoutMillis: 30000,\n};\nconst pool = pg.Pool(config);\npool.on('connect', () => {\n  debug('app:database')('connected to the Database');\n});\nmodule.exports = pool;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572537468525
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _validator = _interopRequireDefault(require(\"../middlewares/validator\"));\n\nvar _authenticator = _interopRequireDefault(require(\"../middlewares/authenticator\"));\n\nvar _users = _interopRequireDefault(require(\"../controllers/users\"));\n\nvar _gifs = _interopRequireDefault(require(\"../controllers/gifs\"));\n\nvar _articles = _interopRequireDefault(require(\"../controllers/articles\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router(); // user auth\n\n\nrouter.post('/auth/create-user', _users[\"default\"].signup);\nrouter.post('auth/signin', _users[\"default\"].login); // Create gifs\n\nrouter.post('/gifs', _gifs[\"default\"].create); // Delete a gif\n\nrouter[\"delete\"]('/gifs/:gifID', _gifs[\"default\"][\"delete\"]); // Delete a gif comment\n\nrouter[\"delete\"]('/gifs/:gifID', _gifs[\"default\"].deleteComment); // Create article\n\nrouter.post('/articles', _articles[\"default\"].create); // Edit an article\n\nrouter.patch('/articles/:articleID', _articles[\"default\"].edit); // Delete an article\n\nrouter[\"delete\"]('/articles/:articleID', _articles[\"default\"][\"delete\"]); // Delete an article comment\n\nrouter[\"delete\"]('/articles/:articleID', _articles[\"default\"].deleteComment); // Comment on an article\n\nrouter.post('/articles/<:articleId>/comment', _articles[\"default\"].createComment); // Comment on a gif\n\nrouter.post('/gifs/<:gifId>/comment', _gifs[\"default\"].createComment); // View all article or gif with recent first\n\nrouter.get('/feed', _articles[\"default\"].findAllArticleOrGif); // View  a specific article\n\nrouter.get('/article/:articleId', _articles[\"default\"].getOne); // View  a specific gif\n\nrouter.get('/gifs/:gifId', _gifs[\"default\"].getOne);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwidXNlcnMiLCJzaWdudXAiLCJsb2dpbiIsImdpZiIsImNyZWF0ZSIsImRlbGV0ZUNvbW1lbnQiLCJhcnRpY2xlIiwicGF0Y2giLCJlZGl0IiwiY3JlYXRlQ29tbWVudCIsImdldCIsImZpbmRBbGxBcnRpY2xlT3JHaWYiLCJnZXRPbmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZixDLENBRUE7OztBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxtQkFBWixFQUFrQ0Msa0JBQU1DLE1BQXhDO0FBQ0FMLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGFBQVosRUFBMkJDLGtCQUFNRSxLQUFqQyxFLENBRUE7O0FBQ0FOLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLE9BQVosRUFBcUJJLGlCQUFJQyxNQUF6QixFLENBRUE7O0FBQ0FSLE1BQU0sVUFBTixDQUFjLGNBQWQsRUFBOEJPLDBCQUE5QixFLENBRUE7O0FBQ0FQLE1BQU0sVUFBTixDQUFjLGNBQWQsRUFBOEJPLGlCQUFJRSxhQUFsQyxFLENBRUE7O0FBQ0FULE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFdBQVosRUFBeUJPLHFCQUFRRixNQUFqQyxFLENBRUE7O0FBQ0FSLE1BQU0sQ0FBQ1csS0FBUCxDQUFhLHNCQUFiLEVBQXFDRCxxQkFBUUUsSUFBN0MsRSxDQUVBOztBQUNBWixNQUFNLFVBQU4sQ0FBYyxzQkFBZCxFQUFzQ1UsOEJBQXRDLEUsQ0FFQTs7QUFDQVYsTUFBTSxVQUFOLENBQWMsc0JBQWQsRUFBc0NVLHFCQUFRRCxhQUE5QyxFLENBRUE7O0FBQ0FULE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGdDQUFaLEVBQThDTyxxQkFBUUcsYUFBdEQsRSxDQUVBOztBQUNBYixNQUFNLENBQUNHLElBQVAsQ0FBWSx3QkFBWixFQUFzQ0ksaUJBQUlNLGFBQTFDLEUsQ0FFQTs7QUFDQWIsTUFBTSxDQUFDYyxHQUFQLENBQVcsT0FBWCxFQUFvQkoscUJBQVFLLG1CQUE1QixFLENBRUE7O0FBQ0FmLE1BQU0sQ0FBQ2MsR0FBUCxDQUFZLHFCQUFaLEVBQW1DSixxQkFBUU0sTUFBM0MsRSxDQUVBOztBQUNBaEIsTUFBTSxDQUFDYyxHQUFQLENBQVksY0FBWixFQUE0QlAsaUJBQUlTLE1BQWhDO2VBRWVoQixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSEFNTUVEXFxEb2N1bWVudHNcXEdpdEh1YlxcVGVhbXdvcmtcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmltcG9ydCB2YWxpZGF0b3IgZnJvbSAnLi4vbWlkZGxld2FyZXMvdmFsaWRhdG9yJztcbmltcG9ydCBhdXRoZW50aWNhdG9yIGZyb20gJy4uL21pZGRsZXdhcmVzL2F1dGhlbnRpY2F0b3InO1xuaW1wb3J0IHVzZXJzIGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJzJztcbmltcG9ydCBnaWYgZnJvbSAnLi4vY29udHJvbGxlcnMvZ2lmcyc7XG5pbXBvcnQgYXJ0aWNsZSBmcm9tICcuLi9jb250cm9sbGVycy9hcnRpY2xlcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIHVzZXIgYXV0aFxucm91dGVyLnBvc3QoJy9hdXRoL2NyZWF0ZS11c2VyJywgIHVzZXJzLnNpZ251cCk7XG5yb3V0ZXIucG9zdCgnYXV0aC9zaWduaW4nLCB1c2Vycy5sb2dpbik7XG5cbi8vIENyZWF0ZSBnaWZzXG5yb3V0ZXIucG9zdCgnL2dpZnMnLCBnaWYuY3JlYXRlKTtcblxuLy8gRGVsZXRlIGEgZ2lmXG5yb3V0ZXIuZGVsZXRlKCcvZ2lmcy86Z2lmSUQnLCBnaWYuZGVsZXRlKTtcblxuLy8gRGVsZXRlIGEgZ2lmIGNvbW1lbnRcbnJvdXRlci5kZWxldGUoJy9naWZzLzpnaWZJRCcsIGdpZi5kZWxldGVDb21tZW50KTtcblxuLy8gQ3JlYXRlIGFydGljbGVcbnJvdXRlci5wb3N0KCcvYXJ0aWNsZXMnLCBhcnRpY2xlLmNyZWF0ZSk7XG5cbi8vIEVkaXQgYW4gYXJ0aWNsZVxucm91dGVyLnBhdGNoKCcvYXJ0aWNsZXMvOmFydGljbGVJRCcsIGFydGljbGUuZWRpdCk7XG5cbi8vIERlbGV0ZSBhbiBhcnRpY2xlXG5yb3V0ZXIuZGVsZXRlKCcvYXJ0aWNsZXMvOmFydGljbGVJRCcsIGFydGljbGUuZGVsZXRlKTtcblxuLy8gRGVsZXRlIGFuIGFydGljbGUgY29tbWVudFxucm91dGVyLmRlbGV0ZSgnL2FydGljbGVzLzphcnRpY2xlSUQnLCBhcnRpY2xlLmRlbGV0ZUNvbW1lbnQpO1xuXG4vLyBDb21tZW50IG9uIGFuIGFydGljbGVcbnJvdXRlci5wb3N0KCcvYXJ0aWNsZXMvPDphcnRpY2xlSWQ+L2NvbW1lbnQnLCBhcnRpY2xlLmNyZWF0ZUNvbW1lbnQpO1xuXG4vLyBDb21tZW50IG9uIGEgZ2lmXG5yb3V0ZXIucG9zdCgnL2dpZnMvPDpnaWZJZD4vY29tbWVudCcsIGdpZi5jcmVhdGVDb21tZW50KTtcblxuLy8gVmlldyBhbGwgYXJ0aWNsZSBvciBnaWYgd2l0aCByZWNlbnQgZmlyc3RcbnJvdXRlci5nZXQoJy9mZWVkJywgYXJ0aWNsZS5maW5kQWxsQXJ0aWNsZU9yR2lmKTtcblxuLy8gVmlldyAgYSBzcGVjaWZpYyBhcnRpY2xlXG5yb3V0ZXIuZ2V0KCAnL2FydGljbGUvOmFydGljbGVJZCcsIGFydGljbGUuZ2V0T25lLCk7XG5cbi8vIFZpZXcgIGEgc3BlY2lmaWMgZ2lmXG5yb3V0ZXIuZ2V0KCAnL2dpZnMvOmdpZklkJywgZ2lmLmdldE9uZSwpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "users",
        "signup",
        "login",
        "gif",
        "create",
        "deleteComment",
        "article",
        "patch",
        "edit",
        "createComment",
        "get",
        "findAllArticleOrGif",
        "getOne"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf,C,CAEA;;;AACAF,MAAM,CAACG,IAAP,CAAY,mBAAZ,EAAkCC,kBAAMC,MAAxC;AACAL,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA2BC,kBAAME,KAAjC,E,CAEA;;AACAN,MAAM,CAACG,IAAP,CAAY,OAAZ,EAAqBI,iBAAIC,MAAzB,E,CAEA;;AACAR,MAAM,UAAN,CAAc,cAAd,EAA8BO,0BAA9B,E,CAEA;;AACAP,MAAM,UAAN,CAAc,cAAd,EAA8BO,iBAAIE,aAAlC,E,CAEA;;AACAT,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBO,qBAAQF,MAAjC,E,CAEA;;AACAR,MAAM,CAACW,KAAP,CAAa,sBAAb,EAAqCD,qBAAQE,IAA7C,E,CAEA;;AACAZ,MAAM,UAAN,CAAc,sBAAd,EAAsCU,8BAAtC,E,CAEA;;AACAV,MAAM,UAAN,CAAc,sBAAd,EAAsCU,qBAAQD,aAA9C,E,CAEA;;AACAT,MAAM,CAACG,IAAP,CAAY,gCAAZ,EAA8CO,qBAAQG,aAAtD,E,CAEA;;AACAb,MAAM,CAACG,IAAP,CAAY,wBAAZ,EAAsCI,iBAAIM,aAA1C,E,CAEA;;AACAb,MAAM,CAACc,GAAP,CAAW,OAAX,EAAoBJ,qBAAQK,mBAA5B,E,CAEA;;AACAf,MAAM,CAACc,GAAP,CAAY,qBAAZ,EAAmCJ,qBAAQM,MAA3C,E,CAEA;;AACAhB,MAAM,CAACc,GAAP,CAAY,cAAZ,EAA4BP,iBAAIS,MAAhC;eAEehB,M",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\n\nimport validator from '../middlewares/validator';\nimport authenticator from '../middlewares/authenticator';\nimport users from '../controllers/users';\nimport gif from '../controllers/gifs';\nimport article from '../controllers/articles';\n\nconst router = express.Router();\n\n// user auth\nrouter.post('/auth/create-user',  users.signup);\nrouter.post('auth/signin', users.login);\n\n// Create gifs\nrouter.post('/gifs', gif.create);\n\n// Delete a gif\nrouter.delete('/gifs/:gifID', gif.delete);\n\n// Delete a gif comment\nrouter.delete('/gifs/:gifID', gif.deleteComment);\n\n// Create article\nrouter.post('/articles', article.create);\n\n// Edit an article\nrouter.patch('/articles/:articleID', article.edit);\n\n// Delete an article\nrouter.delete('/articles/:articleID', article.delete);\n\n// Delete an article comment\nrouter.delete('/articles/:articleID', article.deleteComment);\n\n// Comment on an article\nrouter.post('/articles/<:articleId>/comment', article.createComment);\n\n// Comment on a gif\nrouter.post('/gifs/<:gifId>/comment', gif.createComment);\n\n// View all article or gif with recent first\nrouter.get('/feed', article.findAllArticleOrGif);\n\n// View  a specific article\nrouter.get( '/article/:articleId', article.getOne,);\n\n// View  a specific gif\nrouter.get( '/gifs/:gifId', gif.getOne,);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573145934107
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\validator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\validator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "validator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validationHelpers = _interopRequireDefault(require(\"../utilities/validationHelpers\"));\n\nvar _regexen = require(\"../utilities/regexen\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar checkForEmptyFields = _validationHelpers[\"default\"].checkForEmptyFields,\n    checkPatternedFields = _validationHelpers[\"default\"].checkPatternedFields;\nvar _default = {\n  auth: function auth(req, res, next) {\n    var errors = [];\n    var _req$body = req.body,\n        firstname = _req$body.firstname,\n        lastname = _req$body.lastname,\n        email = _req$body.email,\n        password = _req$body.password;\n\n    if (req.path.includes('signup')) {\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('First name', firstname)));\n      errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Last name', lastname)));\n    }\n\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Email address', email, _regexen.emailRegex)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Password', password, _regexen.passwordRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  inventory: function inventory(req, res, next) {\n    var errors = [];\n    var _req$body2 = req.body,\n        category = _req$body2.category,\n        name = _req$body2.name,\n        description = _req$body2.description;\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Category', category)));\n    errors.push.apply(errors, _toConsumableArray(checkForEmptyFields('Name', name)));\n    errors.push.apply(errors, _toConsumableArray(checkPatternedFields('Description', description, _regexen.descriptionRegex)));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors\n      });\n    }\n\n    return next();\n  },\n  checkInventoryParams: function checkInventoryParams(req, res, next) {\n    var inventoryId = req.params.inventoryId;\n    var parsedNumber = parseInt(inventoryId, 10);\n    var isInter = Number.isInteger(parsedNumber);\n    var isGreaterThanZero = parsedNumber > 0;\n    if (isInter && isGreaterThanZero) return next();\n    return res.jsend.error('Inventory ID must be an integer greater than zero');\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRvci5qcyJdLCJuYW1lcyI6WyJjaGVja0ZvckVtcHR5RmllbGRzIiwidmFsaWRhdGlvbkhlbHBlcnMiLCJjaGVja1BhdHRlcm5lZEZpZWxkcyIsImF1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZXJyb3JzIiwiYm9keSIsImZpcnN0bmFtZSIsImxhc3RuYW1lIiwiZW1haWwiLCJwYXNzd29yZCIsInBhdGgiLCJpbmNsdWRlcyIsInB1c2giLCJlbWFpbFJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImxlbmd0aCIsImpzZW5kIiwiZXJyb3IiLCJtZXNzYWdlIiwiZGF0YSIsImludmVudG9yeSIsImNhdGVnb3J5IiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb25SZWdleCIsImNoZWNrSW52ZW50b3J5UGFyYW1zIiwiaW52ZW50b3J5SWQiLCJwYXJhbXMiLCJwYXJzZWROdW1iZXIiLCJwYXJzZUludCIsImlzSW50ZXIiLCJOdW1iZXIiLCJpc0ludGVnZXIiLCJpc0dyZWF0ZXJUaGFuWmVybyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7SUFFUUEsbUIsR0FBOENDLDZCLENBQTlDRCxtQjtJQUFxQkUsb0IsR0FBeUJELDZCLENBQXpCQyxvQjtlQUVkO0FBQ2JDLEVBQUFBLElBQUksRUFBRSxjQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN4QixRQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUR3QixvQkFJcEJILEdBQUcsQ0FBQ0ksSUFKZ0I7QUFBQSxRQUd0QkMsU0FIc0IsYUFHdEJBLFNBSHNCO0FBQUEsUUFHWEMsUUFIVyxhQUdYQSxRQUhXO0FBQUEsUUFHREMsS0FIQyxhQUdEQSxLQUhDO0FBQUEsUUFHTUMsUUFITixhQUdNQSxRQUhOOztBQU14QixRQUFJUixHQUFHLENBQUNTLElBQUosQ0FBU0MsUUFBVCxDQUFrQixRQUFsQixDQUFKLEVBQWlDO0FBQy9CUCxNQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU1AsbUJBQW1CLENBQUMsWUFBRCxFQUFlUyxTQUFmLENBQTVCLEVBQU47QUFDQUYsTUFBQUEsTUFBTSxDQUFDUSxJQUFQLE9BQUFSLE1BQU0scUJBQVNQLG1CQUFtQixDQUFDLFdBQUQsRUFBY1UsUUFBZCxDQUE1QixFQUFOO0FBQ0Q7O0FBQ0RILElBQUFBLE1BQU0sQ0FBQ1EsSUFBUCxPQUFBUixNQUFNLHFCQUFTTCxvQkFBb0IsQ0FBQyxlQUFELEVBQWtCUyxLQUFsQixFQUF5QkssbUJBQXpCLENBQTdCLEVBQU47QUFDQVQsSUFBQUEsTUFBTSxDQUFDUSxJQUFQLE9BQUFSLE1BQU0scUJBQVNMLG9CQUFvQixDQUFDLFVBQUQsRUFBYVUsUUFBYixFQUF1Qkssc0JBQXZCLENBQTdCLEVBQU47O0FBRUEsUUFBSVYsTUFBTSxDQUFDVyxNQUFYLEVBQW1CO0FBQ2pCLGFBQU9iLEdBQUcsQ0FBQ2MsS0FBSixDQUFVQyxLQUFWLENBQWdCO0FBQ3JCQyxRQUFBQSxPQUFPLEVBQUUsNkJBRFk7QUFFckJDLFFBQUFBLElBQUksRUFBRWY7QUFGZSxPQUFoQixDQUFQO0FBSUQ7O0FBQ0QsV0FBT0QsSUFBSSxFQUFYO0FBQ0QsR0FyQlk7QUFzQmJpQixFQUFBQSxTQUFTLEVBQUUsbUJBQUNuQixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUM3QixRQUFNQyxNQUFNLEdBQUcsRUFBZjtBQUQ2QixxQkFFV0gsR0FBRyxDQUFDSSxJQUZmO0FBQUEsUUFFckJnQixRQUZxQixjQUVyQkEsUUFGcUI7QUFBQSxRQUVYQyxJQUZXLGNBRVhBLElBRlc7QUFBQSxRQUVMQyxXQUZLLGNBRUxBLFdBRks7QUFJN0JuQixJQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU1AsbUJBQW1CLENBQUMsVUFBRCxFQUFhd0IsUUFBYixDQUE1QixFQUFOO0FBQ0FqQixJQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU1AsbUJBQW1CLENBQUMsTUFBRCxFQUFTeUIsSUFBVCxDQUE1QixFQUFOO0FBQ0FsQixJQUFBQSxNQUFNLENBQUNRLElBQVAsT0FBQVIsTUFBTSxxQkFBU0wsb0JBQW9CLENBQUMsYUFBRCxFQUFnQndCLFdBQWhCLEVBQTZCQyx5QkFBN0IsQ0FBN0IsRUFBTjs7QUFFQSxRQUFJcEIsTUFBTSxDQUFDVyxNQUFYLEVBQW1CO0FBQ2pCLGFBQU9iLEdBQUcsQ0FBQ2MsS0FBSixDQUFVQyxLQUFWLENBQWdCO0FBQ3JCQyxRQUFBQSxPQUFPLEVBQUUsNkJBRFk7QUFFckJDLFFBQUFBLElBQUksRUFBRWY7QUFGZSxPQUFoQixDQUFQO0FBSUQ7O0FBQ0QsV0FBT0QsSUFBSSxFQUFYO0FBQ0QsR0FyQ1k7QUFzQ2JzQixFQUFBQSxvQkFBb0IsRUFBRSw4QkFBQ3hCLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQUEsUUFDdEJ1QixXQURzQixHQUNKekIsR0FESSxDQUNoQzBCLE1BRGdDLENBQ3RCRCxXQURzQjtBQUV4QyxRQUFNRSxZQUFZLEdBQUdDLFFBQVEsQ0FBQ0gsV0FBRCxFQUFjLEVBQWQsQ0FBN0I7QUFDQSxRQUFNSSxPQUFPLEdBQUdDLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkosWUFBakIsQ0FBaEI7QUFDQSxRQUFNSyxpQkFBaUIsR0FBR0wsWUFBWSxHQUFHLENBQXpDO0FBRUEsUUFBSUUsT0FBTyxJQUFJRyxpQkFBZixFQUFrQyxPQUFPOUIsSUFBSSxFQUFYO0FBQ2xDLFdBQU9ELEdBQUcsQ0FBQ2MsS0FBSixDQUFVQyxLQUFWLENBQWdCLG1EQUFoQixDQUFQO0FBQ0Q7QUE5Q1ksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXG1pZGRsZXdhcmVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRpb25IZWxwZXJzIGZyb20gJy4uL3V0aWxpdGllcy92YWxpZGF0aW9uSGVscGVycyc7XG5pbXBvcnQgeyBlbWFpbFJlZ2V4LCBwYXNzd29yZFJlZ2V4LCBkZXNjcmlwdGlvblJlZ2V4IH0gZnJvbSAnLi4vdXRpbGl0aWVzL3JlZ2V4ZW4nO1xuXG5jb25zdCB7IGNoZWNrRm9yRW1wdHlGaWVsZHMsIGNoZWNrUGF0dGVybmVkRmllbGRzIH0gPSB2YWxpZGF0aW9uSGVscGVycztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhdXRoOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICBjb25zdCB7XG4gICAgICBmaXJzdG5hbWUsIGxhc3RuYW1lLCBlbWFpbCwgcGFzc3dvcmQsXG4gICAgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKHJlcS5wYXRoLmluY2x1ZGVzKCdzaWdudXAnKSkge1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnRmlyc3QgbmFtZScsIGZpcnN0bmFtZSkpO1xuICAgICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnTGFzdCBuYW1lJywgbGFzdG5hbWUpKTtcbiAgICB9XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tQYXR0ZXJuZWRGaWVsZHMoJ0VtYWlsIGFkZHJlc3MnLCBlbWFpbCwgZW1haWxSZWdleCkpO1xuICAgIGVycm9ycy5wdXNoKC4uLmNoZWNrUGF0dGVybmVkRmllbGRzKCdQYXNzd29yZCcsIHBhc3N3b3JkLCBwYXNzd29yZFJlZ2V4KSk7XG5cbiAgICBpZiAoZXJyb3JzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHJlcy5qc2VuZC5lcnJvcih7XG4gICAgICAgIG1lc3NhZ2U6ICdZb3VyIHJlcXVlc3QgY29udGFpbiBlcnJvcnMnLFxuICAgICAgICBkYXRhOiBlcnJvcnMsXG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfSxcbiAgaW52ZW50b3J5OiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICBjb25zdCB7IGNhdGVnb3J5LCBuYW1lLCBkZXNjcmlwdGlvbiB9ID0gcmVxLmJvZHk7XG5cbiAgICBlcnJvcnMucHVzaCguLi5jaGVja0ZvckVtcHR5RmllbGRzKCdDYXRlZ29yeScsIGNhdGVnb3J5KSk7XG4gICAgZXJyb3JzLnB1c2goLi4uY2hlY2tGb3JFbXB0eUZpZWxkcygnTmFtZScsIG5hbWUpKTtcbiAgICBlcnJvcnMucHVzaCguLi5jaGVja1BhdHRlcm5lZEZpZWxkcygnRGVzY3JpcHRpb24nLCBkZXNjcmlwdGlvbiwgZGVzY3JpcHRpb25SZWdleCkpO1xuXG4gICAgaWYgKGVycm9ycy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiByZXMuanNlbmQuZXJyb3Ioe1xuICAgICAgICBtZXNzYWdlOiAnWW91ciByZXF1ZXN0IGNvbnRhaW4gZXJyb3JzJyxcbiAgICAgICAgZGF0YTogZXJyb3JzLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBuZXh0KCk7XG4gIH0sXG4gIGNoZWNrSW52ZW50b3J5UGFyYW1zOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBjb25zdCB7IHBhcmFtczogeyBpbnZlbnRvcnlJZCB9IH0gPSByZXE7XG4gICAgY29uc3QgcGFyc2VkTnVtYmVyID0gcGFyc2VJbnQoaW52ZW50b3J5SWQsIDEwKTtcbiAgICBjb25zdCBpc0ludGVyID0gTnVtYmVyLmlzSW50ZWdlcihwYXJzZWROdW1iZXIpO1xuICAgIGNvbnN0IGlzR3JlYXRlclRoYW5aZXJvID0gcGFyc2VkTnVtYmVyID4gMDtcblxuICAgIGlmIChpc0ludGVyICYmIGlzR3JlYXRlclRoYW5aZXJvKSByZXR1cm4gbmV4dCgpO1xuICAgIHJldHVybiByZXMuanNlbmQuZXJyb3IoJ0ludmVudG9yeSBJRCBtdXN0IGJlIGFuIGludGVnZXIgZ3JlYXRlciB0aGFuIHplcm8nKTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "validator.js"
      ],
      "names": [
        "checkForEmptyFields",
        "validationHelpers",
        "checkPatternedFields",
        "auth",
        "req",
        "res",
        "next",
        "errors",
        "body",
        "firstname",
        "lastname",
        "email",
        "password",
        "path",
        "includes",
        "push",
        "emailRegex",
        "passwordRegex",
        "length",
        "jsend",
        "error",
        "message",
        "data",
        "inventory",
        "category",
        "name",
        "description",
        "descriptionRegex",
        "checkInventoryParams",
        "inventoryId",
        "params",
        "parsedNumber",
        "parseInt",
        "isInter",
        "Number",
        "isInteger",
        "isGreaterThanZero"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import validationHelpers from '../utilities/validationHelpers';\nimport { emailRegex, passwordRegex, descriptionRegex } from '../utilities/regexen';\n\nconst { checkForEmptyFields, checkPatternedFields } = validationHelpers;\n\nexport default {\n  auth: (req, res, next) => {\n    const errors = [];\n    const {\n      firstname, lastname, email, password,\n    } = req.body;\n\n    if (req.path.includes('signup')) {\n      errors.push(...checkForEmptyFields('First name', firstname));\n      errors.push(...checkForEmptyFields('Last name', lastname));\n    }\n    errors.push(...checkPatternedFields('Email address', email, emailRegex));\n    errors.push(...checkPatternedFields('Password', password, passwordRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  inventory: (req, res, next) => {\n    const errors = [];\n    const { category, name, description } = req.body;\n\n    errors.push(...checkForEmptyFields('Category', category));\n    errors.push(...checkForEmptyFields('Name', name));\n    errors.push(...checkPatternedFields('Description', description, descriptionRegex));\n\n    if (errors.length) {\n      return res.jsend.error({\n        message: 'Your request contain errors',\n        data: errors,\n      });\n    }\n    return next();\n  },\n  checkInventoryParams: (req, res, next) => {\n    const { params: { inventoryId } } = req;\n    const parsedNumber = parseInt(inventoryId, 10);\n    const isInter = Number.isInteger(parsedNumber);\n    const isGreaterThanZero = parsedNumber > 0;\n\n    if (isInter && isGreaterThanZero) return next();\n    return res.jsend.error('Inventory ID must be an integer greater than zero');\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362053
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\validationHelpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\validationHelpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "validationHelpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = {\n  checkForEmptyFields: function checkForEmptyFields(field, value) {\n    if (!value || !value.trim()) return [\"\".concat(field, \" is required\")];\n    return [];\n  },\n  checkPatternedFields: function checkPatternedFields(field, value, regex) {\n    if (!regex.test(value)) return [\"\".concat(field, \" is invalid\")];\n    return [];\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRpb25IZWxwZXJzLmpzIl0sIm5hbWVzIjpbImNoZWNrRm9yRW1wdHlGaWVsZHMiLCJmaWVsZCIsInZhbHVlIiwidHJpbSIsImNoZWNrUGF0dGVybmVkRmllbGRzIiwicmVnZXgiLCJ0ZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxtQkFBbUIsRUFBRSw2QkFBQ0MsS0FBRCxFQUFRQyxLQUFSLEVBQWtCO0FBQ3JDLFFBQUksQ0FBQ0EsS0FBRCxJQUFVLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixFQUFmLEVBQTZCLE9BQU8sV0FBSUYsS0FBSixrQkFBUDtBQUM3QixXQUFPLEVBQVA7QUFDRCxHQUpZO0FBTWJHLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDSCxLQUFELEVBQVFDLEtBQVIsRUFBZUcsS0FBZixFQUF5QjtBQUM3QyxRQUFJLENBQUNBLEtBQUssQ0FBQ0MsSUFBTixDQUFXSixLQUFYLENBQUwsRUFBd0IsT0FBTyxXQUFJRCxLQUFKLGlCQUFQO0FBQ3hCLFdBQU8sRUFBUDtBQUNEO0FBVFksQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhBTU1FRFxcRG9jdW1lbnRzXFxHaXRIdWJcXFRlYW13b3JrXFxzcmNcXHV0aWxpdGllcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgY2hlY2tGb3JFbXB0eUZpZWxkczogKGZpZWxkLCB2YWx1ZSkgPT4ge1xuICAgIGlmICghdmFsdWUgfHwgIXZhbHVlLnRyaW0oKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgcmVxdWlyZWRgXTtcbiAgICByZXR1cm4gW107XG4gIH0sXG5cbiAgY2hlY2tQYXR0ZXJuZWRGaWVsZHM6IChmaWVsZCwgdmFsdWUsIHJlZ2V4KSA9PiB7XG4gICAgaWYgKCFyZWdleC50ZXN0KHZhbHVlKSkgcmV0dXJuIFtgJHtmaWVsZH0gaXMgaW52YWxpZGBdO1xuICAgIHJldHVybiBbXTtcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "validationHelpers.js"
      ],
      "names": [
        "checkForEmptyFields",
        "field",
        "value",
        "trim",
        "checkPatternedFields",
        "regex",
        "test"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,mBAAmB,EAAE,6BAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,QAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAAN,EAAf,EAA6B,OAAO,WAAIF,KAAJ,kBAAP;AAC7B,WAAO,EAAP;AACD,GAJY;AAMbG,EAAAA,oBAAoB,EAAE,8BAACH,KAAD,EAAQC,KAAR,EAAeG,KAAf,EAAyB;AAC7C,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWJ,KAAX,CAAL,EAAwB,OAAO,WAAID,KAAJ,iBAAP;AACxB,WAAO,EAAP;AACD;AATY,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export default {\n  checkForEmptyFields: (field, value) => {\n    if (!value || !value.trim()) return [`${field} is required`];\n    return [];\n  },\n\n  checkPatternedFields: (field, value, regex) => {\n    if (!regex.test(value)) return [`${field} is invalid`];\n    return [];\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362075
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\utilities\\\\regexen.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities\\regexen.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
        "sourceFileName": "regexen.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.descriptionRegex = exports.passwordRegex = exports.numberRegex = exports.emailRegex = void 0;\nvar emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexports.emailRegex = emailRegex;\nvar numberRegex = /^\\d$/;\nexports.numberRegex = numberRegex;\nvar passwordRegex = /^.{6,}$/;\nexports.passwordRegex = passwordRegex;\nvar descriptionRegex = /[a-zA-Z .]{20,}/;\nexports.descriptionRegex = descriptionRegex;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2V4ZW4uanMiXSwibmFtZXMiOlsiZW1haWxSZWdleCIsIm51bWJlclJlZ2V4IiwicGFzc3dvcmRSZWdleCIsImRlc2NyaXB0aW9uUmVnZXgiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLFVBQVUsR0FBRywyREFBbkI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHLE1BQXBCOztBQUNBLElBQU1DLGFBQWEsR0FBRyxTQUF0Qjs7QUFDQSxJQUFNQyxnQkFBZ0IsR0FBRyxpQkFBekIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFx1dGlsaXRpZXMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1haWxSZWdleCA9IC9eKFthLXpBLVowLTlfLi1dKStAKChbYS16QS1aMC05LV0pK1xcLikrKFthLXpBLVowLTldezN9KSskLztcbmV4cG9ydCBjb25zdCBudW1iZXJSZWdleCA9IC9eXFxkJC87XG5leHBvcnQgY29uc3QgcGFzc3dvcmRSZWdleCA9IC9eLns2LH0kLztcbmV4cG9ydCBjb25zdCBkZXNjcmlwdGlvblJlZ2V4ID0gL1thLXpBLVogLl17MjAsfS87XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "regexen.js"
      ],
      "names": [
        "emailRegex",
        "numberRegex",
        "passwordRegex",
        "descriptionRegex"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,UAAU,GAAG,2DAAnB;;AACA,IAAMC,WAAW,GAAG,MAApB;;AACA,IAAMC,aAAa,GAAG,SAAtB;;AACA,IAAMC,gBAAgB,GAAG,iBAAzB",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\utilities",
      "sourcesContent": [
        "export const emailRegex = /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{3})+$/;\nexport const numberRegex = /^\\d$/;\nexport const passwordRegex = /^.{6,}$/;\nexport const descriptionRegex = /[a-zA-Z .]{20,}/;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362072
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\middlewares\\\\authenticator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares\\authenticator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
        "sourceFileName": "authenticator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = function _default(req, res, next) {\n  var token = req.cookies.token;\n  if (!token) return res.jsend.error('Unauthenticated!');\n\n  try {\n    var user = _jsonwebtoken[\"default\"].decode(token, process.env.SECRET);\n\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error\n    });\n  }\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0b3IuanMiXSwibmFtZXMiOlsicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiY29va2llcyIsImpzZW5kIiwiZXJyb3IiLCJ1c2VyIiwiand0IiwiZGVjb2RlIiwicHJvY2VzcyIsImVudiIsIlNFQ1JFVCIsIm1lc3NhZ2UiLCJkYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7ZUFFZSxrQkFBQ0EsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFBQSxNQUN6QkMsS0FEeUIsR0FDZkgsR0FBRyxDQUFDSSxPQURXLENBQ3pCRCxLQUR5QjtBQUVqQyxNQUFJLENBQUNBLEtBQUwsRUFBWSxPQUFPRixHQUFHLENBQUNJLEtBQUosQ0FBVUMsS0FBVixDQUFnQixrQkFBaEIsQ0FBUDs7QUFFWixNQUFJO0FBQ0YsUUFBTUMsSUFBSSxHQUFHQyx5QkFBSUMsTUFBSixDQUFXTixLQUFYLEVBQWtCTyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsTUFBOUIsQ0FBYjs7QUFDQVosSUFBQUEsR0FBRyxDQUFDTyxJQUFKLEdBQVdBLElBQVg7QUFDQSxXQUFPTCxJQUFJLEVBQVg7QUFDRCxHQUpELENBSUUsT0FBT0ksS0FBUCxFQUFjO0FBQ2QsV0FBT0wsR0FBRyxDQUFDSSxLQUFKLENBQVVDLEtBQVYsQ0FBZ0I7QUFDckJPLE1BQUFBLE9BQU8sRUFBRSx1QkFEWTtBQUVyQkMsTUFBQUEsSUFBSSxFQUFFUjtBQUZlLEtBQWhCLENBQVA7QUFJRDtBQUNGLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIQU1NRURcXERvY3VtZW50c1xcR2l0SHViXFxUZWFtd29ya1xcc3JjXFxtaWRkbGV3YXJlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuZXhwb3J0IGRlZmF1bHQgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHsgdG9rZW4gfSA9IHJlcS5jb29raWVzO1xuICBpZiAoIXRva2VuKSByZXR1cm4gcmVzLmpzZW5kLmVycm9yKCdVbmF1dGhlbnRpY2F0ZWQhJyk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gand0LmRlY29kZSh0b2tlbiwgcHJvY2Vzcy5lbnYuU0VDUkVUKTtcbiAgICByZXEudXNlciA9IHVzZXI7XG4gICAgcmV0dXJuIG5leHQoKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gcmVzLmpzZW5kLmVycm9yKHtcbiAgICAgIG1lc3NhZ2U6ICdhdXRoZW50aWNhdGlvbiBmYWlsZWQnLFxuICAgICAgZGF0YTogZXJyb3IsXG4gICAgfSk7XG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "authenticator.js"
      ],
      "names": [
        "req",
        "res",
        "next",
        "token",
        "cookies",
        "jsend",
        "error",
        "user",
        "jwt",
        "decode",
        "process",
        "env",
        "SECRET",
        "message",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAEe,kBAACA,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,MACzBC,KADyB,GACfH,GAAG,CAACI,OADW,CACzBD,KADyB;AAEjC,MAAI,CAACA,KAAL,EAAY,OAAOF,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB,kBAAhB,CAAP;;AAEZ,MAAI;AACF,QAAMC,IAAI,GAAGC,yBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,MAA9B,CAAb;;AACAZ,IAAAA,GAAG,CAACO,IAAJ,GAAWA,IAAX;AACA,WAAOL,IAAI,EAAX;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACd,WAAOL,GAAG,CAACI,KAAJ,CAAUC,KAAV,CAAgB;AACrBO,MAAAA,OAAO,EAAE,uBADY;AAErBC,MAAAA,IAAI,EAAER;AAFe,KAAhB,CAAP;AAID;AACF,C",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\middlewares",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\n\nexport default (req, res, next) => {\n  const { token } = req.cookies;\n  if (!token) return res.jsend.error('Unauthenticated!');\n\n  try {\n    const user = jwt.decode(token, process.env.SECRET);\n    req.user = user;\n    return next();\n  } catch (error) {\n    return res.jsend.error({\n      message: 'authentication failed',\n      data: error,\n    });\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572532362050
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, email, firstName, lastName, password;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // check for existence\n              _req$body = req.body, email = _req$body.email, firstName = _req$body.firstName, lastName = _req$body.lastName, password = _req$body.password;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(error, results) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.t0 = _dbconnect[\"default\"];\n                            _context.t1 = email;\n                            _context.t2 = firstName;\n                            _context.t3 = lastName;\n                            _context.next = 7;\n                            return _bcrypt[\"default\"].hash(password, 10);\n\n                          case 7:\n                            _context.t4 = _context.sent;\n                            _context.t5 = [_context.t1, _context.t2, _context.t3, _context.t4];\n\n                            _context.t6 = function (err, result) {\n                              // signin jwt and wrap in a cookie\n                              var token = _jsonwebtoken[\"default\"].sign({\n                                userId: result.rows[0].id\n                              }, process.env.SECRET);\n\n                              res.cookie('userid', result.rows[0].id, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              res.cookie('token', token, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              return res.jsend.success({\n                                user_id: result.rows[0].id,\n                                is_admin: result.rows[0].is_admin,\n                                Token: token\n                              });\n                            };\n\n                            _context.t0.query.call(_context.t0, 'INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', _context.t5, _context.t6);\n\n                          case 11:\n                            if (!(results.rows[0] !== undefined)) {\n                              _context.next = 13;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                          case 13:\n                            return _context.abrupt(\"return\", null);\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function signup(_x, _x2) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  // user login logic\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, email, password;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!error) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context3.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context3.sent;\n\n                          if (match) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context3.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function login(_x5, _x6) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "signup",
        "req",
        "res",
        "body",
        "email",
        "firstName",
        "lastName",
        "password",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "bcrypt",
        "hash",
        "err",
        "result",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "jsend",
        "success",
        "user_id",
        "is_admin",
        "Token",
        "on",
        "login",
        "compare",
        "match",
        "message",
        "isAdmin"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  signup: async (req, res) => {\n    // check for existence\n    const {\n      email, firstName, lastName, password,\n    } = req.body;\n    try {\n      pool.query('SELECT email FROM employee WHERE email = $1', [email], async (error, results) => {\n        // user does not exist\n        if (results.rows[0] === undefined) {\n          pool.query('INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', [email, firstName, lastName, await bcrypt.hash(password, 10)], (err, result) => {\n            // signin jwt and wrap in a cookie\n            const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n            res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            return res.jsend.success({\n              user_id: result.rows[0].id,\n              is_admin: result.rows[0].is_admin,\n              Token: token,\n            });\n          });\n        }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n        return null;\n      });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  login: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572541562566
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\gif.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gif.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gif.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gif.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "gif.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, email, firstName, lastName, password;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // check for existence\n              _req$body = req.body, email = _req$body.email, firstName = _req$body.firstName, lastName = _req$body.lastName, password = _req$body.password;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(error, results) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.t0 = _dbconnect[\"default\"];\n                            _context.t1 = email;\n                            _context.t2 = firstName;\n                            _context.t3 = lastName;\n                            _context.next = 7;\n                            return _bcrypt[\"default\"].hash(password, 10);\n\n                          case 7:\n                            _context.t4 = _context.sent;\n                            _context.t5 = [_context.t1, _context.t2, _context.t3, _context.t4];\n\n                            _context.t6 = function (err, result) {\n                              // signin jwt and wrap in a cookie\n                              var token = _jsonwebtoken[\"default\"].sign({\n                                userId: result.rows[0].id\n                              }, process.env.SECRET);\n\n                              res.cookie('userid', result.rows[0].id, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              res.cookie('token', token, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              return res.jsend.success({\n                                user_id: result.rows[0].id,\n                                is_admin: result.rows[0].is_admin,\n                                Token: token\n                              });\n                            };\n\n                            _context.t0.query.call(_context.t0, 'INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', _context.t5, _context.t6);\n\n                          case 11:\n                            if (!(results.rows[0] !== undefined)) {\n                              _context.next = 13;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                          case 13:\n                            return _context.abrupt(\"return\", null);\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // user login logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, email, password;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!error) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context3.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context3.sent;\n\n                          if (match) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context3.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function _delete(_x5, _x6) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // user login logic\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body3, email, password;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body3 = req.body, email = _req$body3.email, password = _req$body3.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref3 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!error) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context5.next = 4;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context5.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context5.sent;\n\n                          if (match) {\n                            _context5.next = 9;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context5.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x11, _x12) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function getOne(_x9, _x10) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user login logic\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(req, res) {\n      var _req$body4, email, password;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _req$body4 = req.body, email = _req$body4.email, password = _req$body4.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee7(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (!error) {\n                            _context7.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context7.next = 4;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context7.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context7.sent;\n\n                          if (match) {\n                            _context7.next = 9;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context7.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x15, _x16) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function createComment(_x13, _x14) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gif.js"
      ],
      "names": [
        "create",
        "req",
        "res",
        "body",
        "email",
        "firstName",
        "lastName",
        "password",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "bcrypt",
        "hash",
        "err",
        "result",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "jsend",
        "success",
        "user_id",
        "is_admin",
        "Token",
        "on",
        "compare",
        "match",
        "message",
        "isAdmin",
        "getOne",
        "createComment"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  create: async (req, res) => {\n    // check for existence\n    const {\n      email, firstName, lastName, password,\n    } = req.body;\n    try {\n      pool.query('SELECT email FROM employee WHERE email = $1', [email], async (error, results) => {\n        // user does not exist\n        if (results.rows[0] === undefined) {\n          pool.query('INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', [email, firstName, lastName, await bcrypt.hash(password, 10)], (err, result) => {\n            // signin jwt and wrap in a cookie\n            const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n            res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            return res.jsend.success({\n              user_id: result.rows[0].id,\n              is_admin: result.rows[0].is_admin,\n              Token: token,\n            });\n          });\n        }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n        return null;\n      });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  delete: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  getOne: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  createComment: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573118983513
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\article.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\article.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\article.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\article.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "article.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, email, firstName, lastName, password;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // check for existence\n              _req$body = req.body, email = _req$body.email, firstName = _req$body.firstName, lastName = _req$body.lastName, password = _req$body.password;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(error, results) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.t0 = _dbconnect[\"default\"];\n                            _context.t1 = email;\n                            _context.t2 = firstName;\n                            _context.t3 = lastName;\n                            _context.next = 7;\n                            return _bcrypt[\"default\"].hash(password, 10);\n\n                          case 7:\n                            _context.t4 = _context.sent;\n                            _context.t5 = [_context.t1, _context.t2, _context.t3, _context.t4];\n\n                            _context.t6 = function (err, result) {\n                              // signin jwt and wrap in a cookie\n                              var token = _jsonwebtoken[\"default\"].sign({\n                                userId: result.rows[0].id\n                              }, process.env.SECRET);\n\n                              res.cookie('userid', result.rows[0].id, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              res.cookie('token', token, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              return res.jsend.success({\n                                user_id: result.rows[0].id,\n                                is_admin: result.rows[0].is_admin,\n                                Token: token\n                              });\n                            };\n\n                            _context.t0.query.call(_context.t0, 'INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', _context.t5, _context.t6);\n\n                          case 11:\n                            if (!(results.rows[0] !== undefined)) {\n                              _context.next = 13;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                          case 13:\n                            return _context.abrupt(\"return\", null);\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // user login logic\n  edit: function () {\n    var _edit = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, email, password;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!error) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context3.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context3.sent;\n\n                          if (match) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context3.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function edit(_x5, _x6) {\n      return _edit.apply(this, arguments);\n    }\n\n    return edit;\n  }(),\n  // user login logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body3, email, password;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body3 = req.body, email = _req$body3.email, password = _req$body3.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref3 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!error) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context5.next = 4;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context5.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context5.sent;\n\n                          if (match) {\n                            _context5.next = 9;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context5.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x11, _x12) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function _delete(_x9, _x10) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // user login logic\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(req, res) {\n      var _req$body4, email, password;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _req$body4 = req.body, email = _req$body4.email, password = _req$body4.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee7(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (!error) {\n                            _context7.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context7.next = 4;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context7.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context7.sent;\n\n                          if (match) {\n                            _context7.next = 9;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context7.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x15, _x16) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function getOne(_x13, _x14) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user login logic\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(req, res) {\n      var _req$body5, email, password;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _req$body5 = req.body, email = _req$body5.email, password = _req$body5.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref5 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee9(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          if (!error) {\n                            _context9.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context9.next = 4;\n                            break;\n                          }\n\n                          return _context9.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context9.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context9.sent;\n\n                          if (match) {\n                            _context9.next = 9;\n                            break;\n                          }\n\n                          return _context9.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context9.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x19, _x20) {\n                  return _ref5.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function createComment(_x17, _x18) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // user login logic\n  findAllArticleOrGif: function () {\n    var _findAllArticleOrGif = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(req, res) {\n      var _req$body6, email, password;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _req$body6 = req.body, email = _req$body6.email, password = _req$body6.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref6 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee11(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                      switch (_context11.prev = _context11.next) {\n                        case 0:\n                          if (!error) {\n                            _context11.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context11.next = 4;\n                            break;\n                          }\n\n                          return _context11.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context11.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context11.sent;\n\n                          if (match) {\n                            _context11.next = 9;\n                            break;\n                          }\n\n                          return _context11.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context11.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context11.stop();\n                      }\n                    }\n                  }, _callee11);\n                }));\n\n                return function (_x23, _x24) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    function findAllArticleOrGif(_x21, _x22) {\n      return _findAllArticleOrGif.apply(this, arguments);\n    }\n\n    return findAllArticleOrGif;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "article.js"
      ],
      "names": [
        "create",
        "req",
        "res",
        "body",
        "email",
        "firstName",
        "lastName",
        "password",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "bcrypt",
        "hash",
        "err",
        "result",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "jsend",
        "success",
        "user_id",
        "is_admin",
        "Token",
        "on",
        "edit",
        "compare",
        "match",
        "message",
        "isAdmin",
        "getOne",
        "createComment",
        "findAllArticleOrGif"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  create: async (req, res) => {\n    // check for existence\n    const {\n      email, firstName, lastName, password,\n    } = req.body;\n    try {\n      pool.query('SELECT email FROM employee WHERE email = $1', [email], async (error, results) => {\n        // user does not exist\n        if (results.rows[0] === undefined) {\n          pool.query('INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', [email, firstName, lastName, await bcrypt.hash(password, 10)], (err, result) => {\n            // signin jwt and wrap in a cookie\n            const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n            res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            return res.jsend.success({\n              user_id: result.rows[0].id,\n              is_admin: result.rows[0].is_admin,\n              Token: token,\n            });\n          });\n        }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n        return null;\n      });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  edit: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  delete: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n\n  // user login logic\n  getOne: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  createComment: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  findAllArticleOrGif: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573119213261
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\gifs.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\gifs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "gifs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, email, firstName, lastName, password;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // check for existence\n              _req$body = req.body, email = _req$body.email, firstName = _req$body.firstName, lastName = _req$body.lastName, password = _req$body.password;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(error, results) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.t0 = _dbconnect[\"default\"];\n                            _context.t1 = email;\n                            _context.t2 = firstName;\n                            _context.t3 = lastName;\n                            _context.next = 7;\n                            return _bcrypt[\"default\"].hash(password, 10);\n\n                          case 7:\n                            _context.t4 = _context.sent;\n                            _context.t5 = [_context.t1, _context.t2, _context.t3, _context.t4];\n\n                            _context.t6 = function (err, result) {\n                              // signin jwt and wrap in a cookie\n                              var token = _jsonwebtoken[\"default\"].sign({\n                                userId: result.rows[0].id\n                              }, process.env.SECRET);\n\n                              res.cookie('userid', result.rows[0].id, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              res.cookie('token', token, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              return res.jsend.success({\n                                user_id: result.rows[0].id,\n                                is_admin: result.rows[0].is_admin,\n                                Token: token\n                              });\n                            };\n\n                            _context.t0.query.call(_context.t0, 'INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', _context.t5, _context.t6);\n\n                          case 11:\n                            if (!(results.rows[0] !== undefined)) {\n                              _context.next = 13;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                          case 13:\n                            return _context.abrupt(\"return\", null);\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // user login logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, email, password;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!error) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context3.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context3.sent;\n\n                          if (match) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context3.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function _delete(_x5, _x6) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // user login logic\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body3, email, password;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body3 = req.body, email = _req$body3.email, password = _req$body3.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref3 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!error) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context5.next = 4;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context5.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context5.sent;\n\n                          if (match) {\n                            _context5.next = 9;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context5.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x11, _x12) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function getOne(_x9, _x10) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user login logic\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(req, res) {\n      var _req$body4, email, password;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _req$body4 = req.body, email = _req$body4.email, password = _req$body4.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee7(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (!error) {\n                            _context7.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context7.next = 4;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context7.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context7.sent;\n\n                          if (match) {\n                            _context7.next = 9;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context7.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x15, _x16) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function createComment(_x13, _x14) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // user login logic\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(req, res) {\n      var _req$body5, email, password;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _req$body5 = req.body, email = _req$body5.email, password = _req$body5.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref5 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee9(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          if (!error) {\n                            _context9.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context9.next = 4;\n                            break;\n                          }\n\n                          return _context9.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context9.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context9.sent;\n\n                          if (match) {\n                            _context9.next = 9;\n                            break;\n                          }\n\n                          return _context9.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context9.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x19, _x20) {\n                  return _ref5.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function deleteComment(_x17, _x18) {\n      return _deleteComment.apply(this, arguments);\n    }\n\n    return deleteComment;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gifs.js"
      ],
      "names": [
        "create",
        "req",
        "res",
        "body",
        "email",
        "firstName",
        "lastName",
        "password",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "bcrypt",
        "hash",
        "err",
        "result",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "jsend",
        "success",
        "user_id",
        "is_admin",
        "Token",
        "on",
        "compare",
        "match",
        "message",
        "isAdmin",
        "getOne",
        "createComment",
        "deleteComment"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  create: async (req, res) => {\n    // check for existence\n    const {\n      email, firstName, lastName, password,\n    } = req.body;\n    try {\n      pool.query('SELECT email FROM employee WHERE email = $1', [email], async (error, results) => {\n        // user does not exist\n        if (results.rows[0] === undefined) {\n          pool.query('INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', [email, firstName, lastName, await bcrypt.hash(password, 10)], (err, result) => {\n            // signin jwt and wrap in a cookie\n            const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n            res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            return res.jsend.success({\n              user_id: result.rows[0].id,\n              is_admin: result.rows[0].is_admin,\n              Token: token,\n            });\n          });\n        }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n        return null;\n      });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  delete: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  getOne: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  createComment: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n\n  // user login logic\n  deleteComment: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573145875819
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"filename\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\\\\src\\\\controllers\\\\articles.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\HAMMED\\\\Documents\\\\GitHub\\\\Teamwork\",\"plugins\":[{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers\\articles.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
        "sourceFileName": "articles.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _dbconnect = _interopRequireDefault(require(\"../database/dbconnect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  create: function () {\n    var _create = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(req, res) {\n      var _req$body, email, firstName, lastName, password;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // check for existence\n              _req$body = req.body, email = _req$body.email, firstName = _req$body.firstName, lastName = _req$body.lastName, password = _req$body.password;\n\n              try {\n                _dbconnect[\"default\"].query('SELECT email FROM employee WHERE email = $1', [email],\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee(error, results) {\n                    return regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(results.rows[0] === undefined)) {\n                              _context.next = 11;\n                              break;\n                            }\n\n                            _context.t0 = _dbconnect[\"default\"];\n                            _context.t1 = email;\n                            _context.t2 = firstName;\n                            _context.t3 = lastName;\n                            _context.next = 7;\n                            return _bcrypt[\"default\"].hash(password, 10);\n\n                          case 7:\n                            _context.t4 = _context.sent;\n                            _context.t5 = [_context.t1, _context.t2, _context.t3, _context.t4];\n\n                            _context.t6 = function (err, result) {\n                              // signin jwt and wrap in a cookie\n                              var token = _jsonwebtoken[\"default\"].sign({\n                                userId: result.rows[0].id\n                              }, process.env.SECRET);\n\n                              res.cookie('userid', result.rows[0].id, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              res.cookie('token', token, {\n                                expires: new Date(Date.now() + 3600000),\n                                httpOnly: true\n                              });\n                              return res.jsend.success({\n                                user_id: result.rows[0].id,\n                                is_admin: result.rows[0].is_admin,\n                                Token: token\n                              });\n                            };\n\n                            _context.t0.query.call(_context.t0, 'INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', _context.t5, _context.t6);\n\n                          case 11:\n                            if (!(results.rows[0] !== undefined)) {\n                              _context.next = 13;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", res.jsend.error('Email already exists'));\n\n                          case 13:\n                            return _context.abrupt(\"return\", null);\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n              } catch (error) {\n                (0, _debug[\"default\"])('app:*')(error);\n              } // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signup');\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function create(_x, _x2) {\n      return _create.apply(this, arguments);\n    }\n\n    return create;\n  }(),\n  // user login logic\n  edit: function () {\n    var _edit = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(req, res) {\n      var _req$body2, email, password;\n\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee3(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!error) {\n                            _context3.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context3.next = 4;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context3.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context3.sent;\n\n                          if (match) {\n                            _context3.next = 9;\n                            break;\n                          }\n\n                          return _context3.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context3.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x7, _x8) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function edit(_x5, _x6) {\n      return _edit.apply(this, arguments);\n    }\n\n    return edit;\n  }(),\n  // user login logic\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(req, res) {\n      var _req$body3, email, password;\n\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _req$body3 = req.body, email = _req$body3.email, password = _req$body3.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref3 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!error) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context5.next = 4;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context5.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context5.sent;\n\n                          if (match) {\n                            _context5.next = 9;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context5.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x11, _x12) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function _delete(_x9, _x10) {\n      return _delete2.apply(this, arguments);\n    }\n\n    return _delete;\n  }(),\n  // user login logic\n  getOne: function () {\n    var _getOne = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(req, res) {\n      var _req$body4, email, password;\n\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _req$body4 = req.body, email = _req$body4.email, password = _req$body4.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee7(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (!error) {\n                            _context7.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context7.next = 4;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context7.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context7.sent;\n\n                          if (match) {\n                            _context7.next = 9;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context7.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x15, _x16) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function getOne(_x13, _x14) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  // user login logic\n  createComment: function () {\n    var _createComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(req, res) {\n      var _req$body5, email, password;\n\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _req$body5 = req.body, email = _req$body5.email, password = _req$body5.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref5 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee9(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          if (!error) {\n                            _context9.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context9.next = 4;\n                            break;\n                          }\n\n                          return _context9.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context9.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context9.sent;\n\n                          if (match) {\n                            _context9.next = 9;\n                            break;\n                          }\n\n                          return _context9.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context9.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x19, _x20) {\n                  return _ref5.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function createComment(_x17, _x18) {\n      return _createComment.apply(this, arguments);\n    }\n\n    return createComment;\n  }(),\n  // user login logic\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee12(req, res) {\n      var _req$body6, email, password;\n\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _req$body6 = req.body, email = _req$body6.email, password = _req$body6.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref6 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee11(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                    while (1) {\n                      switch (_context11.prev = _context11.next) {\n                        case 0:\n                          if (!error) {\n                            _context11.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context11.next = 4;\n                            break;\n                          }\n\n                          return _context11.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context11.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context11.sent;\n\n                          if (match) {\n                            _context11.next = 9;\n                            break;\n                          }\n\n                          return _context11.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context11.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context11.stop();\n                      }\n                    }\n                  }, _callee11);\n                }));\n\n                return function (_x23, _x24) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    function deleteComment(_x21, _x22) {\n      return _deleteComment.apply(this, arguments);\n    }\n\n    return deleteComment;\n  }(),\n  // user login logic\n  findAllArticleOrGif: function () {\n    var _findAllArticleOrGif = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee14(req, res) {\n      var _req$body7, email, password;\n\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _req$body7 = req.body, email = _req$body7.email, password = _req$body7.password;\n\n              _dbconnect[\"default\"].query('SELECT id, email, password FROM users WHERE email = $1 ', [email],\n              /*#__PURE__*/\n              function () {\n                var _ref7 = _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee13(error, results) {\n                  var match, token;\n                  return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                    while (1) {\n                      switch (_context13.prev = _context13.next) {\n                        case 0:\n                          if (!error) {\n                            _context13.next = 2;\n                            break;\n                          }\n\n                          throw error;\n\n                        case 2:\n                          if (!(results.rows[0] === undefined)) {\n                            _context13.next = 4;\n                            break;\n                          }\n\n                          return _context13.abrupt(\"return\", res.jsend.error('Login failed, check your inputs'));\n\n                        case 4:\n                          _context13.next = 6;\n                          return _bcrypt[\"default\"].compare(password, results.rows[0].password);\n\n                        case 6:\n                          match = _context13.sent;\n\n                          if (match) {\n                            _context13.next = 9;\n                            break;\n                          }\n\n                          return _context13.abrupt(\"return\", res.jsend.error({\n                            message: 'Login failed, check your password'\n                          }));\n\n                        case 9:\n                          // sign jwt and wrap in a cookie\n                          token = _jsonwebtoken[\"default\"].sign({\n                            userId: results.rows[0].id\n                          }, process.env.SECRET);\n                          res.cookie('userid', results.rows[0].id, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          res.cookie('token', token, {\n                            expires: new Date(Date.now() + 3600000),\n                            httpOnly: true\n                          });\n                          return _context13.abrupt(\"return\", res.jsend.success({\n                            user_id: results.rows[0].id,\n                            isAdmin: results.rows[0].is_admin,\n                            Token: token\n                          }));\n\n                        case 13:\n                        case \"end\":\n                          return _context13.stop();\n                      }\n                    }\n                  }, _callee13);\n                }));\n\n                return function (_x27, _x28) {\n                  return _ref7.apply(this, arguments);\n                };\n              }()); // disconnect client after operation\n\n\n              _dbconnect[\"default\"].on('remove', function () {\n                (0, _debug[\"default\"])('app:login')('client removed @signin');\n              });\n\n            case 3:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    function findAllArticleOrGif(_x25, _x26) {\n      return _findAllArticleOrGif.apply(this, arguments);\n    }\n\n    return findAllArticleOrGif;\n  }()\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "articles.js"
      ],
      "names": [
        "create",
        "req",
        "res",
        "body",
        "email",
        "firstName",
        "lastName",
        "password",
        "pool",
        "query",
        "error",
        "results",
        "rows",
        "undefined",
        "bcrypt",
        "hash",
        "err",
        "result",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "SECRET",
        "cookie",
        "expires",
        "Date",
        "now",
        "httpOnly",
        "jsend",
        "success",
        "user_id",
        "is_admin",
        "Token",
        "on",
        "edit",
        "compare",
        "match",
        "message",
        "isAdmin",
        "getOne",
        "createComment",
        "deleteComment",
        "findAllArticleOrGif"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\HAMMED\\Documents\\GitHub\\Teamwork\\src\\controllers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport debug from 'debug';\nimport bcrypt from 'bcrypt';\nimport pool from '../database/dbconnect';\n\nexport default {\n  create: async (req, res) => {\n    // check for existence\n    const {\n      email, firstName, lastName, password,\n    } = req.body;\n    try {\n      pool.query('SELECT email FROM employee WHERE email = $1', [email], async (error, results) => {\n        // user does not exist\n        if (results.rows[0] === undefined) {\n          pool.query('INSERT INTO users (email, firstName, lastName, password) VALUES ($1, $2, $3, $4) RETURNING id, is_admin', [email, firstName, lastName, await bcrypt.hash(password, 10)], (err, result) => {\n            // signin jwt and wrap in a cookie\n            const token = jwt.sign({ userId: result.rows[0].id }, process.env.SECRET);\n            res.cookie('userid', result.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n            return res.jsend.success({\n              user_id: result.rows[0].id,\n              is_admin: result.rows[0].is_admin,\n              Token: token,\n            });\n          });\n        }\n        if (results.rows[0] !== undefined) return res.jsend.error('Email already exists'); // email exists\n        return null;\n      });\n    } catch (error) { debug('app:*')(error); }\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signup');\n    });\n  },\n  // user login logic\n  edit: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  delete: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n\n  // user login logic\n  getOne: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  createComment: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  deleteComment: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n  // user login logic\n  findAllArticleOrGif: async (req, res) => {\n    const { email, password } = req.body;\n    pool.query('SELECT id, email, password FROM users WHERE email = $1 ', [email], async (error, results) => {\n      if (error) {\n        throw error;\n      }\n      if (results.rows[0] === undefined) return res.jsend.error('Login failed, check your inputs');\n      const match = await bcrypt.compare(password, results.rows[0].password);\n      if (!match) {\n        return res.jsend.error({ message: 'Login failed, check your password' });\n      }\n      // sign jwt and wrap in a cookie\n      const token = jwt.sign({ userId: results.rows[0].id }, process.env.SECRET);\n      res.cookie('userid', results.rows[0].id, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      res.cookie('token', token, { expires: new Date(Date.now() + 3600000), httpOnly: true });\n      return res.jsend.success({\n        user_id: results.rows[0].id, isAdmin: results.rows[0].is_admin, Token: token,\n      });\n    });\n    // disconnect client after operation\n    pool.on('remove', () => {\n      debug('app:login')('client removed @signin');\n    });\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573145891866
  }
}