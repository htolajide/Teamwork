
let cloudinary = require('cloudinary').v2;
import debug from 'debug';
import pool from '../database/dbconnect';

cloudinary.config({
  cloud_name: 'ds5hogj9b',
  api_key: '657785678132187',
  api_secret: 'EcvkztYhPW8egTvRTo10OdiJpwU'
});


export default {
  create: async (req, res) => {
    // check if user is admin
    const { token, userid } = req.cookies;
    const {url, title} = req.body;
    try {
      // Upload gif to cloudinary
      await cloudinary.uploader.upload(url, { tags: 'basic_sample', "width": 200, "height": 150,  })
      .then(function (image) {
      console.log();
      console.log("** File Upload (Promise)");
      console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
      console.log("* " + image.public_id);
      console.log("* " + image.url);
      // create trip if user is admin
      pool.query('INSERT INTO gif (employee_id, imageurl, title) VALUES ($1, $2, $3) RETURNING id, imageurl, title, gifdate ', [userid, image.url, title], (err, result) => {
        if (!err) {
          return res.jsend.success({
            gifID: result.rows[0].id,
            message: 'Gif image successfully posted',
            CreatedOn: result.rows[0].gifdate,
            title: result.rows[0].title,
            imageUrl: result.rows[0].imageurl
          });
        }
          return res.jsend.error(error);
      });
    // disconnect client
    pool.on('remove', () => {
        debug('app:*')('Client Removed @ createGif');
      });
    })
    .catch(function (err) {
      console.log();
      console.log("** File Upload (Promise)");
      if (err) { debug('app:*')('Error Occured: Something wrong @createGif' + err); }
    });
  }catch (error) { debug('app:*')('Error Occured: Something wrong @createGif' + error); }   
},
  // user login logic
  delete: async (req, res) => {
    
   
  },
  // user login logic
  getOne: async (req, res) => {
    
  },
  // user login logic
  createComment: async (req, res) => {

  },

  // user login logic
  deleteComment: async (req, res) => {
    
  },
};
